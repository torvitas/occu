ACCELERATION_TRANSCEIVER	${stringTableAccelerationTransceiverTitle}
ACCELERATION_TRANSCEIVER|CHANNEL_OPERATION_MODE	${stringTableAccelerationTransceiverChannelOperationMode}
ACCELERATION_TRANSCEIVER|CHANNEL_OPERATION_MODE=OFF	${stringTableAccelerationTransceiverChannelOperationModeOff}
ACCELERATION_TRANSCEIVER|CHANNEL_OPERATION_MODE=ANY_MOTION	${stringTableAccelerationTransceiverChannelOperationModeAnyMotion}
ACCELERATION_TRANSCEIVER|CHANNEL_OPERATION_MODE=FLAT_DECT	${stringTableAccelerationTransceiverChannelOperationModeFlat}
ACCELERATION_TRANSCEIVER|MOTION=FALSE	${stringTableAccelerationTransceiverMotionDetectorMotionFalse}
ACCELERATION_TRANSCEIVER|MOTION=TRUE	${stringTableAccelerationTransceiverMotionDetectorMotionTrue}
ACCELERATION_TRANSCEIVER|MSG_FOR_POS_A	${stringTableTiltSensorMsgPosA0}
ACCELERATION_TRANSCEIVER|MSG_FOR_POS_A=CLOSED	${stringTableTiltSensorMsgPosA1}
ACCELERATION_TRANSCEIVER|MSG_FOR_POS_A=NO_MSG	${stringTableTiltSensorMsgPosA2}
ACCELERATION_TRANSCEIVER|MSG_FOR_POS_A=OPEN	${stringTableTiltSensorMsgPosA3}
ACCELERATION_TRANSCEIVER|MSG_FOR_POS_B	${stringTableTiltSensorMsgPosB0}
ACCELERATION_TRANSCEIVER|MSG_FOR_POS_B=CLOSED	${stringTableTiltSensorMsgPosB1}
ACCELERATION_TRANSCEIVER|MSG_FOR_POS_B=NO_MSG	${stringTableTiltSensorMsgPosB2}
ACCELERATION_TRANSCEIVER|MSG_FOR_POS_B=OPEN	${stringTableTiltSensorMsgPosB3}
ACCELERATION_TRANSCEIVER|NOTIFICATION_SOUND_TYPE_HIGH_TO_LOW	${stringTableAccelerationTransceiverNotificationSoundTypeHighToLow}
ACCELERATION_TRANSCEIVER|NOTIFICATION_SOUND_TYPE_LOW_TO_HIGH	${stringTableAccelerationTransceiverNotificationSoundTypeLowToHigh}
ACCELERATION_TRANSCEIVER|TRIGGER_ANGLE	${stringTableAccelerationTransceiverTriggerAngle}
ACOUSTIC_ALARM_SELECTION=DELAYED_EXTERNALLY_ARMED	${stringTableAlarmDelayedExternallyArmed}
ACOUSTIC_ALARM_SELECTION=DELAYED_INTERNALLY_ARMED	${stringTableAlarmDelayedInternallyArmed}
ACOUSTIC_ALARM_SELECTION=DISABLE_ACOUSTIC_SIGNAL	${stringTableAlarmDisableAcousticSignal}
ACOUSTIC_ALARM_SELECTION=DISARMED	${stringTableAlarmDisarmed}
ACOUSTIC_ALARM_SELECTION=ERROR	${stringTableAlarmError}
ACOUSTIC_ALARM_SELECTION=EVENT	${stringTableAlarmEvent}
ACOUSTIC_ALARM_SELECTION=EXTERNALLY_ARMED	${stringTableAlarmExternallyArmed}
ACOUSTIC_ALARM_SELECTION=FREQUENCY_ALTERNATING_LOW_HIGH	${stringTableAlarmFrequencyAlternatingLowHigh}
ACOUSTIC_ALARM_SELECTION=FREQUENCY_ALTERNATING_LOW_MID_HIGH	${stringTableAlarmFrequencyAlternatingLowMidHigh}
ACOUSTIC_ALARM_SELECTION=FREQUENCY_FALLING	${stringTableAlarmFrequencyFalling}
ACOUSTIC_ALARM_SELECTION=FREQUENCY_HIGHON_LONGOFF	${stringTableAlarmFrequencyHighOnLongOff}
ACOUSTIC_ALARM_SELECTION=FREQUENCY_HIGHON_OFF	${stringTableAlarmFrequencyHighOnOff}
ACOUSTIC_ALARM_SELECTION=FREQUENCY_LOWON_LONGOFF_HIGHON_LONGOFF	${stringTableAlarmFrequencyLowOnLongOffHighOnLongOff}
ACOUSTIC_ALARM_SELECTION=FREQUENCY_LOWON_OFF_HIGHON_OFF	${stringTableAlarmFrequencyLowOnOffHighonOff}
ACOUSTIC_ALARM_SELECTION=FREQUENCY_RISING	${stringTableAlarmFrequencyRising}
ACOUSTIC_ALARM_SELECTION=FREQUENCY_RISING_AND_FALLING	${stringTableAlarmFrequencyRisingAndFalling}
ACOUSTIC_ALARM_SELECTION=INTERNALLY_ARMED	${stringTableAlarmInternallyArmed}
ACOUSTIC_ALARM_SELECTION=LOW_BATTERY	${stringTableAlarmLowBattery}
ACTOR_SECURITY	${stringTableActorSecurityTitle}
ACTOR_SECURITY|ON_TIME	${stringTableActorSecurityOnTime}
ACTOR_SECURITY|SECURE_STATE=FALSE	${stringTableActorSecuritySecureStateFalse}
ACTOR_SECURITY|SECURE_STATE=TRUE	${stringTableActorSecuritySecureStateTrue}
ACTOR_WINDOW	${stringTableActorWindowTitle}
ACTOR_WINDOW|ERROR=NO_ERROR	${stringTableActorWindowNoError}
ACTOR_WINDOW|ERR_DETECT_EIA485_SERVICE=TRUE	${stringTableActorWindowErrorETA485}
ACTOR_WINDOW|ERR_TTCU_INTERNAL_TEST=TRUE	${stringTableActorWindowErrorWindowControlDevice}
ACTOR_WINDOW|ERR_TTCU_LOCK_ROLLERS_SHORTED=TRUE	${stringTableActorWindowErrorLockRoller}
ACTOR_WINDOW|ERR_TTCU_MAGNET_ERROR=TRUE	${stringTableActorWindowErrorMagnet}
ACTOR_WINDOW|ERR_TTCU_POWER_ONTIME_EXCEEDED=TRUE	${stringTableActorWindowErrorOntimeExceeded}
ACTOR_WINDOW|ERR_TTCU_SENSOR_STRIP_DISCONNECTED=TRUE	${stringTableActorWindowErrorSensorStrip_1}
ACTOR_WINDOW|ERR_TTCU_SENSOR_STRIP_SHORTED=TRUE	${stringTableActorWindowErrorSensorStrip_0}
ACTOR_WINDOW|ERR_TTCU_STOP_AFTER_10_CLOSING_TRIES=TRUE	${stringTableActorWindowErrorCancel10}
ACTOR_WINDOW|ERR_TTCU_TURN_TILT_ACT_ALLOY_MOSFET=TRUE	${stringTableActorWindowErrorMOSFET}
ACTOR_WINDOW|ERR_TTCU_TURN_TILT_ACT_ASYNCHRON=TRUE	${stringTableActorWindowErrorAsynchron}
ACTOR_WINDOW|ERR_TTCU_TURN_TILT_ACT_BLOCKED=TRUE	${stringTableActorWindowErrorTurnTiltAct_1}
ACTOR_WINDOW|ERR_TTCU_TURN_TILT_ACT_CONTACT_PROBLEM=TRUE	${stringTableActorWindowErrorTurnTiltAct_3}
ACTOR_WINDOW|ERR_TTCU_TURN_TILT_ACT_NO_SPEED_SIGNAL=TRUE	${stringTableActorWindowErrorNoSpeedSignal}
ACTOR_WINDOW|ERR_TTCU_TURN_TILT_ACT_OVERCURRENT=TRUE	${stringTableActorWindowErrorTurnTiltAct_2}
ACTOR_WINDOW|ERR_TTCU_TURN_TILT_ACT_SHORTED=TRUE	${stringTableActorWindowErrorTurnTiltAct_0}
ACTOR_WINDOW|ERR_TTCU_WRONG_VOLTAGE_POLARITY=TRUE	${stringTableActorWindowErrorVoltageWrongPolarity}
ACTOR_WINDOW|ERR_TTM_INTERNAL=TRUE	${stringTableActorWindowErrorTipTronicModul}
ACTOR_WINDOW|ERR_TTM_OVERVOLT=NO_ERROR	${stringTableActorWindowErrorVoltageOverNoError}
ACTOR_WINDOW|ERR_TTM_OVERVOLT=OVERVOLT	${stringTableActorWindowErrorVoltageOver}
ACTOR_WINDOW|ERR_TTM_UNDERVOLT=NO_ERROR	${stringTableActorWindowErrorVoltageUnderNoError}
ACTOR_WINDOW|ERR_TTM_UNDERVOLT=UNDERVOLT	${stringTableActorWindowErrorVoltageUnder}
ACTOR_WINDOW|ERR_WINDOW_NOT_FOUND=TRUE	${stringTableActorWindowErrorNotFound}
ACTOR_WINDOW|ERR_WIN_STAY_IN_INITIAL_OPERATION=TRUE	${stringTableActorWindowErrorStayInInitial}
ACTOR_WINDOW|FREE_TO_USE=TRUE	${stringTableActorWindowErrorFreeToUse}
ACTOR_WINDOW|HANDLE_LED_MODE=DIMMED_ON	${stringTableActorWindowLEDDimmed}
ACTOR_WINDOW|HANDLE_LED_MODE=FULL_ON	${stringTableActorWindowLEDOn}
ACTOR_WINDOW|HANDLE_LED_MODE=OFF	${stringTableActorWindowLEDOff}
ACTOR_WINDOW|HANDLE_LOCK=FALSE	${stringTableActorWindowHandleLockFalse}
ACTOR_WINDOW|HANDLE_LOCK=TRUE	${stringTableActorWindowHandleLockTrue}
ACTOR_WINDOW|LEVEL	${stringTableActorWindowLevel}
ACTOR_WINDOW|LEVEL=LOCKED	${stringTableActorWindowLevelLocked}
ACTOR_WINDOW|ON_TIME	${stringTableActorWindowOnTime}
ACTOR_WINDOW|RELEASE_TURN=FALSE	${stringTableActorWindowReleaseTurnFalse}
ACTOR_WINDOW|RELEASE_TURN=TRUE	${stringTableActorWindowReleaseTurnTrue}
ACTOR_WINDOW|SHEV_POS=ZULUFT_BLOCKED	${stringTableActorWindowVentBlocked}
ACTOR_WINDOW|SHEV_POS=ZULUFT_DEACTIVATED	${stringTableActorWindowVentDeactivated}
ACTOR_WINDOW|SHEV_POS=ZULUFT_UNBLOCKED	${stringTableActorWindowVentUnblocked}
ACTOR_WINDOW|STATUSINFO_MINDELAY	${stringTableActorWindowStatusInfoMinDelay}
ACTOR_WINDOW|STATUSINFO_MINDELAY=NOT_USED	${stringTableActorWindowStatusInfoNotUsed}
ACTOR_WINDOW|STATUSINFO_RANDOM	${stringTableActorWindowStatusInfoRandom}
ACTOR_WINDOW|STICKY_ERR_TTM_OVERVOLT=OVERVOLT	${stringTableActorWindowErrorVoltageOver}
ACTOR_WINDOW|STICKY_ERR_TTM_OVERVOLT=WAS_OVERVOLT	${stringTableActorWindowErrorStickyWasVoltageOver}
ACTOR_WINDOW|STICKY_ERR_TTM_UNDERVOLT=UNDERVOLT	${stringTableActorWindowErrorVoltageUnder}
ACTOR_WINDOW|STICKY_ERR_TTM_UNDERVOLT=WAS_UNDERVOLT	${stringTableActorWindowErrorStickyWasVoltageUnder}
ACTOR_WINDOW|STOP	${stringTableActorWindowStop}
ACTOR_WINDOW|WINTER_MODE	${stringTableActorWindowWinterMode}
ACTOR_WINDOW|WINTER_MODE=NOT_USED	${stringTableActorWindowWinterModeNotUsed}
ACTOR_WINDOW|WIN_RELEASE=FALSE	${stringTableActorWindowReleaseFalse}
ACTOR_WINDOW|WIN_RELEASE=TRUE	${stringTableActorWindowReleaseTrue}
ACTOR_WINDOW|WIN_RELEASE_ACT	${stringTableActorWindowReleaseAction}
ACTUAL_HUMIDITY	${stringTableWeatherHumidity}
ACTUAL_TEMPERATURE	${stringTableClimateControlRTTransceiverActualTemp}
AKKU|LEVEL	${stringTableAccuLevel}
AKKU|STATUS=CHARGE	${stringTableAccuCharging}
AKKU|STATUS=DISCHARGE	${stringTableAccuDischarge}
AKKU|STATUS=STATE_UNKNOWN	${stringTableAccuStateUnkown}
AKKU|STATUS=TRICKLE_CHARGE	${stringTableAccuTrickleCharg}
ALARMACTUATOR	${stringTableAlarmActuatorTitle}
ALARMACTUATOR|CYCLIC_INFO_MSG	${stringTableAlarmActuatorCyclicInfoMsg}
ALARMACTUATOR|ERROR_BATTERY=BATTERY_DEFECT	${stringTableBatteryDefect}
ALARMACTUATOR|ERROR_BATTERY=NO_ERROR	${stringTableBatteryNotDefect}
ALARMACTUATOR|ON_TIME	${stringTableAlarmActuatorOnTime}
ALARMACTUATOR|SABOTAGE_MSG	${stringTableAlarmActuatorSabotageMsg}
ALARMACTUATOR|STATE=FALSE	${stringTableAlarmActuatorStateFalse}
ALARMACTUATOR|STATE=TRUE	${stringTableAlarmActuatorStateTrue}
ALARMTIME_MAX	${stringTableAlarmTimeMax}
ALARM_SWITCH_VIRTUAL_RECEIVER	${stringTableSwitchSensorTitle}
ALL_LEDS	${stringTableAllLEDs}
ANALOG_INPUT	${stringTableAnalog}
ANALOG_OUTPUT	${stringTableAnalog}
ANALOG_OUTPUT_TRANSCEIVER	${stringTableAnalogOutputTransceiverTitle}
ANALOG_OUTPUT_TRANSCEIVER|LEVEL	${stringTableAnalogOutputTransceiverLevel}
ARMING	${stringTableSirenArmingTitle}
ARMING|ACOUSTIC_ALLSENS_ARM	${stringTableAcousticAllSensArm}
ARMING|ACOUSTIC_ALLSENS_DELAY_ARM	${stringTableAcousticAllsensDelayArm}
ARMING|ACOUSTIC_DISARM	${stringTableAcousticDisarm}
ARMING|ACOUSTIC_EXTSENS_ARM	${stringTableAcousticExtsensArm}
ARMING|ACOUSTIC_EXTSENS_DELAY_ARM	${stringTableAcousticExtsensDelayArm}
ARMING|ACOUSTIC_MULTI_DELAY_ARM	${stringTableAcousticMultiDelayArm}
ARMING|OPTIC_ALLSENS_ARM	${stringTableOpticAllSensArm}
ARMING|OPTIC_ALLSENS_DELAY_ARM	${stringTableOpticAllSensDelayArm}
ARMING|OPTIC_DISARM	${stringTableOpticDisarm}
ARMING|OPTIC_EXTSENS_ARM	${stringTableOpticExtsensArm}
ARMING|OPTIC_EXTSENS_DELAY_ARM	${stringTableOpticExtsensDelayArm}
ARMING|OPTIC_MULTI_DELAY_ARM	${stringTableOpticMultiDelayArm}
ARMSTATE=ALARM_BLOCKED	${stringTableAlarmBlocked}
ARMSTATE=ALLSENS_ARMED	${stringTableAlarmExtSensArmed}
ARMSTATE=DISARMED	${stringTableAlarmDisarmed}
ARMSTATE=EXTSENS_ARMED	${stringTableAlarmAllSensArmed}
ARR_TIMEOUT	${stringTableArrTimeout}
ATC_ADAPTION_INTERVAL	${stringTableATCAdaptionInterval}
ATC_MODE	${stringTableATCMode}
ATC_OFF	${stringTableOFF}
ATC_ON	${stringTableON}
AUTO_MODE	${stringTableClimateControlRTTransceiverAutoMode}
BACKLIGHT_AT_CHARGE	${stringTableBackLightAtCharge}
BACKLIGHT_AT_KEYSTROKE	${stringTableBackLightAtKeystroke}
BACKLIGHT_AT_MOTION	${stringTableBackLightAtMotion}
BACKLIGHT_ON_TIME	${stringTableBackLightOnTime}
BATTERY_POWERED	${stringTableBatteryPowered}
BATTERY_STATE	${stringTableClimateControlRTTransceiverBatteryState}
BAT_DEFECT_LIMIT	${stringTableBatDefectLimit}
BLIND	${stringTableBlindTitle}
BLIND|CHANGE_OVER_DELAY	${stringTableBlindChangeOverDelay}
BLIND|LEVEL	${stringTableBlindLevel}
BLIND|REFERENCE_RUNNING_TIME_BOTTOM_TOP	${stringTableBlindRunnintTimeBottomTop}
BLIND|REFERENCE_RUNNING_TIME_TOP_BOTTOM	${stringTableBlindRunningTimeTopBottom}
BLIND|REFERENCE_RUN_COUNTER	${stringTableBlindRefRunCounter}
BLIND|STOP	${stringTableBlindStop}
BLIND_TRANSMITTER|LEVEL	${stringTableBlindLevel}
BLIND_TRANSMITTER|LEVEL_2	${stringTableJalousieSlatsLevel}
BLIND_VIRTUAL_RECEIVER	${stringTableBlindVirtualReceiverTitle}
BLIND_VIRTUAL_RECEIVER|LEVEL	${stringTableBlindLevel}
BLIND_VIRTUAL_RECEIVER|LEVEL_2	${stringTableJalousieSlatsLevel}
BLIND_VIRTUAL_RECEIVER|STOP	${stringTableBlindStop}
BOOST_MODE	${stringTableClimateControlRTTransceiverBoostMode}
BOOST_MODE=FALSE	${stringTableBoostModeFalse}
BOOST_MODE=TRUE	${stringTableBoostModeTrue}
BOOST_STATE	${stringTableBoostState}
BRIGHTNESS	${stringTableBrightness}
BRIGHTNESS_FILTER	${stringTableBrightnessFilter}
BURST_RX	${stringTableBurstRX}
BUTTON_LOCK	${stringTableButtonLock}
BUTTON_RESPONSE_WITHOUT_BACKLIGHT	${stringTableButtonResponseWithoutBacklight}
CAPACITIVE_FILLING_LEVEL_SENSOR	${stringTableCapacitiveFillingSensorTitle}
CAPACITIVE_FILLING_LEVEL_SENSOR|CASE_DESIGN	${stringTableCapacitiveFillingSensorCaseDesign}
CAPACITIVE_FILLING_LEVEL_SENSOR|CASE_DESIGN=HORIZONTAL_BARREL	${stringTableCapacitiveFillingSensorCaseDesignHor}
CAPACITIVE_FILLING_LEVEL_SENSOR|CASE_DESIGN=RECTANGLE	${stringTableCapacitiveFillingSensorCaseDesginRect}
CAPACITIVE_FILLING_LEVEL_SENSOR|CASE_DESIGN=VERTICAL_BARREL	${stringTableCapacitiveFillingSensorCaseDesignVer}
CAPACITIVE_FILLING_LEVEL_SENSOR|CASE_HIGH	${stringTableCapacitiveFillingSensorCaseHeight}
CAPACITIVE_FILLING_LEVEL_SENSOR|CASE_LENGTH	${stringTableCapacitiveFillingSensorCaseLength}
CAPACITIVE_FILLING_LEVEL_SENSOR|CASE_WIDTH	${stringTableCapacitiveFillingSensorCaseWidth}
CAPACITIVE_FILLING_LEVEL_SENSOR|CONTROLTEXT_CALC_FILLINGLEVEL	${stringTableCapacitiveFillingSensorTextCalcFillingLevel}
CAPACITIVE_FILLING_LEVEL_SENSOR|CONTROLTEXT_FILLINGLEVEL	${stringTableCapacitiveFillingSensorTextFillingLevel}
CAPACITIVE_FILLING_LEVEL_SENSOR|FILLING_LEVEL	${stringTableCapacitiveFillingSensorFillingLevel}
CAPACITIVE_FILLING_LEVEL_SENSOR|FILL_LEVEL	${stringTableCapacitiveFillingSensorFillingLevel100perc}
CAPACITIVE_FILLING_LEVEL_SENSOR|FILL_LEVEL_LOWER_THRESHOLD	${stringTableCapacitiveFillingSensorFillingLevelLowerThres}
CAPACITIVE_FILLING_LEVEL_SENSOR|FILL_LEVEL_UPPER_THRESHOLD	${stringTableCapacitiveFillingSensorFillingLevelUpperThres}
CAPACITIVE_FILLING_LEVEL_SENSOR|MEA_LENGTH	${stringTableCapacitiveFillingSensorMeaLength}
CAPACITIVE_FILLING_LEVEL_SENSOR|USE_CUSTOM	${stringTableCapacitiveFillingSensorCustomCal}
CAPACITIVE_FILLING_LEVEL_SENSOR|WATER_LOWER_THRESHOLD_CH	${stringTableCapacitiveFillingSensorWaterLowerThres}
CAPACITIVE_FILLING_LEVEL_SENSOR|WATER_UPPER_THRESHOLD_CH	${stringTableCapacitiveFillingSensorWaterUpperThres}
CAPTURE_WITHIN_INTERVAL	${stringTableCaptureWithinInterval}
CENTRAL_KEY|DBL_PRESS_TIME	${stringTableCentralKeyDblPressTime}
CENTRAL_KEY|LONG_PRESS_TIME	${stringTableCentralKeyLongPressTime}
CHANGE_OVER=FALSE	${stringTableChangeOverFalse}
CHANGE_OVER=TRUE	${stringTableChangeOverTrue}
CHARACTERISTIC_BASETYPE	${stringTableCharacteristicBaseType}
CHARACTERISTIC_COLOURASSIGNMENT	${stringTableCharacteristicColorAssignment}
CHARACTERISTIC_CROSSFADE	${stringTableCharacteristicCrossfade}
CHARACTERISTIC_DIM2HOT	${stringTableCharacteristicDim2Hot}
CHARACTERISTIC_DIM2WARM	${stringTableCharacteristicDim2Warm}
CHARACTERISTIC_HALF_CONSTANT	${stringTableCharacteristicHalfConstant}
CHARACTERISTIC_LEVELLIMIT	${stringTableCharacteristicLevelLimit}
CHARACTERISTIC_LINEAR	${stringTableCharasteristicLinear}
CHARACTERISTIC_LINSQUARETYPE	${stringTableCharacteristicLinSquareType}
CHARACTERISTIC_LOW_IS_COLD	${stringTableCharacteristicLowIsCold}
CHARACTERISTIC_LOW_IS_WARM	${stringTableCharacteristicLowIsWarm}
CHARACTERISTIC_MAXIMUM	${stringTableCharacteristicMaximum}
CHARACTERISTIC_SQUARE	${stringTableCharasteristicSquare}
CLIMATECONTROL_DEHUMIDIFIER_TRANSMITER	${stringTableClimateControlDehumidifierTitle}
CLIMATECONTROL_FLOOR_DIRECT_TRANSMITTER|COOLING_DISABLE	${stringTableCoolingDisable}
CLIMATECONTROL_FLOOR_DIRECT_TRANSMITTER|FLOOR_HEATING_MODE	${stringTableFloorHeatingMode}
CLIMATECONTROL_FLOOR_DIRECT_TRANSMITTER|HEATING_DISABLE	${stringTableHeatingDisable}
CLIMATECONTROL_FLOOR_DIRECT_TRANSMITTER|HEATING_MODE_SELECTION	${stringTableHeatingModeSelection}
CLIMATECONTROL_FLOOR_DIRECT_TRANSMITTER|HEATING_VALVE_TYPE	${stringTableHeatingValveType}
CLIMATECONTROL_FLOOR_DIRECT_TRANSMITTER|HUMIDITY_LIMIT_DISABLE	${stringTableHumidityLimitDisable}
CLIMATECONTROL_FLOOR_DIRECT_TRANSMITTER|HUMIDITY_LIMIT_VALUE	${stringTableHumidityLimitValue}
CLIMATECONTROL_FLOOR_DIRECT_TRANSMITTER|MINIMAL_FLOOR_TEMPERATURE	${stringTableMinimalFloorTemperature}
CLIMATECONTROL_FLOOR_TRANSCEIVER	${stringTableClimateControlFloorTransceiverTitle}
CLIMATECONTROL_FLOOR_PUMP_TRANSCEIVER	${stringTableClimateControlFloorPumpTransceiverTitle}
CLIMATECONTROL_FLOOR_TRANSMITTER	${stringTableClimateControlFloorTransmitterTitle}
CLIMATECONTROL_HEAT_DEMAND_TRANSMITER	${stringTableClimateControlHeatDemandTransmitterTitle}
CLIMATECONTROL_HEAT_DEMAND_BOILER_TRANSMITTER	${stringTableClimateControlHeatDemandBoilerTransmitterTitle}
CLIMATECONTROL_HEAT_DEMAND_PUMP_TRANSMITTER	${stringTableClimateControlHeatDemandPumpTransmitterTitle}
CLIMATECONTROL_RECEIVER	${stringTableClimateControlReceiver}
CLIMATECONTROL_REGULATOR	${stringTableClimateControlRegTitle}
CLIMATECONTROL_REGULATOR|ADJUSTING_COMMAND	${stringTableClimateControlRegAdjCommand}
CLIMATECONTROL_REGULATOR|ADJUSTING_DATA	${stringTableClimateControlRegAdjData}
CLIMATECONTROL_REGULATOR|DECALCIFICATION_DAY	${stringTableClimateControlRegDecalcDay}
CLIMATECONTROL_REGULATOR|DECALCIFICATION_HOUR	${stringTableClimateControlRegDecalcHour}
CLIMATECONTROL_REGULATOR|DECALCIFICATION_MINUTE	${stringTableClimateControlRegDecalcMin}
CLIMATECONTROL_REGULATOR|DISPLAY_TEMPERATUR_HUMIDITY_CHANGE	${stringTableClimateControlRegDisplayTempHum}
CLIMATECONTROL_REGULATOR|DISPLAY_TEMPERATUR_HUMIDITY_CHANGE=TEMPERATUR_AND_HUMIDITY	${stringTableClimateControlRegDisplayTempHumTH}
CLIMATECONTROL_REGULATOR|DISPLAY_TEMPERATUR_HUMIDITY_CHANGE=TEMPERATUR_ONLY	${stringTableClimateControlRegDisplayTempHumT}
CLIMATECONTROL_REGULATOR|DISPLAY_TEMPERATUR_INFORMATION	${stringTableClimateControlRegDisplayTempInfo}
CLIMATECONTROL_REGULATOR|DISPLAY_TEMPERATUR_INFORMATION=ACTUAL_VALUE	${stringTableClimateControlRegDisplayTempInfoActualTemp}
CLIMATECONTROL_REGULATOR|DISPLAY_TEMPERATUR_INFORMATION=SET_POINT	${stringTableClimateControlRegDisplayTempInfoSetPoint}
CLIMATECONTROL_REGULATOR|DISPLAY_TEMPERATUR_UNIT	${stringTableClimateControlRegTempUnit}
CLIMATECONTROL_REGULATOR|DISPLAY_TEMPERATUR_UNIT=CELSIUS	${stringTableClimateControlRegTempUnitC}
CLIMATECONTROL_REGULATOR|DISPLAY_TEMPERATUR_UNIT=FAHRENHEIT	${stringTableClimateControlRegTempUnitF}
CLIMATECONTROL_REGULATOR|MODE_TEMPERATUR_REGULATOR	${stringTableClimateControlRegRegulator}
CLIMATECONTROL_REGULATOR|MODE_TEMPERATUR_REGULATOR=AUTO	${stringTableClimateControlRegRegulatorAuto}
CLIMATECONTROL_REGULATOR|MODE_TEMPERATUR_REGULATOR=CENTRAL	${stringTableClimateControlRegRegulatorCentral}
CLIMATECONTROL_REGULATOR|MODE_TEMPERATUR_REGULATOR=MANUAL	${stringTableClimateControlRegRegulatorManu}
CLIMATECONTROL_REGULATOR|MODE_TEMPERATUR_REGULATOR=PARTY	${stringTableClimateControlRegRegulatorParty}
CLIMATECONTROL_REGULATOR|MODE_TEMPERATUR_VALVE	${stringTableClimateControlRegValve}
CLIMATECONTROL_REGULATOR|MODE_TEMPERATUR_VALVE=AUTO	${stringTableClimateControlRegValveAuto}
CLIMATECONTROL_REGULATOR|MODE_TEMPERATUR_VALVE=CLOSE_VALVE	${stringTableClimateControlRegValveClose}
CLIMATECONTROL_REGULATOR|MODE_TEMPERATUR_VALVE=OPEN_VALVE	${stringTableClimateControlRegValveOpen}
CLIMATECONTROL_REGULATOR|PARTY_END_TIME	${stringTableClimateControlRegPartyEndTime}
CLIMATECONTROL_REGULATOR|SETPOINT	${stringTableClimateControlRegSetpoint}
CLIMATECONTROL_REGULATOR|SETPOINT=VENT_CLOSED	${stringTableClimateControlRegSetpointVentClosed}
CLIMATECONTROL_REGULATOR|SETPOINT=VENT_OPEN	${stringTableClimateControlRegSetpointVentOpen}
CLIMATECONTROL_REGULATOR|STATE=FALSE	${stringTableClimateControlRegStateFalse}
CLIMATECONTROL_REGULATOR|STATE=TRUE	${stringTableClimateControlRegStateTrue}
CLIMATECONTROL_REGULATOR|TEMPERATUR_COMFORT_VALUE	${stringTableClimateControlRegComfortValue}
CLIMATECONTROL_REGULATOR|TEMPERATUR_LOWERING_VALUE	${stringTableClimateControlRegLoweringValue}
CLIMATECONTROL_REGULATOR|TEMPERATUR_PARTY_VALUE	${stringTableClimateControlRegPartyValue}
CLIMATECONTROL_REGULATOR|TEMPERATUR_SET_POINT	${stringTableClimateControlRegSetPoint}
CLIMATECONTROL_REGULATOR|TEMPERATUR_WINDOW_OPEN_VALUE	${stringTableClimateControlRegWindowOpenValue}
CLIMATECONTROL_RT_RECEIVER	${stringTableClimateControlRTReceiver}
CLIMATECONTROL_RT_TRANSCEIVER	${stringTableClimateControlRTTransceiver}
CLIMATECONTROL_RT_TRANSCEIVER|FAULT_REPORTING=ADJUSTING_RANGE_TOO_LARGE	${stringTableClimateControlRTTransceiverAdjustingRangeTooLarge}
CLIMATECONTROL_RT_TRANSCEIVER|FAULT_REPORTING=ADJUSTING_RANGE_TOO_SMALL	${stringTableClimateControlRTTransceiverAdjustingRangeTooSmall}
CLIMATECONTROL_RT_TRANSCEIVER|FAULT_REPORTING=COMMUNICATION_ERROR	${stringTableClimateControlRTTransceiverCommunicationError}
CLIMATECONTROL_RT_TRANSCEIVER|FAULT_REPORTING=LOWBAT	${stringTableClimateControlRTTransceiverLowBat}
CLIMATECONTROL_RT_TRANSCEIVER|FAULT_REPORTING=NO_FAULT	${stringTableClimateControlRTTransceiverNoFault}
CLIMATECONTROL_RT_TRANSCEIVER|FAULT_REPORTING=VALVE_ERROR_POSITION	${stringTableClimateControlRTTransceiverValveErrorPosition}
CLIMATECONTROL_RT_TRANSCEIVER|FAULT_REPORTING=VALVE_TIGHT	${stringTableClimateControlRTTransceiverValveTight}
CLIMATECONTROL_VENT_DRIVE	${stringTableClimateControlVentDriveTitle}
CLIMATECONTROL_VENT_DRIVE|ERROR=ADJUSTING_RANGE_TO_SMALL	${stringTableClimateControlVentDriveErrorAdjRangeToSmall}
CLIMATECONTROL_VENT_DRIVE|ERROR=LOWBAT	${stringTableClimateControlVentDriveErrorLowBat}
CLIMATECONTROL_VENT_DRIVE|ERROR=VALVE_DRIVE_BLOCKED	${stringTableClimateControlVentDriveErrorValveDriveBlocked}
CLIMATECONTROL_VENT_DRIVE|ERROR=VALVE_DRIVE_LOOSE	${stringTableClimateControlVentDriveErrorValveDriveLoose}
CLIMATECONTROL_VENT_DRIVE|VALVE_ERROR_POSITION	${stringTableClimateControlVentDriveValveErrorPos}
CLIMATECONTROL_VENT_DRIVE|VALVE_OFFSET_VALUE	${stringTableClimateControlVentDriveValveOffsetVal}
CLIMATECONTROL_VENT_DRIVE|VALVE_STATE	${stringTableClimateControlVentDriveValveState}
COMFORT_MODE	${stringTableClimateControlRTTransceiverComfortMode}
COMMUNICATION_REPORTING	${stringTableCommunicatingReporting}
COMMUNICATION_REPORTING=FALSE	${stringTableCommunicatingReportingFalse}
COMMUNICATION_REPORTING=TRUE	${stringTableCommunicatingReportingTrue}
COMPATIBILITY_MODE	${stringTableCompatibilityMode}
CONDITION_CURRENT	${stringTableConditionCurrentTitle}
CONDITION_FREQUENCY	${stringTableConditionFrequencyTitle}
CONDITION_POWER	${stringTableConditionPowerTitle}
CONDITION_VOLTAGE	${stringTableConditionVoltageTitle}
COND_TX_CYCLIC_ABOVE	${stringTableCondTxCyclicAbove}
COND_TX_CYCLIC_BELOW	${stringTableCondTxCyclicBelow}
COND_TX_DECISION_ABOVE	${stringTableCondTxDecisionAbove}
COND_TX_DECISION_BELOW	${stringTableCondTxDecisionBelow}
COND_TX_FALLING	${stringTableCondTxFalling}
COND_TX_RISING	${stringTableCondTxRising}
COND_TX_THRESHOLD_HI	${stringTableCondThresholdHi}
COND_TX_THRESHOLD_HI_POWER	${stringTableCondThresholdHiPower}
COND_TX_THRESHOLD_LO	${stringTableCondThresholdLo}
COND_TX_THRESHOLD_LO_POWER	${stringTableCondThresholdLoPower}
CONFIG_PENDING=FALSE	${stringTableConfigPendingFalse}
CONFIG_PENDING=TRUE	${stringTableConfigPendingTrue}
CONF_BUTTON_TIME	${stringTableConfButtonTime}
CONF_BUTTON_TIME=PERMANENT	${stringTableConfButtonTimePermanent}
CONTROL_MODE=AUTO-MODE	${stringTableClimateControlRTTransceiverAutoMode}
CONTROL_MODE=BOOST-MODE	${stringTableClimateControlRTTransceiverBoostMode}
CONTROL_MODE=MANU-MODE	${stringTableClimateControlRTTransceiverManuMode}
CONTROL_MODE=PARTY-MODE	${stringTableClimateControlRTTransceiverPartyMode}
CURRENTDETECTION_BEHAVIOR	${stringTableCurrentDetectionBehavior}
CURRENTDETECTION_BEHAVIOR="CURRENTDETECTION_ACTIVE"	${stringTableCurrentDetectionBehaviorActive}
CURRENTDETECTION_BEHAVIOR="CURRENTDETECTION_INACTIVE_VALUE_OUTPUT_1"	${stringTableCurrentDetectionBehaviorOutput1}
CURRENTDETECTION_BEHAVIOR="CURRENTDETECTION_INACTIVE_VALUE_OUTPUT_2"	${stringTableCurrentDetectionBehaviorOutput2}
CURRENT_ILLUMINATION	${stringTableCurrentIllumination}
CYCLIC_INFO_MSG	${stringTableCyclicInfoMsg}
CYCLIC_INFO_MSG_DIS	${stringTableCyclicInfoMsgDis}
CYCLIC_INFO_MSG_DIS_UNCHANGED	${stringTableCyclicInfoMsgDisUnChanged}
CYCLIC_INFO_MSG_OVERDUE_THRESHOLD	${stringTableCyclicInfoMsgOverdueThreshold}
CYCLIC_INFO_MSG_PAUSE	${stringTableCyclicInfoMsgPause}
DATE_TIME_UNKNOWN=FALSE	${stringTableDateTimeUnknownFalse}
DATE_TIME_UNKNOWN=TRUE	${stringTableDateTimeUnknownTrue}
DAYLIGHT_SAVINGS_TIME	${stringTableDST}
DDC|STATE	${stringTableDDCState}
DECISION_VALUE	${stringTableConditionValue}
DEVICE_IN_BOOTLOADER	${stringTableDeviceInBootloader}
DEVICE_LED_MODE	${stringTableDeviceLEDMode}
DEVICE_LED_MODE=OFF	${stringTableDeviceLEDModeOff}
DEVICE_LED_MODE=ON	${stringTableDeviceLEDModeOn}
DEV_RPT_CNT_MAX	${stringTableDevRptCntMax}
DEW_POINT_ALARM=FALSE	${stringTableDewPointAlarmFalse}
DEW_POINT_ALARM=TRUE	${stringTableDewPointAlarmTrue}
DIGITAL_ANALOG_INPUT|BEHAVIOUR	${stringTableDigitalAnalogInputBehaviour}
DIGITAL_ANALOG_INPUT|CALIBRATION	${stringTableDigitalAnalogInputCalibration}
DIGITAL_ANALOG_INPUT|STATE=FALSE	${stringTableDigitalAnalogInputStateFalse}
DIGITAL_ANALOG_INPUT|STATE=TRUE	${stringTableDigitalAnalogInputStateTrue}
DIGITAL_ANALOG_INPUT|VALUE	${stringTableDigitalAnalogInputValue}
DIGITAL_ANALOG_OUTPUT|BEHAVIOUR	${stringTableDigitalAnalogOutputBehaviour}
DIGITAL_ANALOG_OUTPUT|FREQUENCY	${stringTableDigitalAnalogOutputFrequency}
DIGITAL_ANALOG_OUTPUT|PULSETIME	${stringTableDigitalAnalogOutputPulseTime}
DIGITAL_ANALOG_OUTPUT|STATE=FALSE	${stringTableDigitalAnalogOutputStateFalse}
DIGITAL_ANALOG_OUTPUT|STATE=TRUE	${stringTableDigitalAnalogOutputStateTrue}
DIGITAL_INPUT	${stringTableDigitalInput}
DIGITAL_INPUT|BEHAVIOUR	${stringTableDigitalInputBehaviour}
DIGITAL_INPUT|FREQUENCY	${stringTableDigitalInputFrequency}
DIGITAL_INPUT|STATE=FALSE	${stringTableDigitalInputStateFalse}
DIGITAL_INPUT|STATE=TRUE	${stringTableDigitalInputStateTrue}
DIGITAL_OUTPUT	${stringTableDigitalOutput}
DIGITAL_OUTPUT|STATE=FALSE	${stringTableDigitalOutputStateFalse}
DIGITAL_OUTPUT|STATE=TRUE	${stringTableDigitalOutputStateTrue}
DIMMER	${stringTableDimmerTitle}
DIMMER_VIRTUAL_RECEIVER	${stringTableDimmerTitle}
DIMMER|CHARACTERISTIC	${stringTableDimmerCharacteristic}
DIMMER|ERROR=LOAD_FAILURE	${stringTableDimmerErrorLoad}
DIMMER|ERROR_OVERHEAT	${stringTableDimmerErrorOverheat}
DIMMER|ERROR_OVERLOAD	${stringTableDimmerErrorOverload}
DIMMER|ERROR_REDUCED	${stringTableDimmerErrorReduced}
DIMMER|FUSE_DELAY	${stringTableDimmerFuseDelay}
DIMMER|LEVEL	${stringTableDimmerLevel}
DIMMER|LOAD_APPEAR_BEHAVIOUR	${stringTableDimmerLoadAppearBehaviour}
DIMMER|LOAD_ERROR_CALIB	${stringTableDimmerLoadErrorCal}
DIMMER|LOGIC_COMBINATION	${stringTableLogicCombination}
DIMMER|OLD_LEVEL	${stringTableDimmerOldLevel}
DIMMER|ON_TIME	${stringTableDimmerOnTime}
DIMMER|OVERTEMP_LEVEL	${stringTableDimmerOverTempLevel}
DIMMER|POWERUP_ACTION	${stringTableDimmerPowerUpAction}
DIMMER|RAMP_STOP	${stringTableDimmerRampStop}
DIMMER|RAMP_TIME	${stringTableDimmerRampTime}
DIMMER|REDUCE_LEVEL	${stringTableDimmerReduceLevel}
DIMMER|REDUCE_TEMP_LEVEL	${stringTableDimmerReduceTempLevel}
DIMMER|RELAY_OFFDELAY_TIME	${stringTableRelayOffdelayTime}
DISPLAY_BACKLIGHT_MODE	${stringTableDisplayBacklightMode}
DISPLAY_BACKLIGHT_MODE=AUTO	${stringTableDisplayBacklightModeAuto}
DISPLAY_BACKLIGHT_MODE=OFF	${stringTableDisplayBacklightModeOff}
DISPLAY_BACKLIGHT_MODE=ON	${stringTableDisplayBacklightModeOn}
DISPLAY_BACKLIGHT_TIME	${stringTableDisplayBacklightTime}
DISPLAY_BRIGHTNESS	${stringTableDisplayBrightness}
DISPLAY_ENERGYOPTIONS	${stringTableDisplayEnergyOptions}
DISPLAY_INVERTING	${stringTableDisplayInverting}
DISPLAY|ALARM_COUNT	${stringTableDisplayAlarmCount}
DISPLAY|ARROW_DOWN	${stringTableDisplayArrowDown}
DISPLAY|ARROW_UP	${stringTableDisplayArrowUp}
DISPLAY|BACKLIGHT	${stringTableDisplayBacklight}
DISPLAY|BACKLIGHT=BLINK_FAST	${stringTableDisplayBacklightBlinkFast}
DISPLAY|BACKLIGHT=BLINK_SLOW	${stringTableDisplayBacklightBlinkSlow}
DISPLAY|BACKLIGHT=OFF	${stringTableDisplayBacklightOff}
DISPLAY|BACKLIGHT=ON	${stringTableDisplayBacklightOn}
DISPLAY|BACKLIGHT_AT_ALARM	${stringTableDisplayBacklightAtAlarm}
DISPLAY|BACKLIGHT_AT_ALARM=BLINK_FAST	${stringTableDisplayBacklightAtAlarmBlinkFast}
DISPLAY|BACKLIGHT_AT_ALARM=BLINK_SLOW	${stringTableDisplayBacklightAtAlarmBlinkSlow}
DISPLAY|BACKLIGHT_AT_ALARM=OFF	${stringTableDisplayBacklightAtAlarmOff}
DISPLAY|BACKLIGHT_AT_ALARM=ON	${stringTableDisplayBacklightAtAlarmOn}
DISPLAY|BACKLIGHT_AT_SERVICE	${stringTableDisplayBacklightAtService}
DISPLAY|BACKLIGHT_AT_SERVICE=BLINK_FAST	${stringTableDisplayBacklightAtServiceBlinkFast}
DISPLAY|BACKLIGHT_AT_SERVICE=BLINK_SLOW	${stringTableDisplayBacklightAtServiceBlinkSlow}
DISPLAY|BACKLIGHT_AT_SERVICE=OFF	${stringTableDisplayBacklightAtServiceOff}
DISPLAY|BACKLIGHT_AT_SERVICE=ON	${stringTableDisplayBacklightAtServiceOn}
DISPLAY|BACKLIGHT_AT_STATUS	${stringTableDisplayBacklightAtState}
DISPLAY|BACKLIGHT_AT_STATUS=BLINK_FAST	${stringTableDisplayBacklightAtStateBlinkFast}
DISPLAY|BACKLIGHT_AT_STATUS=BLINK_SLOW	${stringTableDisplayBacklightAtStateBlinkSlow}
DISPLAY|BACKLIGHT_AT_STATUS=OFF	${stringTableDisplayBacklightAtStateOff}
DISPLAY|BACKLIGHT_AT_STATUS=ON	${stringTableDisplayBacklightAtStateOn}
DISPLAY|BEEP=NONE	${stringTableDisplayBeepNone}
DISPLAY|BEEP=TONE1	${stringTableDisplayBeepTone1}
DISPLAY|BEEP=TONE2	${stringTableDisplayBeepTone2}
DISPLAY|BEEP=TONE3	${stringTableDisplayBeepTone3}
DISPLAY|BEEP_AT_ALARM	${stringTableDisplayBeepAtAlarm}
DISPLAY|BEEP_AT_ALARM=NONE	${stringTableDisplayBeepAtAlarmNone}
DISPLAY|BEEP_AT_ALARM=TONE1	${stringTableDisplayBeepAtAlarmTone1}
DISPLAY|BEEP_AT_ALARM=TONE2	${stringTableDisplayBeepAtAlarmTone2}
DISPLAY|BEEP_AT_ALARM=TONE3	${stringTableDisplayBeepAtAlarmTone3}
DISPLAY|BEEP_AT_SERVICE	${stringTableDisplayBeepAtService}
DISPLAY|BEEP_AT_SERVICE=NONE	${stringTableDisplayBeepAtServiceNone}
DISPLAY|BEEP_AT_SERVICE=TONE1	${stringTableDisplayBeepAtServiceTone1}
DISPLAY|BEEP_AT_SERVICE=TONE2	${stringTableDisplayBeepAtServiceTone2}
DISPLAY|BEEP_AT_SERVICE=TONE3	${stringTableDisplayBeepAtServiceTone3}
DISPLAY|BEEP_AT_STATUSINFO	${stringTableDisplayBeepAtStatusInfo}
DISPLAY|BEEP_AT_STATUSINFO=NONE	${stringTableDisplayBeepAtStatusInfoNone}
DISPLAY|BEEP_AT_STATUSINFO=TONE1	${stringTableDisplayBeepAtStatusInfoTone1}
DISPLAY|BEEP_AT_STATUSINFO=TONE2	${stringTableDisplayBeepAtStatusInfoTone2}
DISPLAY|BEEP_AT_STATUSINFO=TONE3	${stringTableDisplayBeepAtStatusInfoTone3}
DISPLAY|BELL	${stringTableDisplayBell}
DISPLAY|BLIND	${stringTableDisplayBlind}
DISPLAY|BULB	${stringTableDisplayBulb}
DISPLAY|CLOCK	${stringTableDisplayClock}
DISPLAY|DOOR	${stringTableDisplayDoor}
DISPLAY|MESSAGE_SHOW_TIME	${stringTableDisplayMessageShowTime}
DISPLAY|MESSAGE_SHOW_TIME=PERMANENT	${stringTableDisplayMessageShowTimePermanent}
DISPLAY|PHONE	${stringTableDisplayPhone}
DISPLAY|SCENE	${stringTableDisplayScene}
DISPLAY|SERVICE_COUNT	${stringTableDisplayServiceCount}
DISPLAY|SUBMIT	${stringTableDisplaySubmit}
DISPLAY|SWITCH	${stringTableDisplaySwitch}
DISPLAY|TEXT	${stringTableDisplayText}
DISPLAY|UNIT=CELSIUS	${stringTableDisplayUnitCelsius}
DISPLAY|UNIT=FAHRENHEIT	${stringTableDisplayUnitFahrenheit}
DISPLAY|UNIT=NONE	${stringTableDisplayUnitNone}
DISPLAY|UNIT=PERCENT	${stringTableDisplayUnitPercent}
DISPLAY|UNIT=WATT	${stringTableDisplayUnitWatt}
DISPLAY|WINDOW	${stringTableDisplayWindow}
DUAL_WHITE_BRIGHTNESS	${stringTableDualWhiteBrightnessTitle}
DUAL_WHITE_COLOR	${stringTableDualWhiteColorTitle}
DUAL_WHITE_COLOR|LEVEL	${stringTableDualWhiteColorLevel}
DUAL_WHITE_COLOR|LEVEL_REAL	${stringTableDualWhiteColorLevelReal}
DUAL_WHITE_COLOR|OLD_LEVEL	${stringTableDualWhiteColorOldLevel}
DUAL_WHITE_COLOR|RAMP_STOP	${stringTableDualWhiteColorRampStop}
DUAL_WHITE_COLOR|RAMP_TIME	${stringTableDualWhiteColorRampTime}
DURATION_UNIT	${stringTableDurationUnit}
DURATION_UNIT=D	${stringTableDurationUnitD}
DURATION_UNIT=H	${stringTableDurationUnitH}
DURATION_UNIT=M	${stringTableDurationUnitM}
DURATION_UNIT=S	${stringTableDurationUnitS}
DURATION_VALUE	${stringTableDurationValue}
DUTYCYCLE_LIMIT	${stringTableDutyCycleLimit}
DUTY_CYCLE=FALSE	${stringTableDutyCycleFalse}
DUTY_CYCLE=TRUE	${stringTableDutyCycleTrue}
EMERGENCY_OPERATION=FALSE	${stringTableEmergencyOperationFalse}
EMERGENCY_OPERATION=TRUE	${stringTableEmergencyOperationTrue}
ENABLE_ROUTING	${stringTableEnableRouting}
ENERGIE_METER_TRANSMITTER|AVERAGING	${stringTablePowerMeterAveraging}
ENERGIE_METER_TRANSMITTER|CURRENT	${stringTablePowerMeterCurrent}
ENERGIE_METER_TRANSMITTER|ENERGY_COUNTER	${stringTablePowerMeterEnergyCounter}
ENERGIE_METER_TRANSMITTER|ENERGY_COUNTER_OVERFLOW=FALSE	${stringTablePowerMeterOverflowFalse}
ENERGIE_METER_TRANSMITTER|ENERGY_COUNTER_OVERFLOW=TRUE	${stringTablePowerMeterOverflowTrue}
ENERGIE_METER_TRANSMITTER|FREQUENCY	${stringTablePowerMeterFrequency}
ENERGIE_METER_TRANSMITTER|POWER	${stringTablePowerMeterPower}
ENERGIE_METER_TRANSMITTER|TX_THRESHOLD_POWER	${stringTablePowerMeterTxThresholdPower}
ENERGIE_METER_TRANSMITTER|VOLTAGE	${stringTablePowerMeterVoltage}
ERROR	${stringTableError}
ERROR=NO_ERROR	${stringTableErrorNoError}
ERROR_BATTERY=FALSE	${stringTableBatteryFailure}
ERROR_BATTERY=TRUE	${stringTableBatteryOk}
ERROR_CODE	${stringTableErrorCode}
ERROR_OVERHEAT=FALSE	${stringTableErrorOverheatFalse}
ERROR_OVERHEAT=TRUE	${stringTableErrorOverheatTrue}
ERROR_OVERLOAD=FALSE	${stringTableErrorOverloadFalse}
ERROR_OVERLOAD=TRUE	${stringTableErrorOverloadTrue}
ERROR_POWER=FALSE	${stringTableErrorPowerFalse}
ERROR_POWER=NO_ERROR	${stringTablePowerAvailable}
ERROR_POWER=POWER_FAILURE	${stringTablePowerNotAvailable}
ERROR_POWER=TRUE	${stringTableErrorPowerTrue}
ERROR_REDUCED=FALSE	${stringTableErrorReducedFalse}
ERROR_REDUCED=TRUE	${stringTableErrorReducedTrue}
ERROR_SABOTAGE=FALSE	${stringTableErrorSabotageFalse}
ERROR_SABOTAGE=NO_ERROR	${stringTableSabotageContactOk}
ERROR_SABOTAGE=SABOTAGE	${stringTableSabotage}
ERROR_SABOTAGE=TRUE	${stringTableErrorSabotageTrue}
ERROR_UPDATE=TRUE	${stringTableErrorUpdateTrue}
ERROR_UPDATE=FALSE	${stringTableErrorUpdateFalse}
EVENT_DELAY_UNIT	${stringTableEventDelayUnit}
EVENT_DELAY_UNIT=100MS	${optionUnit100MS}
EVENT_DELAY_UNIT=H	${optionUnitH}
EVENT_DELAY_UNIT=M	${optionUnitM}
EVENT_DELAY_UNIT=S	${optionUnitS}
EVENT_DELAY_VALUE	${stringTableEventDelayValue}
EVENT_FILTER_NUMBER	${stringTableEventFilterNumber}
EVENT_FILTER_PERIOD	${stringTableEventFilterPeriod}
EVENT_RANDOMTIME_UNIT	${stringTableEventRandomTimeUnit}
EVENT_RANDOMTIME_UNIT=100MS	${optionUnit100MS}
EVENT_RANDOMTIME_UNIT=H	${optionUnitH}
EVENT_RANDOMTIME_UNIT=M	${optionUnitM}
EVENT_RANDOMTIME_UNIT=S	${optionUnitS}
EVENT_RANDOMTIME_VALUE	${stringTableStatusInfoRandom}
EXPECT_AES	${stringTableExpectAES}
EXTERNAL_CLOCK=FALSE	${stringTableExternalClockFalse}
EXTERNAL_CLOCK=TRUE	${stringTableExternalClockTrue}
FREQUENCY_INPUT	${stringTableFrequencyInput}
FROST_PROTECTION=FALSE	${stringTableFrostProtectionFalse}
FROST_PROTECTION=TRUE	${stringTableFrostProtectionTrue}
FROST_PROTECTION_TEMPERATURE	${stringTableFrostProtectionTemperature}
FUSE_DELAY	${stringTableDimmerFuseDelay}
GENERIC_INPUT_TRANSMITER	${stringTableGenericTransmitterTitle}
GLOBAL_BUTTON_LOCK	${stringTableGlobalButtonLock}
HEATING_CLIMATECONTROL_CL_RECEIVER	${stringTableClimateControlCLReceiverTitle}
HEATING_CLIMATECONTROL_CL_TRANSMITTER	${stringTableHeatingClimateControlCLTransmitterTitle}
HEATING_CLIMATECONTROL_RECEIVER	${stringTableClimateControlReceiverTitle}
HEATING_CLIMATECONTROL_SWITCH_TRANSMITTER	${stringTableHeatingClimateControlSwitchTransmitterTitle}
HEATING_CLIMATECONTROL_TRANSCEIVER	${stringTableClimateControlTransceiverTitle}
HEATING_CLIMATECONTROL_TRANSCEIVER|ACTIVE_PROFILE	${stringTableActiveProfile}
HEATING_CLIMATECONTROL_TRANSCEIVER|CONTROL_MODE	${stringTableControlMode}
HEATING_CLIMATECONTROL_TRANSCEIVER|FROST_PROTECTION=FALSE	${stringTableFrostProtectFalse}
HEATING_CLIMATECONTROL_TRANSCEIVER|FROST_PROTECTION=TRUE	${stringTableFrostProtectTrue}
HEATING_CLIMATECONTROL_TRANSCEIVER|HUMIDITY	${stringTableHeatingHumidity}
HEATING_CLIMATECONTROL_TRANSCEIVER|LEVEL	${stringTableHeatingLevel}
HEATING_CLIMATECONTROL_TRANSCEIVER|PARTY_MODE=FALSE	${stringTablePartyModeFalse}
HEATING_CLIMATECONTROL_TRANSCEIVER|PARTY_MODE=TRUE	${stringTablePartyModeTrue}
HEATING_CLIMATECONTROL_TRANSCEIVER|SET_POINT_MODE	${stringTableSetPointMode}
HEATING_CLIMATECONTROL_TRANSCEIVER|SET_POINT_TEMPERATURE	${stringTableSetPointTemperature}
HEATING_CLIMATECONTROL_TRANSCEIVER|SWITCH_POINT_OCCURED=FALSE	${stringTableSwitchPointOccuredFalse}
HEATING_CLIMATECONTROL_TRANSCEIVER|SWITCH_POINT_OCCURED=TRUE	${stringTableSwitchPointOccurredTrue}
HEATING_CLIMATECONTROL_TRANSCEIVER|VALVE_ADAPTION=FALSE	${stringTableValveAdaptionFalse}
HEATING_CLIMATECONTROL_TRANSCEIVER|VALVE_ADAPTION=TRUE	${stringTableValveAdaptionTrue}
HEATING_CLIMATECONTROL_TRANSCEIVER|WINDOW_STATE=CLOSED	${stringTableWindowStateClosed}
HEATING_CLIMATECONTROL_TRANSCEIVER|WINDOW_STATE=OPEN	${stringTableWindowStateOpen}
HEATING_COOLING=COOLING	${stringTableCooling}
HEATING_COOLING=HEATING	${stringTableHeating}
HEATING_KEY_RECEIVER	${stringTableHeatingKeyReceiverTitle}
HEATING_ROOM_TH_RECEIVER	${stringTableHeatingRoomTHReceiverTitle}
HEATING_ROOM_TH_TRANSCEIVER	${stringTableHeatingRoomTHTransceiverTitle}
HEATING_SHUTTER_CONTACT_RECEIVER	${stringTableHeatingShutterContactReceiverTitle}
HUMIDITY_ALARM=FALSE	${stringTableHumidityAlarmFalse}
HUMIDITY_ALARM=TRUE	${stringTableHumidityAlarmTrue}
HUMIDITY_LIMITER=FALSE	${stringTableHumidityLimiterFalse}
HUMIDITY_LIMITER=TRUE	${stringTableHumidityLimiterTrue}
HUMIDITY	${stringTableWeatherHumidity}
ILLUMINATION	${stringTableBrightness}
INHIBIT	${stringTableInhibit}
INHIBIT=FALSE	${stringTableInhibitFalse}
INHIBIT=TRUE	${stringTableInhibitTrue}
INPUT_OUTPUT	${stringTableInputOutput}
INPUT_OUTPUT|BEHAVIOUR	${stringTableInputOutputBehaviour}
INPUT_OUTPUT|BEHAVIOUR=INPUT	${stringTableInputOutputBehaviourInput}
INPUT_OUTPUT|BEHAVIOUR=OUTPUT	${stringTableInputOutputBehaviourOutput}
INPUT_OUTPUT|INPUT_LOCKED	${stringTableInputOutputInputLocked}
INPUT_OUTPUT|INPUT_TYPE	${stringTableInputOutputInputType}
INPUT_OUTPUT|INPUT_TYPE=PUSHBUTTON	${stringTableInputOutputTypePushButton}
INPUT_OUTPUT|INPUT_TYPE=SWITCH	${stringTableInputOutputTypeSwitch}
INPUT_OUTPUT|LONGPRESS_TIME	${stringTableInputOutputLongPressA}
INPUT_OUTPUT|LONG_PRESS_TIME	${stringTableInputOutputLongPressB}
INPUT_OUTPUT|STATE=FALSE	${stringTableInputOutputStateFalse}
INPUT_OUTPUT|STATE=TRUE	${stringTableInputOutputStateTrue}
JALOUSIE	${stringTableJalousieTitle}
JALOUSIE|CHANGE_OVER_DELAY	${stringTableBlindChangeOverDelay}
JALOUSIE|LEVEL	${stringTableBlindLevel}
JALOUSIE|LEVEL=OLD_LEVEL	${stringTableJalousieOldLevel}
JALOUSIE|LEVEL=NO_MODIFICATION	${stringTableJalousieNoModification}
JALOUSIE|LEVEL_COMBINED	${stringTableJalousieLevelCombined}
JALOUSIE|LEVEL_SLATS	${stringTableJalousieSlatsLevel}
JALOUSIE|LEVEL_SLATS=OLD_LEVEL	${stringTableJalousieSlatsOldLevel}
JALOUSIE|LEVEL_SLATS=NO_MODIFICATION	${stringTableJalousieSlatsNoModification}
JALOUSIE|REFERENCE_RUNNING_TIME_SLATS	${stringTableJalousieRunningTimeSlats}
JALOUSIE|REFERENCE_RUNNING_TIME_TOP_BOTTOM	${stringTableBlindRunningTimeTopBottom}
JALOUSIE|REFERENCE_RUNNING_TIME_BOTTOM_TOP	${stringTableBlindRunnintTimeBottomTop}
JALOUSIE|REFERENCE_RUN_COUNTER	${stringTableBlindRefRunCounter}
JALOUSIE|STOP	${stringTableBlindStop}
KEY	${stringTableKeyTitle}
KEYMATIC	${stringTableKeyMaticTitle}
KEYMATIC|ANGLE_LOCKED	${stringTableKeyMaticAngleLocked}
KEYMATIC|ANGLE_MAX	${stringTableKeyMaticAngleMax}
KEYMATIC|ANGLE_OPEN	${stringTableKeyMaticAngleOpen}
KEYMATIC|ERROR=CLUTCH_FAILURE	${stringTableKeyMaticErrorClutch}
KEYMATIC|ERROR=MOTOR_ABORTED	${stringTableKeyMaticErrorMotorAborted}
KEYMATIC|HOLD_PWM	${stringTableKeyMaticHoldPWM}
KEYMATIC|HOLD_TIME	${stringTableKeyMaticHoldTime}
KEYMATIC|LED_FLASH_LOCKED	${stringTableKeyMaticLEDFlashLocked}
KEYMATIC|LED_FLASH_UNLOCKED	${stringTableKeyMaticLEDFlashUnlocked}
KEYMATIC|OPEN	${stringTableKeyMaticOpen}
KEYMATIC|RELOCK_DELAY	${stringTableKeyMaticRelockDelay}
KEYMATIC|RELOCK_DELAY=NOT_USED	${stringTableKeyMaticRelockDelayNotUsed}
KEYMATIC|SETUP_DIR	${stringTableKeyMaticSetupDir}
KEYMATIC|SETUP_DIR=LEFT	${stringTableKeyMaticSetupDirLeft}
KEYMATIC|SETUP_DIR=RIGHT	${stringTableKeyMaticSetupDirRight}
KEYMATIC|SETUP_POSITION	${stringTableKeyMaticSetupPosition}
KEYMATIC|STATE=FALSE	${stringTableKeyMaticStateFalse}
KEYMATIC|STATE=TRUE	${stringTableKeyMaticStateTrue}
KEYMATIC|STATE_UNCERTAIN=FALSE	${stringTableKeyMaticStateUncertainFalse}
KEYMATIC|STATE_UNCERTAIN=TRUE	${stringTableKeyMaticStateUncertainTrue}
KEYPRESS_SIGNAL	${stringTableKeyPressSignal}
KEY_TRANSCEIVER	${stringTableKeyTranseiverTitle}
KEY_TRANSCEIVER|DBL_PRESS_TIME	${stringTableKeyDblPressTime}
KEY_TRANSCEIVER|LONG_PRESS_TIME	${stringTableKeyLongPressTimeA}
KEY|CHANNEL_FUNCTION	${stringTableKeyChannelFunction}
KEY|CHANNEL_FUNCTION=BINARY_BEHAVIOR	${stringTableKeyBinaryBehavior}
KEY|CHANNEL_FUNCTION=BUTTON_BEHAVIOR	${stringTableKeyButtonBehavior}
KEY|CHANNEL_FUNCTION=INACTIVE	${stringTableKeyInactive}
KEY|CHANNEL_FUNCTION=SWITCH_BEHAVIOR	${stringTableKeySwitchBehavior}
KEY|DBL_PRESS_TIME	${stringTableKeyDblPressTime}
KEY|INPUT_LOCKED	${stringTableKeyInputLocked}
KEY|INPUT_TYPE	${stringTableKeyInputType}
KEY|INPUT_TYPE=PUSHBUTTON	${stringTableKeyInputTypePushButton}
KEY|INPUT_TYPE=SWITCH	${stringTableKeyInputTypeSwitch}

KEY|LCD_LEVEL_INTERP	${stringTableKeyLCDLevelInterp}
KEY|LCD_SYMBOL	${stringTableKeyLCDSymbol}

KEY|LONGPRESS_TIME	${stringTableKeyLongPressTimeB}
KEY|LONG_PRESS_TIME	${stringTableKeyLongPressTimeA}
KEY|MSG_FOR_POS_A	${stringTableKeyMsgPosClosed}
KEY|MSG_FOR_POS_A=CLOSED	${stringTableKeyMsgPosA0}
KEY|MSG_FOR_POS_A=NO_MSG	${stringTableKeyMsgPosA1}
KEY|MSG_FOR_POS_A=OPEN	${stringTableKeyMsgPosA2}
KEY|MSG_FOR_POS_B	${stringTableKeyMsgPosOpen}
KEY|MSG_FOR_POS_B=CLOSED	${stringTableKeyMsgPosA0}
KEY|MSG_FOR_POS_B=NO_MSG	${stringTableKeyMsgPosA1}
KEY|MSG_FOR_POS_B=OPEN	${stringTableKeyMsgPosA2}
KEY|TEXT1	${stringTableKeyText1}
KEY|TEXT2	${stringTableKeyText2}
KEY|TEXTLINE_1	${stringTableKeyTextLine}
KEY|TEXTLINE_2	${stringTableKeyTextLine}
LANGUAGE	${stringTableLanguage}
LANGUAGE=ENGLISH	${stringTableLanguageEnglish}
LANGUAGE=GERMAN	${stringTableLanguageGerman}
LED_DISABLE_CHANNELSTATE	${stringTableLEDDisableChannelState}
LED_ONTIME	${stringTableLEDOnTime}
LED_SLEEP_MODE=OFF	${stringTableLEDSleepModeOff}
LED_SLEEP_MODE=ON	${stringTableLEDSleepModeOn}
LED_STATUS=GREEN	${stringTableLEDStatusGreen}
LED_STATUS=OFF	${stringTableLEDStatusOff}
LED_STATUS=ORANGE	${stringTableLEDStatusOrange}
LED_STATUS=RED	${stringTableLEDStatusRed}
LEVEL	${stringTableDimmerLevel}
LEVEL_REAL	${stringTableDimmerLevelReal}
LEVEL_REAL	${stringTableDimmerLevelReal}
LIVE_MODE_RX	${stringTableLiveModeRX}
LOCAL_RESET_DISABLE	${stringTableLocalResetDisable}
LOCAL_RESET_DISABLED	${stringTableLocalResetDisable}
LOGGING	${stringTableLogging}
LOGGING=FALSE	${stringTableLoggingFalse}
LOGGING=OFF	${stringTableLoggingOff}
LOGGING=ON	${stringTableLoggingOn}
LOGGING=TRUE	${stringTableLoggingTrue}
LOGGING_TIME	${stringTableLoggingTime}
LOGIC_AND	${stringTableLogicAND}
LOGIC_ANDINVERS	${stringTableLogicANDINVERS}
LOGIC_COMBINATION	${stringTableLogicCombination}
LOGIC_INACTIVE	${stringTableLogicInactive}
LOGIC_INVERSMINUS	${stringTableLogicINVERSMINUS}
LOGIC_INVERSMUL	${stringTableLogicINVERSMUL}
LOGIC_INVERSPLUS	${stringTableLogicINVERSPLUS}
LOGIC_MINUS	${stringTableLogicMINUS}
LOGIC_MINUSINVERS	${stringTableLogicMINUSINVERS}
LOGIC_MUL	${stringTableLogicMUL}
LOGIC_MULINVERS	${stringTableLogicMULINVERS}
LOGIC_NAND	${stringTableLogicNAND}
LOGIC_NOR	${stringTableLogicNOR}
LOGIC_OR	${stringTableLogicOR}
LOGIC_ORINVERS	${stringTableLogicORINVERS}
LOGIC_PLUS	${stringTableLogicPLUS}
LOGIC_PLUSINVERS	${stringTableLogicPLUSINVERS}
LOGIC_XOR	${stringTableLogicXOR}
LOWBAT=FALSE	${stringTableBatteryOk}
LOWBAT=TRUE	${stringTableBatteryEmpty}
LOWBAT_REPORTING	${stringTableLowbatReporting}
LOWBAT_REPORTING=FALSE	${stringTableLowbatReportingFalse}
LOWBAT_REPORTING=TRUE	${stringTableLowbatReportingTrue}
LOWBAT_SIGNAL	${stringTableLowbatSignal}
LOWERING_MODE	${stringTableClimateControlRTTransceiverLoweringMode}
LOW_BAT=FALSE	${stringTableBatteryOk}
LOW_BAT=TRUE	${stringTableBatteryEmpty}
LOW_BAT_LIMIT	${stringTableBatteryLowBatLimit}
LUX	${stringTableLux}
MAINS_POWERED	${stringTableMainsPowered}
MAINTENANCE|CONFIG_PENDING	${stringTableConfigPending}
MAINTENANCE|ERROR_BATTERY=BATTERY_DEFECT	${stringTableBatteryFailure}
MAINTENANCE|ERROR_BATTERY=NO_ERROR	${stringTableBatteryOk}
MAINTENANCE|ERROR_OVERHEAT	${stringTableErrorOverheatTrue}
MAINTENANCE|HMW_STICKY_UNREACH	${stringTableStickyUnreach}
MAINTENANCE|LOWBAT	${stringTableBatteryLow}
MAINTENANCE|LOW_BAT	${stringTableBatteryLow}
MAINTENANCE|SABOTAGE	${stringTableSabotage}
MAINTENANCE|STICKY_BATTERY=BATTERY_DEFECT	${stringTableBatteryFailure}
MAINTENANCE|STICKY_BATTERY=BATTERY_WAS_DEFECT	${stringTableBatteryWasDefect}
MAINTENANCE|STICKY_POWER=POWER_FAILURE	${stringTablePowerNotAvailable}
MAINTENANCE|STICKY_POWER=WAS_POWER_FAILURE	${stringTablePowerWasNotAvailable}
MAINTENANCE|STICKY_SABOTAGE=SABOTAGE	${stringTableSabotage}
MAINTENANCE|STICKY_SABOTAGE=WAS_SABOTAGED	${stringTableSabotageContactWasActive}
MAINTENANCE|STICKY_UNREACH	${stringTableStickyUnreach}
MAINTENANCE|UNREACH	${stringTableUnreach}
MANU_MODE	${stringTableClimateControlRTTransceiverManuMode}
MIN_MAX_VALUE_NOT_RELEVANT_FOR_MANU_MODE	${stringTableMinMaxNotRelevantForManuMode}
MIOB_DIN_CONFIG	${stringTableMiobDinConfig}
MOD_EM8BIT_TRANSMITTER	${stringTable8BitTransmitterTitle}
MOD_EM8BIT_TRANSMITTER|DATA_INPUT_PROPERTIE_IN0	${stringTableTransmitterDataInputPropertie0}
MOD_EM8BIT_TRANSMITTER|DATA_INPUT_PROPERTIE_IN1	${stringTableTransmitterDataInputPropertie1}
MOD_EM8BIT_TRANSMITTER|DATA_INPUT_PROPERTIE_IN2	${stringTableTransmitterDataInputPropertie2}
MOD_EM8BIT_TRANSMITTER|DATA_INPUT_PROPERTIE_IN3	${stringTableTransmitterDataInputPropertie3}
MOD_EM8BIT_TRANSMITTER|DATA_INPUT_PROPERTIE_IN4	${stringTableTransmitterDataInputPropertie4}
MOD_EM8BIT_TRANSMITTER|DATA_INPUT_PROPERTIE_IN5	${stringTableTransmitterDataInputPropertie5}
MOD_EM8BIT_TRANSMITTER|DATA_INPUT_PROPERTIE_IN6	${stringTableTransmitterDataInputPropertie6}
MOD_EM8BIT_TRANSMITTER|DATA_INPUT_PROPERTIE_IN7	${stringTableTransmitterDataInputPropertie7}
MOD_EM8BIT_TRANSMITTER|DATA_STABILITY_FILTER_TIME	${stringTableTransmitterDataStabilityFilterTime}
MOD_EM8BIT_TRANSMITTER|DATA_TRANSMISSION_CONDITION	${stringTableTransmitterDataTransmissionCondition}
MOD_EM8BIT_TRANSMITTER|DATA_TRANSMISSION_CONDITION=LEVEL_CHANGE_DATA[HIGH_to_LOW]	${stringTableTransmitterDataTransmissionCondition0}
MOD_EM8BIT_TRANSMITTER|DATA_TRANSMISSION_CONDITION=LEVEL_CHANGE_DATA[LOW_to_HIGH]	${stringTableTransmitterDataTransmissionCondition1}
MOD_EM8BIT_TRANSMITTER|DATA_TRANSMISSION_CONDITION=LEVEL_CHANGE_DATA[LOW_to_HIGH_and_HIGH_to_LOW]	${stringTableTransmitterDataTransmissionCondition2}
MOD_EM8BIT_TRANSMITTER|DATA_TRANSMISSION_CONDITION=NEW_DATA_STABLE_FOR_TIME_DEFAULT_ENABLE	${stringTableTransmitterDataTransmissionCondition3}
MOD_EM8BIT_TRANSMITTER|DATA_TRANSMISSION_CONDITION=NEW_DATA_SEND_IMMEDIATELY_DEFAULT_ENABLE	${stringTableTransmitterDataTransmissionCondition4}
MOD_EM8BIT_TRANSMITTER|DATA_TRANSMISSION_CONDITION=NEW_DATA_STABLE_FOR_TIME_DEFAULT_DISABLE	${stringTableTransmitterDataTransmissionCondition5}
MOD_EM8BIT_TRANSMITTER|DATA_TRANSMISSION_CONDITION=NEW_DATA_SEND_IMMEDIATELY_DEFAULT_DISABLE	${stringTableTransmitterDataTransmissionCondition6}
MOD_EM8BIT_TRANSMITTER|STATE	${stringTableTransmitterState}
MODUS_BUTTON_LOCK	${stringTableModusButtonLock}
MOTION=FALSE	${stringTableMotionDetectorMotionFalse}
MOTION=TRUE	${stringTableMotionDetectorMotionTrue}
MOTIONDETECTOR_TRANSCEIVER	${stringTableMotionDetectorTitle}
MOTION_ACTIVE_TIME	${stringTableMotionDetectorMotionActiveTime}
MOTION_DETECTION_ACTIVE=FALSE	${stringTableMotionDetectorMotionDetectionActiveFalse}
MOTION_DETECTION_ACTIVE=TRUE	${stringTableMotionDetectorMotionDetectionActiveTrue}
MOTION_DETECTOR	${stringTableMotionDetectorTitle}
MOTION_DETECTOR	${stringTableMotionDetectorTitle}
MOTION_DETECTOR|ERROR=0	${stringTableSabotageContactOk}
MOTION_DETECTOR|ERROR=7	${stringTableMotionDetectorErrorSabotage}
MOTION_DETECTOR|ERROR=SABOTAGE	${stringTableMotionDetectorErrorSabotage}
MOTION_DETECTOR|MIN_INTERVAL	${stringTableMotionDetectorMinInterval}
NOT_USED	${stringTableNotUsed}
OLD_LEVEL	${stringTableDimmerOldLevel}
ON_TIME	${stringTableDimmerOnTime}
OPERATING_VOLTAGE	${stringTableOperationVoltage}
OPTICAL_ALARM_SELECTION=BLINKING_ALTERNATELY_REPEATING	${stringTableAlarmBlinkingAlternatelyRepeating}
OPTICAL_ALARM_SELECTION=BLINKING_BOTH_REPEATING	${stringTableAlarmBlinkingBothRepeating}
OPTICAL_ALARM_SELECTION=CONFIRMATION_SIGNAL_0	${stringTableAlarmConfirmingSignal0}
OPTICAL_ALARM_SELECTION=CONFIRMATION_SIGNAL_1	${stringTableAlarmConfirmingSignal1}
OPTICAL_ALARM_SELECTION=CONFIRMATION_SIGNAL_2	${stringTableAlarmConfirmingSignal2}
OPTICAL_ALARM_SELECTION=DISABLE_OPTICAL_SIGNAL	${stringTableAlarmDisableOpticalSignal}
OPTICAL_ALARM_SELECTION=DOUBLE_FLASHING_REPEATING	${stringTableAlarmDoubleFlashingRepeating}
OPTICAL_ALARM_SELECTION=FLASHING_BOTH_REPEATING	${stringTableAlarmFlashingBothRepeating}
OVERTEMP_LEVEL	${stringTableDimmerOverTempLevel}
PARAM_SELECT	${stringTableParamSelect}
PARAM_SELECT=INACTIVE	${stringTableParamSelectInactive}
PARAM_SELECT=T1	${stringTableParamSelectT1}
PARAM_SELECT=T1-T2	${stringTableParamSelectT1MinusT2}
PARAM_SELECT=T2	${stringTableParamSelectT2}
PARAM_SELECT=T2-T1	${stringTableParamSelectT2MinusT1}
PARTY_MODE_SUBMIT	${stringTablePartyModeSubmit}
PARTY_SET_POINT_TEMPERATURE	${stringTableClimateControlRegPartyValue}
PARTY_START_DAY	${stringTablePartyStartDay}
PARTY_START_MONTH	${stringTablePartyStartMonth}
PARTY_START_TIME	${stringTablePartyStartTime}
PARTY_START_YEAR	${stringTablePartyStartYear}
PARTY_STOP_DAY	${stringTablePartyStopDay}
PARTY_STOP_MONTH	${stringTablePartyStopMonth}
PARTY_STOP_TIME	${stringTablePartyStopTime}
PARTY_STOP_YEAR	${stringTablePartyStopYear}
PARTY_TEMPERATURE	${stringTablePartyTemperature}
PARTY_TIME_END	${stringTableClimateControlRegPartyEndTime}
PARTY_TIME_START	${stringTableClimateControlRegPartyStartTime}

PASSAGE_DETECTOR_COUNTER_TRANSMITTER|CHANNEL_OPERATION_MODE	${stringTablePassageDetectorCounterTransmitterChannelOperationMode}
PASSAGE_DETECTOR_COUNTER_TRANSMITTER|COND_TX_DECISION_ABOVE	${stringTablePassageDetectorCounterTransmitterCondTxCondTXDecisionAbove}
PASSAGE_DETECTOR_COUNTER_TRANSMITTER|COND_TX_DECISION_BELOW	${stringTablePassageDetectorCounterTransmitterCondTxCondTXDecisionBelow}
PASSAGE_DETECTOR_COUNTER_TRANSMITTER|COND_TX_THRESHOLD_HI	${stringTablePassageDetectorCounterTransmitterCondTxThresholdHi}
PASSAGE_DETECTOR_COUNTER_TRANSMITTER|COND_TX_THRESHOLD_LO	${stringTablePassageDetectorCounterTransmitterCondTxThresholdLo}

PEER_NEEDS_BURST	${stringTablePeerNeedsBurst}
PIR_OPERATION_MODE	${stringTablePirOperationMode}

PIR_SENSITIVITY	${stringTableSensorSensivity}

PIR_OPERATION_MODE_ECO	${pirOperationModeEco}
PIR_OPERATION_MODE_NORMAL	${pirOperationModeNormal}
PIR_OPERATION_MODE_OFF	${lblOff}

POSITION_SAVE_TIME	${stringTablePositionSaveTime}

POWERMETER_IEC1|ENERGY_COUNTER	${stringTablePowerMeterEnergyCounter}
POWERMETER_IEC1|GAS_ENERGY_COUNTER	${stringTablePowerMeterEnergyCounterGas}
POWERMETER_IEC1|GAS_POWER	${stringTableGasConsumption}
POWERMETER_IEC1|IEC_ENERGY_COUNTER	${stringTablePowerMeterIECEnergyCounter}
POWERMETER_IEC1|IEC_POWER	${stringTableIECPowerMeterPower}
POWERMETER_IEC1|POWER	${stringTablePowerMeterPower}
POWERMETER_IEC2|IEC_ENERGY_COUNTER	${stringTablePowerMeterIECEnergyCounter}
POWERMETER_IEC2|IEC_POWER	${stringTableIECPowerMeterPower}
POWERMETER_IGL|ENERGY_COUNTER	${stringTablePowerMeterEnergyCounter}
POWERMETER_IGL|GAS_ENERGY_COUNTER	${stringTablePowerMeterEnergyCounterGas}
POWERMETER_IGL|GAS_POWER	${stringTableGasConsumption}
POWERMETER_IGL|POWER	${stringTablePowerMeterPower}
POWERMETER|AVERAGING	${stringTablePowerMeterAveraging}
POWERMETER|CURRENT	${stringTablePowerMeterCurrent}
POWERMETER|ENERGY_COUNTER	${stringTablePowerMeterEnergyCounter}
POWERMETER|FREQUENCY	${stringTablePowerMeterFrequency}
POWERMETER|POWER	${stringTablePowerMeterPower}
POWERMETER|TX_MINDELAY	${stringTablePowerMeterTxMinDelay}
POWERMETER|TX_THRESHOLD_CURRENT	${stringTablePowerMeterTxThresholdCurrent}
POWERMETER|TX_THRESHOLD_FREQUENCY	${stringTablePowerMeterTxThresholdFrequency}
POWERMETER|TX_THRESHOLD_POWER	${stringTablePowerMeterTxThresholdPower}
POWERMETER|TX_THRESHOLD_VOLTAGE	${stringTablePowerMeterTxThresholdVoltage}
POWERMETER|VOLTAGE	${stringTablePowerMeterVoltage}
POWERUP_ACTION	${stringTableDimmerPowerUpAction}
POWERUP_JUMPTARGET	${stringTableDimmerPowerUpAction}
POWERUP_OFF	${stringTablePowerUpOFF} 
POWERUP_ON	${stringTablePowerUpON}
POWERUP_ONDELAY_UNIT	${stringTableOnDelayUnit}
POWERUP_ONDELAY_UNIT=10M	${optionUnit10M}
POWERUP_ONDELAY_UNIT=10S	${optionUnit10S}
POWERUP_ONDELAY_UNIT=1M	${optionUnit1M}
POWERUP_ONDELAY_UNIT=1S	${optionUnit1S}
POWERUP_ONDELAY_UNIT=5M	${optionUnit5M}
POWERUP_ONDELAY_UNIT=5S	${optionUnit5S}
POWERUP_ONDELAY_VALUE	${stringTableOnDelayValue}
POWERUP_ONTIME_UNIT	${stringTableOnTimeUnit}
POWERUP_ONTIME_UNIT=10M	${optionUnit10M}
POWERUP_ONTIME_UNIT=10S	${optionUnit10S}
POWERUP_ONTIME_UNIT=1M	${optionUnit1M}
POWERUP_ONTIME_UNIT=1S	${optionUnit1S}
POWERUP_ONTIME_UNIT=5M	${optionUnit5M}
POWERUP_ONTIME_UNIT=5S	${optionUnit5S}
POWERUP_ONTIME_UNIT=H	${optionUnitH}
POWERUP_ONTIME_VALUE	${stringTableOnTimeValue}
POWER_SUPPLY	${stringTablePowerSupply}
POWER|BAT_LEVEL	${stringTableBatteryCapacity}
POWER|LOWBAT=FALSE	${stringTableBatteryOk}
POWER|LOWBAT=TRUE	${stringTableBatteryEmpty}
POWER|USBH_POWERFAIL=FALSE	${stringTableUSBHostActive}
POWER|USBH_POWERFAIL=TRUE	${stringTableUSBHostNotActive}
POWER|U_SOURCE_FAIL=FALSE	${stringTablePowerSupplyOk}
POWER|U_SOURCE_FAIL=TRUE	${stringTablePowerSupplyNotOk}
POWER|U_USBD_OK=FALSE	${stringTableUSBNotActive}
POWER|U_USBD_OK=TRUE	${stringTableUSBActive}
PRESENCEDETECTOR_TRANSCEIVER	${stringTablePresenceDetectorTitle}
PRESENCEDETECTOR_TRANSCEIVER|MIN_INTERVAL	${stringTableMotionDetectorMinInterval}
PRESENCE_DETECTION_ACTIVE=FALSE	${stringTablePresenceDetectionActiveFalse}
PRESENCE_DETECTION_ACTIVE=TRUE	${stringTablePresenceDetectionActiveTrue}
PRESENCE_DETECTION_STATE=FALSE	${stringTablePresenceDetectionStateFalse}
PRESENCE_DETECTION_STATE=TRUE	${stringTablePresenceDetectionStateTrue}
PRESS_LONG	${stringTableKeyPressLong}
PRESS_LONG=TRUE	${stringTableKeyPressLongTrue}
PRESS_SHORT	${stringTableKeyPressShort}
PRESS_SHORT=TRUE	${stringTableKeyPressShortTrue}
PROCESS=NOT_STABLE	${stringTableProcessNotStable}
PROCESS=STABLE	${stringTableProcessStable}
PULSE_SENSOR	${stringTablePulseSensorTitle}
PULSE_SENSOR|SEQUENCE_OK	${stringTablePulseSensorSequenceOk}
PULSE_SENSOR|SEQUENCE_PULSE_1	${stringTablePulseSensorSequencePulse1}
PULSE_SENSOR|SEQUENCE_PULSE_1=NOT_USED	${stringTablePulseSensorSequencePulse1Unused}
PULSE_SENSOR|SEQUENCE_PULSE_2	${stringTablePulseSensorSequencePulse2}
PULSE_SENSOR|SEQUENCE_PULSE_2=NOT_USED	${stringTablePulseSensorSequencePulse2Unused}
PULSE_SENSOR|SEQUENCE_PULSE_3	${stringTablePulseSensorSequencePulse3}
PULSE_SENSOR|SEQUENCE_PULSE_3=NOT_USED	${stringTablePulseSensorSequencePulse3Unused}
PULSE_SENSOR|SEQUENCE_PULSE_4	${stringTablePulseSensorSequencePulse4}
PULSE_SENSOR|SEQUENCE_PULSE_4=NOT_USED	${stringTablePulseSensorSequencePulse4Unused}
PULSE_SENSOR|SEQUENCE_PULSE_5	${stringTablePulseSensorSequencePulse5}
PULSE_SENSOR|SEQUENCE_PULSE_5=NOT_USED	${stringTablePulseSensorSequencePulse5Unused}
PULSE_SENSOR|SEQUENCE_TOLERANCE	${stringTablePulseSensorSequenceTolerance}
RAINDETECTOR	${stringTableRainDetector}
RAINDETECTOR_HEAT|STATE=FALSE	${stringTableRainDetectorHeatingOff}
RAINDETECTOR_HEAT|STATE=TRUE	${stringTableRainDetectorHeatingOn}
RAINDETECTOR|COND_TX_THRESHOLD_HI	${stringTableRainDetectorCondTxThresholdHi}
RAINDETECTOR|COND_TX_THRESHOLD_LO	${stringTableRainDetectorCondTxThresholdLo}
RAINDETECTOR|EVENT_FILTERTIME	${stringTableRainDetectorEventFilterTime}
RAINDETECTOR|EVENT_RELEASE_FILTER_TIME	${stringTableRainDetectorEventReleaseFilterTime}
RAINDETECTOR|STATE=DRY	${stringTableRainDetectorDry}
RAINDETECTOR|STATE=RAIN	${stringTableRainDetectorRain}
RAINDETECTOR|STATE_HIGH_HOLD_TIME	${stringTableRainDetectorStateHighHoldTime}
RAMP_STOP	${stringTableDimmerRampStop}
RAMP_TIME	${stringTableDimmerRampTime}
REDUCE_LEVEL	${stringTableDimmerReduceLevel}
REDUCE_TEMP_LEVEL	${stringTableDimmerReduceTempLevel}
REFERENCE_RUNNING_TIME_BOTTOM_TOP_UNIT	${stringTableTimeBottomTopUnit}
REFERENCE_RUNNING_TIME_BOTTOM_TOP_VALUE	${stringTableTimeBottomTopValue}

REFERENCE_RUNNING_TIME_TOP_BOTTOM_UNIT	${stringTableTimeTopBottomUnit}
REFERENCE_RUNNING_TIME_TOP_BOTTOM_VALUE	${stringTableTimeTopBottomValue}

REFERENCE_RUNNING_TIME_SLATS_UNIT	${stringTableTimeSlatsUnit}
REFERENCE_RUNNING_TIME_SLATS_VALUE	${stringTableTimeSlatsValue}

REMOTECONTROL_RECEIVER	${stringTableRemoteControlReceiver}
REPEATED_LONG_PRESS_TIMEOUT_UNIT	${stringTableKeyLongPressTimeOutUnit}
REPEATED_LONG_PRESS_TIMEOUT_UNIT=100ms	${optionUnit100MS}
REPEATED_LONG_PRESS_TIMEOUT_UNIT=H	${optionUnitH}
REPEATED_LONG_PRESS_TIMEOUT_UNIT=M	${optionUnitM}
REPEATED_LONG_PRESS_TIMEOUT_UNIT=S	${optionUnitS}
REPEATED_LONG_PRESS_TIMEOUT_VALUE	${stringTableKeyLongPressTimeOutValue}
RESET_PRESENCE	${stringTableResetPresence}
RESTART_BUTTONPRESS	${stringTableRestartButtonPress}
RESTART_BUTTONPRESS_IF_WAS_ON	${stringTableRestartButtonPressIfWasOn}
RESTART_LAST	${stringTableRestartLast}
RESTART_OFF	${stringTableRestartOff}
RGB	${stringTableRGBWColorValue}
RGBW	${stringTableRGBWColorValue}
RGBW_AUTOMATIC	${stringTableRGBWAutomaticTitle}
RGBW_AUTOMATIC|COLOR_CHANGE_SPEED	${stringTableRGBWColorChangeSpeed}
RGBW_AUTOMATIC|PROGRAM	${stringTableRGBWProgram}
RGBW_COLOR	${stringTableRGBWColorTitle}
RGBW_COLOR|COLOR	${stringTableRGBWColorValue}
RGBW_COLOR|WHITE_ADJUSTMENT_VALUE_BLUE	${stringTableRGBWWhiteAdjustmentBlue}
RGBW_COLOR|WHITE_ADJUSTMENT_VALUE_GREEN	${stringTableRGBWWhiteAdjustmentGreen}
RGBW_COLOR|WHITE_ADJUSTMENT_VALUE_RED	${stringTableRGBWWhiteAdjustmentRed}
ROTARY_HANDLE_SENSOR	${stringTableRHSTitle}
ROTARY_HANDLE_SENSOR|ERROR=SABOTAGE	${stringTableRHSErrorSabotage}
ROTARY_HANDLE_SENSOR|EVENT_DELAYTIME	${stringTableRHSEventDelayTime}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_A	${stringTableRHSMsgPosA}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_A=CLOSED	${stringTableRHSMsgPosClosed}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_A=NO_MSG	${stringTableRHSMsgPosNoMsg}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_A=OPEN	${stringTableRHSMsgPosOpen}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_A=TILTED	${stringTableRHSMsgPosTilted}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_B	${stringTableRHSMsgPosB}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_B=CLOSED	${stringTableRHSMsgPosClosed}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_B=NO_MSG	${stringTableRHSMsgPosNoMsg}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_B=OPEN	${stringTableRHSMsgPosOpen}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_B=TILTED	${stringTableRHSMsgPosTilted}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_C	${stringTableRHSMsgPosC}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_C=CLOSED	${stringTableRHSMsgPosClosed}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_C=NO_MSG	${stringTableRHSMsgPosNoMsg}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_C=OPEN	${stringTableRHSMsgPosOpen}
ROTARY_HANDLE_SENSOR|MSG_FOR_POS_C=TILTED	${stringTableRHSMsgPosTilted}
ROTARY_HANDLE_SENSOR|STATE=CLOSED	${stringTableRHSStateClosed}
ROTARY_HANDLE_SENSOR|STATE=OPEN	${stringTableRHSStateOpen}
ROTARY_HANDLE_SENSOR|STATE=TILTED	${stringTableRHSStateTilted}
ROTARY_HANDLE_TRANSCEIVER	${stringTableRHSTitle}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_A	${stringTableRHSMsgPosA}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_A=CLOSED	${stringTableRHSMsgPosClosed}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_A=NO_MSG	${stringTableRHSMsgPosNoMsg}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_A=OPEN	${stringTableRHSMsgPosOpen}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_A=TILTED	${stringTableRHSMsgPosTilted}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_B	${stringTableRHSMsgPosB}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_B=CLOSED	${stringTableRHSMsgPosClosed}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_B=NO_MSG	${stringTableRHSMsgPosNoMsg}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_B=OPEN	${stringTableRHSMsgPosOpen}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_B=TILTED	${stringTableRHSMsgPosTilted}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_C	${stringTableRHSMsgPosC}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_C=CLOSED	${stringTableRHSMsgPosClosed}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_C=NO_MSG	${stringTableRHSMsgPosNoMsg}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_C=OPEN	${stringTableRHSMsgPosOpen}
ROTARY_HANDLE_TRANSCEIVER|MSG_FOR_POS_C=TILTED	${stringTableRHSMsgPosTilted}
ROTARY_HANDLE_TRANSCEIVER|STATE=CLOSED	${stringTableRHSStateClosed}
ROTARY_HANDLE_TRANSCEIVER|STATE=OPEN	${stringTableRHSStateOpen}
ROTARY_HANDLE_TRANSCEIVER|STATE=TILTED	${stringTableRHSStateTilted}
ROUTER_MODULE_ENABLED	${stringTableRouterModuleEnabled}
RS485_IDLE_TIME	${stringTableRS485IdleTime}

RSSI_DEVICE	${stringTableRSSIDevice}
RSSI_PEER	${stringTableRSSIPeer}

SABOTAGE=FALSE	${stringTableSabotageContactOk}
SABOTAGE=TRUE	${stringTableSabotageContactWasActive}
SABOTAGE_MSG	${stringTableSabotageMsg}
SABOTAGE|SHAKING	${stringTableSabotageContact}
SECTION	${stringTableSection}
SELF_CALIBRATION_RESULT=FALSE	${stringTableSelfCalibrationResultFalse}
SELF_CALIBRATION_RESULT=TRUE	${stringTableSelfCalibrationResultTrue}

SELF_CALIBRATION=START	${stringTableSelfCalibrationStart}
SELF_CALIBRATION=STOP	${stringTableSelfCalibrationStop}



SENSOR=FALSE	${stringTableSensorFalse}
SENSOR=TRUE	${stringTableSensorTrue}
SENSOR_ERROR=FALSE	${stringTableSensorErrorFalse}
SENSOR_ERROR=TRUE	${stringTableSensorErrorTrue}
SENSOR_FOR_CARBON_DIOXIDE	${stringTableSensorCO2Title}
SENSOR_FOR_CARBON_DIOXIDE|EVENT_FILTERTIME	${stringTableSensorCO2EventFilterTime}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_A	${stringTableSensorCO2MsgPosA0}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_A=LEVEL_NORMAL	${stringTableSensorCO2MsgPosA1}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_A=NO_MSG	${stringTableSensorCO2MsgPosA2}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_B	${stringTableSensorCO2MsgPosB0}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_B=LEVEL_ADDED	${stringTableSensorCO2MsgPosB3}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_B=LEVEL_ADDED_STRONG	${stringTableSensorCO2MsgPosB4}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_B=LEVEL_NORMAL	${stringTableSensorCO2MsgPosB2}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_B=NO_MSG	${stringTableSensorCO2MsgPosB1}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_C	${stringTableSensorCO2MsgPosC0}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_C=LEVEL_ADDED	${stringTableSensorCO2MsgPosC3}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_C=LEVEL_ADDED_STRONG	${stringTableSensorCO2MsgPosC4}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_C=LEVEL_NORMAL	${stringTableSensorCO2MsgPosC2}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_C=NO_MSG	${stringTableSensorCO2MsgPosC1}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_D	${stringTableSensorCO2MsgPosD0}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_D=LEVEL_ADDED	${stringTableSensorCO2MsgPosD3}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_D=LEVEL_ADDED_STRONG	${stringTableSensorCO2MsgPosD4}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_D=LEVEL_NORMAL	${stringTableSensorCO2MsgPosD2}
SENSOR_FOR_CARBON_DIOXIDE|MSG_FOR_POS_D=NO_MSG	${stringTableSensorCO2MsgPosD1}
SENSOR_FOR_CARBON_DIOXIDE|STATE=LEVEL_ADDED	${stringTableSensorCO2LevelHigh}
SENSOR_FOR_CARBON_DIOXIDE|STATE=LEVEL_ADDED_STRONG	${stringTableSensorCO2LevelStrong}
SENSOR_FOR_CARBON_DIOXIDE|STATE=LEVEL_NORMAL	${stringTableSensorCO2LevelOk}
SENSOR_RANGE_2G	${stringTableSensorRange2G}
SENSOR_RANGE_4G	${stringTableSensorRange4G}
SENSOR_RANGE_8G	${stringTableSensorRange8G}
SENSOR_RANGE_16G	${stringTableSensorRange16G}
SENSOR_SENSITIVITY	${stringTableSensorSensivity}
SENSOR_WINDOW	${stringTableSensorWindowTitle}
SENSOR_WINDOW|EVENT_DELAYTIME	${stringTableSensorWindowEventDelayTime}
SENSOR_WINDOW|EVENT_DELAYTIME=NOT_USED	${stringTableActorWindowStatusInfoNotUsed}
SENSOR_WINDOW|LEVEL	${stringTableActorWindowLevel}
SENSOR_WINDOW|TIPTRONIC_STATE=TIPTRONIC_UNKNOWN_STATE1	${stringTableActorWindowTT_12}
SENSOR_WINDOW|TIPTRONIC_STATE=TIPTRONIC_UNKNOWN_STATE2	${stringTableActorWindowTT_13}
SENSOR_WINDOW|TIPTRONIC_STATE=TIPTRONIC_WINDOW_IN_SHEV_POSITION	${stringTableActorWindowTT_14}
SENSOR_WINDOW|TIPTRONIC_STATE=TT_CLOSES_FROM_TILT_POSITION	${stringTableActorWindowTT_6}
SENSOR_WINDOW|TIPTRONIC_STATE=TT_COULT_BE_OPEND_MANUAL_IN_TURN_POSITION	${stringTableActorWindowTT_10}
SENSOR_WINDOW|TIPTRONIC_STATE=TT_INITIAL_OPERATION	${stringTableActorWindowTT_15}
SENSOR_WINDOW|TIPTRONIC_STATE=TT_IS_IN_TILT_POSITION_FULL_OPEND	${stringTableActorWindowTT_5}
SENSOR_WINDOW|TIPTRONIC_STATE=TT_IS_IN_TILT_POSITION_PARTITIAL_OPEND	${stringTableActorWindowTT_4}
SENSOR_WINDOW|TIPTRONIC_STATE=TT_IS_UNLOCKED_IN_TILT_POSITION_VENT_FRAME_IS_DUE	${stringTableActorWindowTT_2}
SENSOR_WINDOW|TIPTRONIC_STATE=TT_IS_UNLOCKED_IN_TURN_POSITION_VENT_FRAME_IS_DUE	${stringTableActorWindowTT_9}
SENSOR_WINDOW|TIPTRONIC_STATE=TT_LOCKED	${stringTableActorWindowTT_0}
SENSOR_WINDOW|TIPTRONIC_STATE=TT_LOCKS_FROM_TILT_POSITION	${stringTableActorWindowTT_7}
SENSOR_WINDOW|TIPTRONIC_STATE=TT_OPENS_IN_TILT_POSITION	${stringTableActorWindowTT_3}
SENSOR_WINDOW|TIPTRONIC_STATE=TT_UNLOCKS_IN_TILT_POSITION	${stringTableActorWindowTT_1}
SENSOR_WINDOW|TIPTRONIC_STATE=TT_UNLOCKS_IN_TURN_POSITION	${stringTableActorWindowTT_8}
SENSOR_WINDOW|TIPTRONIC_STATE=TT_VENT_FRAME_IS_DUE_WINDOW_LOCKS_FROM_TURN_POSITION	${stringTableActorWindowTT_11}
SENSOR_WINDOW|WINDOW_TYPE=TIPTRONIC_SHEV_TILT	${stringTableSensorWindowType_6}
SENSOR_WINDOW|WINDOW_TYPE=TIPTRONIC_SHEV_TURN	${stringTableSensorWindowType_5}
SENSOR_WINDOW|WINDOW_TYPE=TIPTRONIC_TOPLIGHT	${stringTableSensorWindowType_3}
SENSOR_WINDOW|WINDOW_TYPE=TIPTRONIC_TURN	${stringTableSensorWindowType_4}
SENSOR_WINDOW|WINDOW_TYPE=TIPTRONIC_TURN_AND_TILT	${stringTableSensorWindowType_1}
SENSOR_WINDOW|WINDOW_TYPE=TIPTRONIC_TURN_AND_TILT_TURN_LOCKED	${stringTableSensorWindowType_2}
SENSOR_WINDOW|WINDOW_TYPE=TIPTRONIC_UNKNOWN_WINDOW_TYPE	${stringTableSensorWindowType_0}
SENSOR_WINDOW|WIN_RELEASE=FALSE	${stringTableActorWindowReleaseFalse}
SENSOR_WINDOW|WIN_RELEASE=TRUE	${stringTableActorWindowReleaseTrue}
SENSOR|INPUT_LOCKED	${stringTableSensorInputLocked}
SET_TEMPERATURE	${stringTableClimateControlRTTransceiverSetTemperature}
SHUTTER_CONTACT	${stringTableShutterContactTitle}
SHUTTER_CONTACT_HMIP	${stringTableShutterContactTitle}
SHUTTER_CONTACT_HMIP|ERROR=SABOTAGE	${stringTableShutterContactErrorSabotage}
SHUTTER_CONTACT_HMIP|MSG_FOR_POS_A	${stringTableShutterContactHmIPMsgPosA0}
SHUTTER_CONTACT_HMIP|MSG_FOR_POS_A=CLOSED	${stringTableShutterContactHmMsgPosA1}
SHUTTER_CONTACT_HMIP|MSG_FOR_POS_A=NO_MSG	${stringTableShutterContactMsgPosA2}
SHUTTER_CONTACT_HMIP|MSG_FOR_POS_A=OPEN	${stringTableShutterContactMsgPosA3}
SHUTTER_CONTACT_HMIP|MSG_FOR_POS_B	${stringTableShutterContactHmIPMsgPosB0}
SHUTTER_CONTACT_HMIP|MSG_FOR_POS_B=CLOSED	${stringTableShutterContactMsgPosB1}
SHUTTER_CONTACT_HMIP|MSG_FOR_POS_B=NO_MSG	${stringTableShutterContactMsgPosB2}
SHUTTER_CONTACT_HMIP|MSG_FOR_POS_B=OPEN	${stringTableShutterContactMsgPosB3}
SHUTTER_CONTACT_HMIP|STATE=CLOSED	${stringTableShutterContactStateFalse}
SHUTTER_CONTACT_HMIP|STATE=FALSE	${stringTableShutterContactStateFalse}
SHUTTER_CONTACT_HMIP|STATE=OPEN	${stringTableShutterContactStateTrue}
SHUTTER_CONTACT_HMIP|STATE=TRUE	${stringTableShutterContactStateTrue}
SHUTTER_CONTACT|ERROR=SABOTAGE	${stringTableShutterContactErrorSabotage}
SHUTTER_CONTACT|MSG_FOR_POS_A	${stringTableShutterContactMsgPosA0}
SHUTTER_CONTACT|MSG_FOR_POS_A=CLOSED	${stringTableShutterContactMsgPosA1}
SHUTTER_CONTACT|MSG_FOR_POS_A=NO_MSG	${stringTableShutterContactMsgPosA2}
SHUTTER_CONTACT|MSG_FOR_POS_A=OPEN	${stringTableShutterContactMsgPosA3}
SHUTTER_CONTACT|MSG_FOR_POS_B	${stringTableShutterContactMsgPosB0}
SHUTTER_CONTACT|MSG_FOR_POS_B=CLOSED	${stringTableShutterContactMsgPosB1}
SHUTTER_CONTACT|MSG_FOR_POS_B=NO_MSG	${stringTableShutterContactMsgPosB2}
SHUTTER_CONTACT|MSG_FOR_POS_B=OPEN	${stringTableShutterContactMsgPosB3}
SHUTTER_CONTACT|STATE=CLOSED	${stringTableShutterContactStateFalse}
SHUTTER_CONTACT|STATE=FALSE	${stringTableShutterContactStateFalse}
SHUTTER_CONTACT|STATE=OPEN	${stringTableShutterContactStateTrue}
SHUTTER_CONTACT|STATE=TRUE	${stringTableShutterContactStateTrue}
SHUTTER_TRANSMITTER|LEVEL	${stringTableBlindLevel}
SHUTTER_TRANSMITTER|LEVEL_2	${stringTableJalousieSlatsLevel}

SHUTTER_VIRTUAL_RECEIVER	${stringTableShutterVirtualReceiverTitle}
SHUTTER_VIRTUAL_RECEIVER|LEVEL	${stringTableBlindLevel}
SHUTTER_VIRTUAL_RECEIVER|LEVEL_2	${stringTableJalousieSlatsLevel}
SHUTTER_VIRTUAL_RECEIVER|STOP	${stringTableBlindStop}
SIGNAL	${stringTableSignal}
SIGNAL_CHIME	${stringTableSignalChimeTitle}
SIGNAL_CHIME|ACT_NUM	${stringTableSignalChimeActNum}
SIGNAL_CHIME|ACT_TYP	${stringTableSignalChimeActType}
SIGNAL_CHIME|ON_TIME	${stringTableSignalChimeOnTime}
SIGNAL_CHIME|STATE=FALSE	${stringTableSignalChimeStateFalse}
SIGNAL_CHIME|STATE=TRUE	${stringTableSignalChimeStateTrue}
SIGNAL_LED	${stringTableSignalLEDTitle}
SIGNAL_LED|ACT_NUM	${stringTableSignalLEDActNum}
SIGNAL_LED|ACT_TYP	${stringTableSignalLEDActType}
SIGNAL_LED|ON_TIME	${stringTableSignalLEDOnTime}
SIGNAL_LED|STATE=FALSE	${stringTableSignalLEDStateFalse}
SIGNAL_LED|STATE=TRUE	${stringTableSignalLEDStateTrue}
SIGNAL_TONE	${stringTableSignalTone}
SIGNAL_TONE=HIGH	${stringTableSignalToneHigh}
SIGNAL_TONE=LOW	${stringTableSignalToneLow}
SIGNAL_TONE=MID	${stringTableSignalToneMid}
SIGNAL_TONE=VERY_HIGH	${stringTableSignalToneVeryHigh}
SMOKE_DETECTOR_ALARM_STATUS=IDLE_OFF	${stringTableStateIdleOff}
SMOKE_DETECTOR_ALARM_STATUS=INTRUSION_ALARM	${stringTableStateIntrusionAlarm}
SMOKE_DETECTOR_ALARM_STATUS=PRIMARY_ALARM	${stringTableStatePrimaryAlarm}
SMOKE_DETECTOR_ALARM_STATUS=SECONDARY_ALARM	${stringTableStateSecondaryAlarm}
SMOKE_DETECTOR_COMMAND=COMMUNICATION_TEST	${stringTableCommandCommunicationTest}
SMOKE_DETECTOR_COMMAND=COMMUNICATION_TEST_REPEATED	${stringTableCommandCommunicationTestRepeated}
SMOKE_DETECTOR_COMMAND=INTRUSION_ALARM	${stringTableCommandIntrusionAlarm}
SMOKE_DETECTOR_COMMAND=INTRUSION_ALARM_OFF	${stringTableCommandIntrusionAlarmOff}
SMOKE_DETECTOR_COMMAND=SMOKE_TEST	${stringTableCommandSmokeTest}
SMOKE_DETECTOR_EVENT=ALARM_OFF	${stringTableEventAlarmOff}
SMOKE_DETECTOR_EVENT=ALARM_OFF_REPEATED	${stringTableEventAlarmOffRepeated}
SMOKE_DETECTOR_EVENT=INTRUSION_ALARM	${stringTableEventIntrusionAlarm}
SMOKE_DETECTOR_EVENT=INTRUSION_ALARM_REPEATED	${stringTableEventIntrusionAlarmRepeated}
SMOKE_DETECTOR_EVENT=LOW_BAT	${stringTableEventLowBat}
SMOKE_DETECTOR_EVENT=LOW_BAT_REPEATED	${stringTableEventLowBatRepeated}
SMOKE_DETECTOR_EVENT=PRIMARY_ALARM	${stringTableEventPrimaryAlarm}
SMOKE_DETECTOR_EVENT=SECONDARY_ALARM	${stringTableEventSecondaryAlarm}
SMOKE_DETECTOR_TEAM	${stringTableSmokeDetectorTitle}
SMOKE_DETECTOR_TEAM_V2	${stringTableSmokeDetectorTitle}
SMOKE_DETECTOR_TEAM_V2|STATE=FALSE	${stringTableSmokeDetectorStateFalse}
SMOKE_DETECTOR_TEAM_V2|STATE=TRUE	${stringTableSmokeDetectorStateTrue}
SMOKE_DETECTOR_TEAM|STATE=FALSE	${stringTableSmokeDetectorStateFalse}
SMOKE_DETECTOR_TEAM|STATE=TRUE	${stringTableSmokeDetectorStateTrue}
SMOKE_DETECTOR_TEST_RESULT=COMMUNICATION_TEST_OK	${stringTableCommunicatingTestOK}
SMOKE_DETECTOR_TEST_RESULT=COMMUNICATION_TEST_SENT	${stringTableCommunicatingTestSent}
SMOKE_DETECTOR_TEST_RESULT=NONE	${stringTableSystemTestNone}
SMOKE_DETECTOR_TEST_RESULT=SMOKE_TEST_FAILED	${stringTableSystemTestFailure}
SMOKE_DETECTOR_TEST_RESULT=SMOKE_TEST_OK	${stringTableSystemTestOK}
SMOKE_DETECTOR|ERROR_ALARM_TEST=ALARM_TEST_FAILED	${stringTableSmokeDetectorAlarmTestFailure}
SMOKE_DETECTOR|ERROR_ALARM_TEST=NO_ERROR	${stringTableSmokeDetectorAlarmTestOK}
SMOKE_DETECTOR|ERROR_SMOKE_CHAMBER=DEGRADED_SMOKE_CHAMBER	${stringTableSmokeDetectorSmokeChamberFailure}
SMOKE_DETECTOR|ERROR_SMOKE_CHAMBER=NO_ERROR	${stringTableSmokeDetectorSmokeChamberOK}
SMOKE_DETECTOR|REPEAT_ENABLE	${stringTableSmokeDetectorRepeatEnable}
SMOKE_DETECTOR|STATE=FALSE	${stringTableSmokeDetectorStateFalse}
SMOKE_DETECTOR|STATE=TRUE	${stringTableSmokeDetectorStateTrue}
SOFTONOFF	${stringTableSoftOnOff}
SOUND_ID	${stringTableSoundID}
SOUND_LONG	${stringTableSoundLong}
SOUND_LONG_LONG	${stringTableSoundLongLong}
SOUND_LONG_SHORT	${stringTableSoundLongShort}
SOUND_LONG_SHORT_SHORT	${stringTableSoundLongShortShort}
SOUND_NO_SOUND	${stringTableSoundNoSound}
SOUND_SHORT	${stringTableSoundShort}
SOUND_SHORT_SHORT	${stringTableSoundShortShort}
SPEED_MULTIPLIER	${stringTableSpeedMultiplier}
STANDBY_TIME	${stringTableStandByTime}
STATE=FALSE	${stringTableStateFalse}
STATE=TRUE	${stringTableStateTrue}
STATUSINFO_MINDELAY	${stringTableStatusInfoMinDelay}
STATUSINFO_RANDOM	${stringTableStatusInfoRandom}
STATUS_INDICATOR	${stringTableStatusIndicatorTitle}
STATUS_INDICATOR|INHIBIT=FALSE	${stringTableStatusIndicatorInhibitFalse}
STATUS_INDICATOR|INHIBIT=TRUE	${stringTableStatusIndicatorInhibitTrue}
STATUS_INDICATOR|ON_TIME	${stringTableStatusIndicatorOnTime}
STATUS_INDICATOR|STATE=FALSE	${stringTableStatusIndicatorStateFalse}
STATUS_INDICATOR|STATE=TRUE	${stringTableStatusIndicatorStateTrue}
STATUS_MESSAGE_TEXT_ALIGNMENT_LEFT_ALIGNED	${stringTableStatusMessageTextAligmentLeftAligned}
SUBMIT	${stringTableSubmit}
SWITCH	${stringTableSwitchTitle}
SWITCH_INTERFACE	${stringTableSwitchInterfaceTitle}
SWITCH_INTERFACE|PRESS	${stringTableSwitchInterfacePress}
SWITCH_INTERFACE|STATE=FALSE	${stringTableSwitchInterfaceStateFalse}
SWITCH_INTERFACE|STATE=TRUE	${stringTableSwitchInterfaceStateTrue}
SWITCH_PANIC	${stringTableSirenSwitchPanicTitle}
SWITCH_SENSOR	${stringTableSwitchSensorTitle}
SWITCH_TRANSMIT	${stringTableSwitchTransmitTitle}
SWITCH_TRANSMIT|TWO_POINT_HYSTERESIS	${stringTableSwitchTransmitTwoPointHysteresis}
SWITCH_VIRTUAL_RECEIVER	${stringTableSwitchVirtualReceiverTitle}
SWITCH|AES_ACTIVE	${stringTableSwitchAESActive}
SWITCH|ON_TIME	${stringTableSwitchOnTime}
SWITCH|STATE=FALSE	${stringTableSwitchStateFalse}
SWITCH|STATE=TRUE	${stringTableSwitchStateTrue}
SWITCH|STATUSINFO_RANDOM_A	${stringTableStatusInfoRandomA}
TACTILE_SWITCH	${stringTableTactileSwitch}
TACTILE_SWITCH=FALSE	${stringTableTactileSwitchFalse}
TACTILE_SWITCH=TRUE	${stringTableTactileSwitchTrue}
TEMPERATUREFALL_MODUS	${stringTableTemperatureModus}
TEMPERATUREFALL_VALUE	${stringTableTemperatureValue}
TEMPERATUREFALL_WINDOW_OPEN	${stringTableTemperatureWindowOpen}
TEMPERATUREFALL_WINDOW_OPEN_TIME_PERIOD	${stringTableTemperatureOpenTimePeriod}
TEMPERATURE_COMFORT	${stringTableTemperatureComfort}
TEMPERATURE_LIMITER=FALSE	${stringTableTemperatureLimiterFalse}
TEMPERATURE_LIMITER=TRUE	${stringTableTemperatureLimiterTrue}
TEMPERATURE_LOWERING	${stringTableTemperatureLowering}
TEMPERATURE_MAXIMUM	${stringTableTemperatureMaximum}
TEMPERATURE_MINIMUM	${stringTableTemperatureMinimum}
TEMPERATURE_OFFSET	${stringTableTemperatureOffset}
THERMALCONTROL_TRANSMIT	${stringTableThermalControlTitle}
TILT_SENSOR	${stringTableTiltSensorTitle}
TILT_SENSOR|EVENT_FILTERTIME	${stringTableTiltSensorEventFilterTime}
TILT_SENSOR|MSG_FOR_POS_A	${stringTableTiltSensorMsgPosA0}
TILT_SENSOR|MSG_FOR_POS_A=CLOSED	${stringTableTiltSensorMsgPosA1}
TILT_SENSOR|MSG_FOR_POS_A=NO_MSG	${stringTableTiltSensorMsgPosA2}
TILT_SENSOR|MSG_FOR_POS_A=OPEN	${stringTableTiltSensorMsgPosA3}
TILT_SENSOR|MSG_FOR_POS_B	${stringTableTiltSensorMsgPosB0}
TILT_SENSOR|MSG_FOR_POS_B=CLOSED	${stringTableTiltSensorMsgPosB1}
TILT_SENSOR|MSG_FOR_POS_B=NO_MSG	${stringTableTiltSensorMsgPosB2}
TILT_SENSOR|MSG_FOR_POS_B=OPEN	${stringTableTiltSensorMsgPosB3}
TILT_SENSOR|STATE=FALSE	${stringTableTiltSensorStateFalse}
TILT_SENSOR|STATE=TRUE	 ${stringTableTiltSensorStateTrue}
TIME_OF_OPERATION	${stringTableTimeOfOperation}
TRANSMIT_DEV_TRY_MAX	${stringTableTransmitDevTryMax}
TRANSMIT_TRY_MAX	${stringTableTransmitTryMax}
TX_MINDELAY	${stringTableTxMinDelay}
TX_MINDELAY_UNIT	${stringTableTxMinDelayUnit}
TX_MINDELAY_UNIT=100MS	${optionUnit100MS}
TX_MINDELAY_UNIT=H	${optionUnitH}
TX_MINDELAY_UNIT=M	${optionUnitM}
TX_MINDELAY_UNIT=S	${optionUnitS}
TX_MINDELAY_VALUE	${stringTableTxMinDelayValue}
TX_THRESHOLD_PERCENT	${stringTableTxThresholdPercent}
TX_THRESHOLD_POWER	${stringTablePowerMeterTxThresholdPower}
UNREACH=FALSE	${stringTableUnreachFalse}
UNREACH=TRUE	${stringTableUnreachTrue}
UPDATE_PENDING	${stringTableUpdatePending}
UPDATE_PENDING=FALSE	${stringTableUpdatePendingFalse}
UPDATE_PENDING=TRUE	${stringTableUpdatePendingTrue}
USER_COLOR	${stringTableSubmit}
USER_PROGRAM	${stringTableSubmit}

VALVE_MAXIMUM_POSITION	${stringTableValveMaximumPosition}

VALVE_STATE	${stringTableClimateControlRTTransceiverVentPos}
VALVE_STATE=ADAPTION_DONE	${stringTableValveStateAdaptionDone}
VALVE_STATE=ADAPTION_IN_PROGRESS	${stringTableValveStateAdaptionInProgress}
VALVE_STATE=ADJUSTMENT_TOO_BIG	${stringTableValveStateAdjTooBig}
VALVE_STATE=ADJUSTMENT_TOO_SMALL	${stringTableValveStateAdjToSmall}
VALVE_STATE=ERROR_POSITION	${stringTableValveStateErrorPosition}
VALVE_STATE=RUN_TO_START	${stringTableValveStateRunToStart}
VALVE_STATE=STATE_NOT_AVAILABLE	${stringTableValveStateNotAvailable}
VALVE_STATE=TOO_TIGHT	${stringTableValveStateToTight}
VALVE_STATE=WAIT_FOR_ADAPTION	${stringTableValveStateWaitForAdaption}
VENT_CLOSED	${stringTableVentClosed}
VENT_OPEN	${stringTableVentOpen}
VIRTUAL_DIMMER	${stringTableVirtualDimmerTitle}
VIRTUAL_DIMMER|ERROR=LOAD_FAILURE	${stringTableVirtualDimmerErrorLoadFailure}
VIRTUAL_DIMMER|ERROR_OVERHEAT	${stringTableDimmerErrorOverheat}
VIRTUAL_DIMMER|ERROR_OVERLOAD	${stringTableDimmerErrorOverload}
VIRTUAL_DIMMER|ERROR_REDUCED	${stringTableDimmerErrorReduced}
VIRTUAL_DIMMER|LOGIC_COMBINATION	${stringTableLogicCombination}
VIRTUAL_DIMMER|POWERUP_ACTION	${stringTableVirtualDimmerPowerUpAction}
VIRTUAL_DIMMER|RAMP_STOP	${stringTableDimmerRampStop}
VIRTUAL_DIMMER|STATUSINFO_RANDOM	${stringTableVirtualDimmerStatusInfoRandom}
VIRTUAL_DUAL_WHITE_COLOR|LEVEL	${stringTableDualWhiteColorLevel}
VIRTUAL_DUAL_WHITE_COLOR|LEVEL_REAL	${stringTableDualWhiteColorLevelReal}
VIRTUAL_DUAL_WHITE_COLOR|OLD_LEVEL	${stringTableDualWhiteColorOldLevel}
VIRTUAL_DUAL_WHITE_COLOR|RAMP_STOP	${stringTableDualWhiteColorRampStop}
VIRTUAL_DUAL_WHITE_COLOR|RAMP_TIME	${stringTableDualWhiteColorRampTime}
VIRTUAL_KEY	${stringTableVirtualKeyTitle}
VIRTUAL_KEY|LEVEL	${stringTableVirtualKeyLevel}
VOLTAGE_0	${stringTableVoltage0}
VOLTAGE_100	${stringTableVoltage100}
VOLUME_0	{stringTableVolume0}
VOLUME_10	{stringTableVolume1}
VOLUME_100$	{stringTableVolume10}
VOLUME_20	{stringTableVolume2}
VOLUME_30	{stringTableVolume3}
VOLUME_40	{stringTableVolume4}
VOLUME_50	{stringTableVolume5}
VOLUME_60	{stringTableVolume6}
VOLUME_70	{stringTableVolume7}
VOLUME_80	{stringTableVolume8}
VOLUME_90	{stringTableVolume9}
WAKEUP_BEHAVIOUR	${stringTableButtonResponseWithoutChannelChooser}
WAKEUP_BEHAVIOUR_STATUS_MSG_CONFIRMATION	${stringTableBehaviourStatusMsgConfirmation}
WAKEUP_BEHAVIOUR_STATUS_MSG_RESISTANCE	${stringTableBehaviourStatusMsgResistance}
WAKEUP_BEHAVIOUR_STATUS_SIGNALIZATION_CONFIRMATION	${stringTableBehaviourStatusSignalizationConfirmation}
WAKEUP_DEFAULT_CHANNEL	${stringTableWakeupDefaultChannel}
WATERDETECTIONSENSOR	${stringTableWDSTitle}
WATERDETECTIONSENSOR|EVENT_FILTERTIME	${stringTableWDSEventFilterTime}
WATERDETECTIONSENSOR|EVENT_FILTERTIME	${stringTableWDSEventFilterTime}
WATERDETECTIONSENSOR|MSG_FOR_POS_A	${stringTableWDSMsgPosA0}
WATERDETECTIONSENSOR|MSG_FOR_POS_A=DRY	${stringTableWDSMsgPosA1}
WATERDETECTIONSENSOR|MSG_FOR_POS_A=NO_MSG	${stringTableWDSMsgPosA2}
WATERDETECTIONSENSOR|MSG_FOR_POS_B	${stringTableWDSMsgPosB0}
WATERDETECTIONSENSOR|MSG_FOR_POS_B=DRY	${stringTableWDSMsgPosB1}
WATERDETECTIONSENSOR|MSG_FOR_POS_B=NO_MSG	${stringTableWDSMsgPosB2}
WATERDETECTIONSENSOR|MSG_FOR_POS_B=WATER	${stringTableWDSMsgPosB3}
WATERDETECTIONSENSOR|MSG_FOR_POS_B=WET	${stringTableWDSMsgPosB4}
WATERDETECTIONSENSOR|MSG_FOR_POS_C	${stringTableWDSMsgPosC0}
WATERDETECTIONSENSOR|MSG_FOR_POS_C=NO_MSG	${stringTableWDSMsgPosC1}
WATERDETECTIONSENSOR|MSG_FOR_POS_C=WATER	${stringTableWDSMsgPosC2}
WATERDETECTIONSENSOR|MSG_FOR_POS_C=WET	${stringTableWDSMsgPosC3}
WATERDETECTIONSENSOR|STATE=DRY	${stringTableWDSStateDry}
WATERDETECTIONSENSOR|STATE=WATER	${stringTableWDSStateWater}
WATERDETECTIONSENSOR|STATE=WET	${stringTableWDSStateWet}
WEATHER	${stringTableWeatherTitle}
WEATHER_RECEIVER	${stringTableWeatherReceiver}
WEATHER_TRANSMIT|HUMIDITY	${stringTableWeatherHumidity}
WEATHER_TRANSMIT|TEMPERATURE	${stringTableWeatherTemperature}
WEATHER|AIR_PRESSURE	${stringTableWeatherAirPressure}
WEATHER|BRIGHTNESS	${stringTableWeatherBrightness}
WEATHER|HUMIDITY	${stringTableWeatherHumidity}
WEATHER|RAINING	${stringTableWeatherRaining}
WEATHER|RAINING=FALSE	${stringTableWeatherRainingFalse}
WEATHER|RAINING=TRUE	${stringTableWeatherRainingTrue}
WEATHER|RAIN_COUNTER	${stringTableWeatherRainCounter}
WEATHER|STORM_LOWER_THRESHOLD	${stringTableWeatherStormLowerThres}
WEATHER|STORM_UPPER_THRESHOLD	${stringTableWeatherStormUpperThres}
WEATHER|SUNSHINEDURATION	${stringTableWeatherSunshineDuration}
WEATHER|SUNSHINE_THRESHOLD	${stringTableWeatherSunshineThres}
WEATHER|TEMPERATURE	${stringTableWeatherTemperature}
WEATHER|WIND_DIRECTION	${stringTableWeatherWindDir}
WEATHER|WIND_DIRECTION_RANGE	${stringTableWeatherWindDirRange}
WEATHER|WIND_SPEED	${stringTableWeatherWindSpeed}
WEATHER|WIND_SPEED_RESULT_SOURCE	${stringTableWeatherWindSpeedResultSource}
WEATHER|WIND_SPEED_RESULT_SOURCE=AVERAGE_VALUE	${stringTableWeatherWindSpeedResultSourceAverage}
WEATHER|WIND_SPEED_RESULT_SOURCE=MAX_VALUE	${stringTableWeatherWindSpeedResultSourceMax}

WEEK_PROGRAM_CHANNEL_LOCKS	${stringTableWeekProgramChannelLocks}
WEEK_PROGRAM_TARGET_CHANNEL_LOCKS	${stringTableWeekProgramTargetChannelLocks}
WEEK_PROGRAM_TARGET_CHANNEL_LOCK=MANU_MODE	${stringTableWeekProgramTargetChannelLockManu}
WEEK_PROGRAM_TARGET_CHANNEL_LOCK=AUTO_MODE_WITH_RESET	${stringTableWeekProgramTargetChannelLockAutoReset}
WEEK_PROGRAM_TARGET_CHANNEL_LOCK=AUTO_MODE_WITHOUT_RESET	${stringTableWeekProgramTargetChannelLockAuto}

WHITE	${stringTableColorTemperature}
WINDOW_OPEN_REPORTING	${stringTableWindowOpenReporting}
WINDOW_OPEN_REPORTING=FALSE	${stringTableWindowOpenReportingFalse}
WINDOW_OPEN_REPORTING=TRUE	${stringTableWindowOpenReportingTrue}
WINDOW_STATE	${stringTableWindowState}
WINDOW_SWITCH_RECEIVER	${stringTableWindowSwitchReceiver}
WINMATIC	${stringTableWinMaticTitle}
WINMATIC|ERROR=MOTOR_TILT_ERROR	${stringTableWinMaticErrorMotorTilt}
WINMATIC|ERROR=MOTOR_TURN_ERROR	${stringTableWinMaticErrorMotorTurn}
WINMATIC|LEVEL	${stringTableWinMaticLevel}
WINMATIC|LEVEL=LOCKED	${stringTableWinMaticLevelLocked}
WINMATIC|MOUNT_SIDE	${stringTableWinMaticMountSide}
WINMATIC|MOUNT_SIDE=LEFT	${stringTableWinMaticMountSideLeft}
WINMATIC|MOUNT_SIDE=RIGHT	${stringTableWinMaticMountSideRight}
WINMATIC|PULL_FORCE	${stringTableWinMaticPullForce}
WINMATIC|PUSH_FORCE	${stringTableWinMaticPushForce}
WINMATIC|RELOCK_DELAY	${stringTableWinMaticReLockDelay}
WINMATIC|RELOCK_DELAY=NOT_USED	${stringTableWinMaticReLockDelayNotUsed}
WINMATIC|SPEED	${stringTableWinMaticSpeed}
WINMATIC|STATE_UNCERTAIN=FALSE	${stringTableWinMaticStateUncertainFalse}
WINMATIC|STATE_UNCERTAIN=TRUE	${stringTableWinMaticStateUncertainTrue}
WINMATIC|STOP	${stringTableWinMaticStop}
WINMATIC|TILT_MAX	${stringTableWinMaticTiltMax}
WS_CS	${stringTableWSCS}
WS_TH	${stringTableWSTH}
minutes	${stringTableMinute}
15Min	${optionUnit15M}
30Min	${optionUnit30M}
60Min	${optionUnit60M}
120Min	${optionUnit120M}



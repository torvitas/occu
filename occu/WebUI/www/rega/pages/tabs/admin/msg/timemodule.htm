<div id="tmTitle" class="popupTitle" xmlns="http://www.w3.org/1999/html">&nbsp;<% Write(system.GetVar("title")); %></div>

<div style="left: 132px; top: 147px; display:none;" class="CLASS05100" id="hmOverlay">
    <select id="ovH">
        <option>00</option>
        <option>01</option>
        <option>02</option>
        <option>03</option>
        <option>04</option>
        <option>05</option>
        <option>06</option>
        <option>07</option>
        <option>08</option>
        <option>09</option>
        <option>10</option>
        <option>11</option>
        <option>12</option>
        <option>13</option>
        <option>14</option>
        <option>15</option>
        <option>16</option>
        <option>17</option>
        <option>18</option>
        <option>19</option>
        <option>20</option>
        <option>21</option>
        <option>22</option>
        <option>23</option>
    </select>
    <span>h:</span>
    <select id="ovM">
        <option>00</option>
        <option>05</option>
        <option>10</option>
        <option>15</option>
        <option>20</option>
        <option>25</option>
        <option>30</option>
        <option>35</option>
        <option>40</option>
        <option>45</option>
        <option>50</option>
        <option>55</option>
      </select>
    <table cellpadding="2px">
        <tbody>
            <tr class="CLASS05101">
                <td class="CLASS05102" onclick="hideHmOverlay();">${filterClose}</td>
                <td>&nbsp;</td>
                <td class="CLASS05102" onclick="useOverlayValues();">${filterSet}</td>
             </tr>
          </tbody>
    </table>
</div>

<div  class="CLASS05103"><table class="popupTable CLASS05104" border="0"><tr><td>${timeModuleUserHint}</td></tr></table></div>

<div class="CLASS05103">
  <table class="popupTable CLASS05104" border="0" >
    <colgroup>
      <col width="24%" />
      <col width="26%" />
      <col width="24%" />
      <col width="26%" />
    </colgroup>
    
    <tr class="CLASS05105"><td colspan="4" >${timeModuleLblTimeTitle}</td></tr>
    
    <tr class="CLASS05107">
      <td>
        <input type="radio" id="tmRange" name="timerange" checked="checked" onclick="disableRangeControls(false);" />
        ${timeModuleLblTimeRange}
      </td>
      <td>
        <input type="radio" name="timespan" id="tsRange" />
        ${timeModuleLblStart} <input type="text" size="5" id="rangestart" />&nbsp;<input id="btnRangeStart" type="button" value="v" onclick="showHMOverlay(id, 'rangestart');"/>
      </td>
      <td>
        ${timeModuleLblEnd} <input type="text" size="5" id="rangeend" />&nbsp;<input id="btnRangeEnd" type="button" value="v" onclick="showHMOverlay(id, 'rangeend');"/>
      </td>
      <td>
        <!-- Dauer:
        <input id="txtDuration" type="text" size="3" onblur="calcRange(id);" />
        <select id="typeDuration">
          <option>Stunden</option>
          <option>Minuten</option>
        </select>
        -->
      </td>
    </tr>
    <tr>
    <td></td>
    <td colspan="2">
      <input type="radio" name="timespan" id="tsDay" />${timeModuleLblAllDay}<br />
      <input type="radio" name="timespan" id="tsDaytime" />${timeModuleLblAstroDay}<br />
      <input type="radio" name="timespan" id="tsNighttime" />${timeModuleLblAstroNight}
    </td>
    <td></td>
    </tr>
    
    <tr class="CLASS05107">
      <td>
        <input id="tmPoint" type="radio" name="timerange" onclick="disableRangeControls(true);" />${timeModuleLblPointOfTime}
      </td>
      <td>
        <input type="text" size="5" id="timebegin" />&nbsp;<input id="btntimebegin" type="button" value="v" onclick="showHMOverlay(id, 'timebegin');"/>
      </td>
      <td></td>
      <td></td>
    </tr>
    <tr><td colspan="4"><hr /></td></tr>
    
    <!-- Serienmuster -->
    <tr class="CLASS05105">
      <td colspan="4">${timeModuleLblSerialPatternTitle}</td>
    </tr>
    <tr> 
      <td>
        <table class="popupTable CLASS05108" border="0" >
          <tr>
            <td><input type="radio" name="pattern" id="ptOnce" onclick="onChangePattern(id);" />${timeModuleLblSerialPatternOnce}</td>
          </tr>
          <tr>
            <td><input type="radio" name="pattern" id="ptPeriodic" onclick="onChangePattern(id);" />${timeModuleLblSerialPatternTimeInterval}</td>
          </tr>
           <tr>
            <td><input type="radio" name="pattern" id="ptDaily" onclick="onChangePattern(id);" />${timeModuleLblSerialPatternDaily}</td>
          </tr>
          <tr>
            <td><input type="radio" name="pattern" id="ptWeekly" onclick="onChangePattern(id);" />${timeModuleLblSerialPatternWeekly}</td>
          </tr>
          <tr>
            <td><input type="radio" name="pattern" id="ptMonthly" onclick="onChangePattern(id);"  />${timeModuleLblSerialPatternMonthly}</td>
          </tr>
          <tr>
            <td><input type="radio" name="pattern" id="ptYearly" onclick="onChangePattern(id);"  />${timeModuleLblSerialPatternYearly}</td>
          </tr>
        </table>
      </td> 
      <td valign="top" colspan="3">
        <div id="patternStuff"></div>
      </td>
    </tr>
    <tr><td colspan="4"><hr /></td></tr>
    
     <!-- Gültigkeit -->
    <tr class="CLASS05105">
      <td colspan="4">${timeModuleLblValidityTitle}</td>
    </tr>
    <tr>
      <td colspan="2">
         &nbsp;&nbsp;${timeModuleLblValidityBegin} <input id='tmBegin' type='text' name='valDate' size='13' /> <input type='button'  value="v" onclick="displayDatePicker('valDate', false, 'dmy', '.');" />
      </td>
      <td colspan="2">
        <input id="tmNoEnd" type='radio' name='valPattern' checked /> ${timeModuleLblValidityNoEnd}
      </td>
    </tr>
    <tr>
     <td colspan="2"></td>
     <td colspan="2"><input id='tmEndN' type='radio' name='valPattern' /> ${timeModuleLblValidityXIterationsA} <input id='tmEndNTxt' type='text' size='3' /> ${timeModuleLblValidityXIterationsB}</td>
     </tr>
    <tr>
      <td colspan="2"></td>
      <td colspan="2"><input id='tmEnd' type='radio' name='valPattern' /> ${timeModuleLblValidityEndDate}  <input id='tmEndTxt' type='text' name='endDate' size='13' /> <input type='button'  value="v" onclick="displayDatePicker('endDate', false, 'dmy', '.');" /></td>
    </tr>
  </table>
</div>

<div class="popupControls">
  <table>
    <tr>
      <td><div onclick="closeDatePicker();PopupClose();" class="CLASS05109">${btnCancel}</div></td>
      <td><div onclick="closeDatePicker();OnOK();" class="CLASS05109">  ${btnOk}  </div></td>
    </tr>
  </table>
</div>

<script type="text/javascript">
  var d = new Date();
  var hours =  d.getHours();
  if (hours < 10) 
    hours = "0" + hours;
  var mins = d.getMinutes();
  if (mins < 10) 
    mins = "0" + mins;
  $("rangestart").value = hours + ":" + mins;
  $("timebegin").value = hours + ":" + mins;
  d.setMinutes(d.getMinutes() + 30);
  var hours =  d.getHours();
  if (hours < 10) 
    hours = "0" + hours;
  var mins = d.getMinutes();
  if (mins < 10) 
    mins = "0" + mins;
  $("rangeend").value = hours + ":" + mins;

  var lastTransTo = "";
  showHMOverlay = function(id, transferToId) {
    lastTransTo = transferToId;
    var sTmpVal = $(transferToId).value;
    var arTmp = sTmpVal.split(':');
    $("ovH").selectedIndex = parseInt(arTmp[0],10);
    $("ovM").selectedIndex = Math.floor(parseInt(arTmp[1],10) / 5);
    var arParentPos = Position.page($(id));
    var arTitlePos = Position.page($("tmTitle"));
    $("hmOverlay").style.left = (arParentPos[0] - arTitlePos[0] - $("hmOverlay").getWidth() / 2) + "px";
    $("hmOverlay").style.top = (arParentPos[1] - arTitlePos[1] + $(id).getHeight()) + "px";
    $("hmOverlay").show();
  };
  
  useOverlayValues = function() {
    if (lastTransTo != "") {
      var sTmp = $("ovH")[$("ovH").selectedIndex].innerHTML + ":" + $("ovM")[$("ovM").selectedIndex].innerHTML;
      $(lastTransTo).value = sTmp;
    }
    hide("hmOverlay");
  };
  
  hideHmOverlay = function() {
    hide("hmOverlay");
  };
    
  onChangePattern = function(id) {
    var s = "";
    if (id == "ptOnce") {
      s += translateKey("timeModuleLblSerialPatternAt")+" <input type='text' id='onceDay' name='onceDay' size='13' value='" +  getCurrentDate() + "'/>";
      s += "<input type='button'  value='v' onclick='displayDatePicker(\"onceDay\", false, \"dmy\", \".\");' />";
    }
    if (id == "ptPeriodic") {
      s += translateKey("timeModuleLblSerialPatternEvery");
      s += " <input id='ptpVal' type='text' size='3' />";
      s += "<select id='ptpSel' >";
      s += "<option>"+translateKey("timeModuleSelectSerialPatternHours")+"</option>";
      s += "<option>"+translateKey("timeModuleSelectSerialPatternMinutes")+"</option>";
      s += "<option>"+translateKey("timeModuleSelectSerialPatternSeconds")+"</option>";
      s += "</select>";
    }
    
    if (id == "ptDaily") {
     s += "<table class='popupTable CLASS05110' border='0' >";
     s += "<tr><td><input id='ptdDaily' type='radio' name='dailyPattern' checked='checked' />"+translateKey("timeModuleLblSerialPatternEveryDay")+"</td></tr>";
     s += "<tr><td><input id='ptdN' type='radio' name='dailyPattern' />"+translateKey("timeModuleLblSerialPatternEveryXDaysA")+" <input id='txtptdN' type='text' size='3' />  "+translateKey("timeModuleLblSerialPatternEveryXDaysB")+"</td></tr>";
     s += "<tr><td><input id='ptdWE' type='radio' name='dailyPattern' />"+translateKey("timeModuleLblSerialPatternWeekend")+"</td></tr>";
     s += "<tr><td><input id='ptdNoWE' type='radio' name='dailyPattern' />"+translateKey("timeModuleLblSerialPatternWeekday")+" </td></tr>";
     s += "</table>";
    }
    
    if (id == "ptWeekly") {
      s += "<table class='popupTable CLASS05110' border='0' >";
      s += "<tr>";
        s += "<td><input id='ptwE' type='radio' name='weeklyPattern' /> "+translateKey("timeModuleLblSerialPatternEveryWeek")+" </td>";
        s += "<td><input id='ptwMo' type='checkbox' />"+translateKey("timeModuleLblSelSerialPatternMonday")+"</td>";
        s += "<td><input id='ptwSa' type='checkbox' />"+translateKey("timeModuleLblSelSerialPatternSaturday")+"</td>";
      s += "</tr>";
      s += "<tr>";
        s += "<td><input id='ptwN' type='radio' name='weeklyPattern' /> "+translateKey("timeModuleLblSerialPatternEveryXWeeksA")+" <input id='txtptwN' type='text' size='3' /> "+translateKey("timeModuleLblSerialPatternEveryXWeeksB")+"</td>";
        s += "<td><input id='ptwTu' type='checkbox' />"+translateKey("timeModuleLblSelSerialPatternTuesday")+"</td>";
        s += "<td><input id='ptwSu' type='checkbox' />"+translateKey("timeModuleLblSelSerialPatternSunday")+"</td>";
      s += "</tr>";
      s += "<tr><td></td><td><input id='ptwWe' type='checkbox' />"+translateKey("timeModuleLblSelSerialPatternWednesday")+"</td><td></td></tr>";
      s += "<tr><td></td><td><input id='ptwTh' type='checkbox' />"+translateKey("timeModuleLblSelSerialPatternThursday")+"</td><td></td></tr>";
      s += "<tr><td></td><td><input id='ptwFr' type='checkbox' />"+translateKey("timeModuleLblSelSerialPatternFriday")+"</td><td></td></tr>";
      s += "</table>";
    }
    
    if (id == "ptMonthly") {
      s += "<table class='popupTable CLASS05110' border='0' >";
      s += "<tr>";
        s += "<td>";
        s += "<input id='ptmN' type='radio' name='monthlyPattern' />";
        //s += "Am <input type='text' id='ptmN1' name='montlyPattern' size='3' />. Tag jedes <input id='ptmN2' type='text' size='2' />. Monats";
        s += translateKey("timeModuleLblSerialPatternMonthlyAt")+" <input type='text' id='ptmN1' name='montlyPattern' size='3' /> "+translateKey("timeModuleLblSerialPatternMonthlyA")+" <input id='ptmN2' type='text' size='2' /> " + translateKey("timeModuleLblSerialPatternMonthlyMonth");
        s += "</td></tr>";
        s += "<td>";
        s += "<input id='ptmS' type='radio' name='monthlyPattern' />";
        s += translateKey("timeModuleLblSerialPatternMonthlyAt");
        s += " <select id='ptmCount' >";
        s += "<option>"+translateKey("timeModuleSelectSerialPatternFirst")+"</option><option>"+translateKey("timeModuleSelectSerialPatternSecond")+"</option><option>"+translateKey("timeModuleSelectSerialPatternThird")+"</option><option>"+translateKey("timeModuleSelectSerialPatternFourth")+"</option><option>"+translateKey("timeModuleSelectSerialPatternFifth")+"</option>";
        s += "</select> ";
        s += "<select id='ptmDays' >";
        s += "<option>"+translateKey("timeModuleLblSelSerialPatternMonday")+"</option><option>"+translateKey("timeModuleLblSelSerialPatternTuesday")+"</option><option>"+translateKey("timeModuleLblSelSerialPatternWednesday")+"</option>";
        s += "<option>"+translateKey("timeModuleLblSelSerialPatternThursday")+"</option><option>"+translateKey("timeModuleLblSelSerialPatternFriday")+"</option><option>"+translateKey("timeModuleLblSelSerialPatternSaturday")+"</option><option>"+translateKey("timeModuleLblSelSerialPatternSunday")+"</option>";
        s += "</select> ";
        s += translateKey("timeModuleLblSerialPatternMonthlyB")+" <input id='txtptmN' type='text' size='3' /> "+translateKey("timeModuleLblSerialPatternMonthlyMonth");
        s += "</td>";
      s += "</tr>";
      s += "</table>";
    }
    
    if (id == "ptYearly") {
       s += "<table class='popupTable CLASS05110' border='0' >";
       s += "<tr>";
         s += "<td>";
           s += "<input id='ptyN' type='radio' name='yearlyPattern' /> "+translateKey("timeModuleLblSerialPatternEach")+" "; // Jeden
           s += "<input id='txtptyN' type='text' size='3' />.";
           s += "<select id='selptyN'>";
            s += "<option>"+translateKey("timeModuleSelectSerialPatternJan")+"</option><option>"+translateKey("timeModuleSelectSerialPatternFeb")+"</option><option>"+translateKey("timeModuleSelectSerialPatternMar")+"</option><option>"+translateKey("timeModuleSelectSerialPatternApr")+"</option><option>"+translateKey("timeModuleSelectSerialPatternMay")+"</option>";
            s += "<option>"+translateKey("timeModuleSelectSerialPatternJun")+"</option><option>"+translateKey("timeModuleSelectSerialPatternJul")+"</option><option>"+translateKey("timeModuleSelectSerialPatternAug")+"</option><option>"+translateKey("timeModuleSelectSerialPatternSep")+"</option>";
            s += "<option>"+translateKey("timeModuleSelectSerialPatternOct")+"</option><option>"+translateKey("timeModuleSelectSerialPatternNov")+"</option><option>"+translateKey("timeModuleSelectSerialPatternDec")+"</option>";
           s += "</select>";
         s += "</td>";
         s += "<tr><td>";
          s += "<input id='ptyS' type='radio' name='yearlyPattern' /> "+translateKey("timeModuleLblSerialPatternMonthlyAt");
          s += " <select id='ptyCount' >";
           s += "<option>"+translateKey("timeModuleSelectSerialPatternFirst")+"</option><option>"+translateKey("timeModuleSelectSerialPatternSecond")+"</option><option>"+translateKey("timeModuleSelectSerialPatternThird")+"</option><option>"+translateKey("timeModuleSelectSerialPatternFourth")+"</option><option>"+translateKey("timeModuleSelectSerialPatternFifth")+"</option>";
          s += "</select>&nbsp;";
          s += "<select id='ptyDays' >";
           s += "<option>"+translateKey("timeModuleLblSelSerialPatternMonday")+"</option><option>"+translateKey("timeModuleLblSelSerialPatternTuesday")+"</option><option>"+translateKey("timeModuleLblSelSerialPatternWednesday")+"</option>";
           s += "<option>"+translateKey("timeModuleLblSelSerialPatternThursday")+"</option><option>"+translateKey("timeModuleLblSelSerialPatternFriday")+"</option><option>"+translateKey("timeModuleLblSelSerialPatternSaturday")+"</option><option>"+translateKey("timeModuleLblSelSerialPatternSunday")+"</option>";
          s += "</select> " + translateKey("timeModuleLblSerialPatternIn");
          s += " <select id='ptyMonth'>";
           s += "<option>"+translateKey("timeModuleSelectSerialPatternJan")+"</option><option>"+translateKey("timeModuleSelectSerialPatternFeb")+"</option><option>"+translateKey("timeModuleSelectSerialPatternMar")+"</option><option>"+translateKey("timeModuleSelectSerialPatternApr")+"</option><option>"+translateKey("timeModuleSelectSerialPatternMay")+"</option>";
           s += "<option>"+translateKey("timeModuleSelectSerialPatternJun")+"</option><option>"+translateKey("timeModuleSelectSerialPatternJul")+"</option><option>"+translateKey("timeModuleSelectSerialPatternAug")+"</option><option>"+translateKey("timeModuleSelectSerialPatternSep")+"</option>";
           s += "<option>"+translateKey("timeModuleSelectSerialPatternOct")+"</option><option>"+translateKey("timeModuleSelectSerialPatternNov")+"</option><option>"+translateKey("timeModuleSelectSerialPatternDec")+"</option>";
          s += "</select>";
         s += "</td></tr>";
       s += "</table>";
    }
    $("patternStuff").innerHTML = s;
  };
  
  checkInputs = function()
  {
    if( !checkTime( $("rangestart").value ) )
    {
      //alert("Bitte geben Sie eine gültige Zeit ein: Zeitbereich Beginn");
      alert(translateKey("timeModuleAlertRangeStart"));
      return false;
    }
    if( !checkTime( $("rangeend").value ) )
    {
      //alert("Bitte geben Sie eine gültige Zeit ein: Zeitbereich Ende");
      alert(translateKey("timeModuleAlertRangeEnd"));
      return false;
    }
    if( !checkTime( $("timebegin").value ) )
    {
      //alert("Bitte geben Sie eine gültige Zeit ein: Zeitpunkt Beginn");
      alert(translateKey("timeModuleAlertTimeBegin"));
      return false;
    }
    if( $("ptOnce").checked )
    {
      if( !checkDate( $("onceDay").value) )
      {
        //alert("Bitte geben Sie eine gültiges Datum ein: Serienmuster einmalig");
        alert(translateKey("timeModuleAlertOnce"));
        return false;
      }
    }
    if( $("ptPeriodic").checked )
    {
      var bOK = true;
      var iVal = parseInt($("ptpVal").value,10);
      if( isNaN(iVal ) )
      {
        bOK = false;
      }
      else
      {
        if( iVal < 1 )
        {
          bOK = false;
        }
      }
      if( !bOK )
      {
        //alert( "Bitte geben Sie eine gültige Zahl beim Serienmuster Zeitintervall ein." );
        alert(translateKey("timeModuleAlertPeriodic"));
        return false;
      }
    }
    if( $("ptDaily").checked && $("ptdN").checked )
    {
      var bOK = true;
      var iVal = parseInt( $("txtptdN").value, 10 );
      if( isNaN(iVal ) )
      {
        bOK = false;
      }
      else
      {
        if( iVal < 1 )
        {
          bOK = false;
        }
      }
      if( !bOK )
      {
        //alert( "Bitte geben Sie eine gültige Zahl beim Serienmuster Täglich ein." );
        alert(translateKey("timeModuleAlertDaily"));
        return false;
      }
    }
    if( $("ptWeekly").checked && $("ptwN").checked )
    {
      var bOK = true;
      var iVal = parseInt( $("txtptwN").value, 10 );
      if( isNaN(iVal ) )
      {
        bOK = false;
      }
      else
      {
        if( iVal < 1 )
        {
          bOK = false;
        }
      }
      if( !bOK )
      {
        //alert("Bitte geben Sie eine gültige Zahl ein: Serienmuster Wöchentlich");
        alert(translateKey("timeModuleAlertWeekly"));
        return false;
      }
    }
    if( $("ptMonthly").checked )
    {
      if( $("ptmN").checked )
      {
        var bOK = true;
        var iVal = parseInt( $("ptmN1").value, 10 );
        if( isNaN(iVal ) )
        {
          bOK = false;
        }
        else
        {
          if( iVal < 1 )
          {
            bOK = false;
          }
        }
        var iVal = parseInt( $("ptmN2").value, 10 );
        if( isNaN(iVal ) )
        {
          bOK = false;
        }
        else
        {
          if( iVal < 1 )
          {
            bOK = false;
          }
        }
        if( !bOK )
        {
          //alert("Bitte geben Sie eine gültige Zahl ein: Serienmuster Monatlich");
          alert(translateKey("timeModuleAlertMonthly"));
          return false;
        }
      }
      if( $("ptmS").checked )
      {
        var bOK = true;
        var iVal = parseInt( $("txtptmN").value, 10 );
        if( isNaN(iVal ) )
        {
          bOK = false;
        }
        else
        {
          if( iVal < 1 )
          {
            bOK = false;
          }
        }
        if( !bOK )
        {
          //alert("Bitte geben Sie eine gültige Zahl ein: Serienmuster Monatlich");
          alert(translateKey("timeModuleAlertMonthly"));
          return false;
        }
      }
    }
    if( $("ptYearly").checked && $("ptyN").checked )
    {
      var bOK = true;
      var iVal = parseInt( $("txtptyN").value, 10 );
      if( isNaN(iVal ) )
      {
        bOK = false;
      }
      else
      {
        if( iVal < 1 )
        {
          bOK = false;
        }
      }
      if( !bOK )
      {
        //alert("Bitte geben Sie eine gültige Zahl ein: Serienmuster Jährlich");
        alert(translateKey("timeModuleAlertYearly"));
        return false;
      }
    }
    if( !checkDate( $("tmBegin").value ) )
    {
      //alert("Bitte geben Sie eine gültiges Datum ein: Gültigkeitsdauer Beginn");
      alert(translateKey("timeModuleAlertBegin"));
      return false;
    }
    if( $("tmEndN").checked )
    {
      if( !checkDigitsOnly($("tmEndNTxt").value ) )
      {
        //alert("Bitte geben Sie eine gültiges Datum ein: Gültigkeitsdauer Endet nach...");
        alert(translateKey("timeModuleAlertEndX"));
        return false;
      }
    }
    if( $("tmEnd").checked )
    {
      if( !checkDate($("tmEndTxt").value))
      {
        //alert("Bitte geben Sie eine gültiges Datum ein: Gültigkeitsdauer Endet am...");
        alert(translateKey("timeModuleAlertEnd"));
        return false;
      }
    }
    return true;
  };
  
  OnOK = function()
  {
    if( !checkInputs() )
    {
      return;
    }
    var tm = {};
    tm.time     = 0;
    tm.caldur   = 0;
    tm.caltime  = 0;
    tm.wd       = 0;
    tm.period   = 0;
    tm.calrep   = 0;
    tm.begin    = "";
    tm.calcount = 0;
    tm.end      = "0";
    tm.sot      = 0;
    
    if( $("tmRange").checked )
    {
      if( $("tsRange").checked )
      {
        var tmp = $("rangestart").value;
        var arStart = tmp.split(':');
        switch( arStart.length )
        {
          case 3:
            var iHours   = parseInt(arStart[0],10);
            var iMinutes = parseInt(arStart[1],10);
            var iSeconds = parseInt(arStart[2],10);
            break;
          case 2:
            var iHours   = parseInt(arStart[0],10);
            var iMinutes = parseInt(arStart[1],10);
            var iSeconds = 0;
            break;
          case 1:
            var iHours   = parseInt(arStart[0],10);
            var iMinutes = 0;
            var iSeconds = 0;
          case 0:
          default:
            var iHours   = 0;
            var iMinutes = 0;
            var iSeconds = 0;
            break;
        }
        
        var sHours = addLeadingZero(iHours);
        var sMinutes = addLeadingZero(iMinutes);
        var sSeconds = addLeadingZero(iSeconds);
        
        if( tmp.length == 1 ) { tmp = "0"+tmp; }
        tm.time = "2007-01-01 "+sHours+":"+sMinutes+":"+sSeconds;
        
        conInfo( "Timemodule: START = "+sHours+":"+sMinutes+":"+sSeconds );
        
        var secStart = (iHours * 60 * 60) + (iMinutes * 60);
        
        tmp = $("rangeend").value;
        var arEnd = tmp.split(':');
        
        switch( arEnd.length )
        {
          case 3:
            var iHours   = parseInt(arEnd[0],10);
            var iMinutes = parseInt(arEnd[1],10);
            var iSeconds = parseInt(arEnd[2],10);
            break;
          case 2:
            var iHours   = parseInt(arEnd[0],10);
            var iMinutes = parseInt(arEnd[1],10);
            var iSeconds = 0;
            break;
          case 1:
            var iHours   = parseInt(arEnd[0],10);
            var iMinutes = 0;
            var iSeconds = 0;
          case 0:
          default:
            var iHours   = 0;
            var iMinutes = 0;
            var iSeconds = 0;
            break;
        }
        
        var sHours = addLeadingZero(iHours);
        var sMinutes = addLeadingZero(iMinutes);
        var sSeconds = addLeadingZero(iSeconds);
        conInfo( "Timemodule: END = "+sHours+":"+sMinutes+":"+sSeconds );

        var secEnd = (iHours * 60 * 60) + (iMinutes * 60);
        
        if( secEnd < secStart )
        {
          tm.caldur = (24 * 60 * 60) + secEnd - secStart;
        }
        else
        {
          tm.caldur = secEnd - secStart;
        }
      }
      if ($("tsDay").checked) {  }
      if ($("tsDaytime").checked) {
        tm.sot = 3; // ESP-Konstante: sotAfterSunrise
      }
      if ($("tsNighttime").checked) {
        tm.sot = 6; // ESP-Konstante: sotAfterSunset
      }
    }
    if( $("tmPoint").checked )
    {
      var tmp = $("timebegin").value;
      var arBegin = tmp.split(':');
      switch( arBegin.length )
        {
          case 3:
            var iHours   = parseInt(arBegin[0],10);
            var iMinutes = parseInt(arBegin[1],10);
            var iSeconds = parseInt(arBegin[2],10);
            break;
          case 2:
            var iHours   = parseInt(arBegin[0],10);
            var iMinutes = parseInt(arBegin[1],10);
            var iSeconds = 0;
            break;
          case 1:
            var iHours   = parseInt(arBegin[0],10);
            var iMinutes = 0;
            var iSeconds = 0;
          case 0:
          default:
            var iHours   = 0;
            var iMinutes = 0;
            var iSeconds = 0;
            break;
        }
        
        var sHours = addLeadingZero(iHours);
        var sMinutes = addLeadingZero(iMinutes);
        var sSeconds = addLeadingZero(iSeconds);
      
        tm.time =  "2007-01-01 "+sHours+":"+sMinutes+":"+sSeconds;
        tm.caldur = 0;
    }
    if ($("ptOnce").checked) {
      tm.type = TM_ONCE;
      var tmp = $("onceDay").value;
      var iPos = tmp.indexOf(',');
      if (iPos > -1)
        tmp = tmp.substr(iPos + 2);
      var arTmp = tmp.split('.');
      tm.caltime = arTmp[2] + "-" + arTmp[1] + "-" + arTmp[0];
    }
    
    if ($("ptPeriodic").checked) {
      tm.type = TM_PERIODIC;
      var tmp = parseInt($("ptpVal").value,10);
      var val = 0;
      switch($("ptpSel").selectedIndex) {
      case 0:
        val = tmp * 60 * 60;
        break;
      case 1:
        val = tmp * 60;
        break;
      case 2:
        val = tmp;
        break;
      }
      tm.period = val;
    }
    
    if ($("ptDaily").checked) {
      tm.type = TM_DAILY;
      if ($("ptdDaily").checked) {}
      if ($("ptdN").checked) {
        tm.calrep = parseInt($("txtptdN").value,10);
        if( isNaN(tm.calrep) ) tm.calrep = 1;
      }
      if ($("ptdWE").checked) {
        tm.wd = TM_WEEKEND;
      }
      if ($("ptdNoWE").checked) {
        tm.wd = TM_WORKDAYS;
      }
    }
    
    if ($("ptWeekly").checked) {
      tm.type = TM_WEEKLY;
      var bitVal = 0;
      if ($("ptwMo").checked) bitVal = bitVal | TM_MON;
      if ($("ptwTu").checked) bitVal = bitVal | TM_TUE;
      if ($("ptwWe").checked) bitVal = bitVal | TM_WED;
      if ($("ptwTh").checked) bitVal = bitVal | TM_THU;
      if ($("ptwFr").checked) bitVal = bitVal | TM_FRI;
      if ($("ptwSa").checked) bitVal = bitVal | TM_SAT;
      if ($("ptwSu").checked) bitVal = bitVal | TM_SUN;
      tm.wd = bitVal;
      if ($("ptwN").checked)
        tm.calrep = parseInt($("txtptwN").value,10);
    }
    
    if ($("ptMonthly").checked) {
      tm.type = TM_MONTHLY;
      if ($("ptmN").checked) {
        tm.period = parseInt($("ptmN1").value,10);
        tm.calrep = parseInt($("ptmN2").value,10);
      }
      if ($("ptmS").checked) {
        tm.wd = Math.pow(2, $("ptmDays").selectedIndex);
        tm.period = $("ptmCount").selectedIndex + 1;
        tm.calrep = $("txtptmN").value;
      }
    }
    
    if ($("ptYearly").checked) {
      tm.type = TM_YEARLY;
      if ($("ptyN").checked) {
        tm.period = parseInt($("txtptyN").value,10);
        tm.calrep = $("selptyN").selectedIndex + 1;
      }
      if ($("ptyS").checked) {
        tm.wd = Math.pow(2, $("ptyDays").selectedIndex);
        tm.period = $("ptyCount").selectedIndex + 1;
        tm.calrep = $("ptyMonth").selectedIndex + 1; 
      }
    }
    var tmp = $("tmBegin").value;
    var iPos = tmp.indexOf(',');
    if (iPos > -1)
      tmp = tmp.substr(iPos + 2);
    var arTmp = tmp.split('.');
    tm.begin = arTmp[2] + "-" + arTmp[1] + "-" + arTmp[0];
    if ($("tmEndN").checked) {
      tm.calcount = parseInt($("tmEndNTxt").value,10);
    }
    if ($("tmEnd").checked) {
      var tmp = $("tmEndTxt").value;
      var iPos = tmp.indexOf(',');
      if (iPos > -1)
        tmp = tmp.substr(iPos + 2);
      var arTmp = tmp.split('.');
      tm.end = arTmp[2] + "-" + arTmp[1] + "-" + arTmp[0];
    }
    conInfo( "Time: End: "+tm.end );
    saveTimeVals(<% Write(system.GetVar("tmId")); %>, tm);
    PopupClose();
  };
  
  calcRange = function(id) {
    return;
    
    var secStart = 0;
    var secEnd = 0;
    var tmp = $("rangestart").value;
    if (tmp != "??:??") {
      var arStart = tmp.split(':');
      secStart = (parseInt(arStart[0],10) * 60 * 60) + (parseInt(arStart[1],10) * 60);
    }
                   
    var tmp = $("rangeend").value;
    if (tmp != "??:??") {
      var arEnd = tmp.split(':');
      secEnd = (parseInt(arEnd[0],10) * 60 * 60) + (parseInt(arEnd[1],10) * 60);
    }
  
    if (id == "txtDuration") {
      if (secStart != 0) {
        var txVal = 0;
        if ($("typeDuration").selectedIndex == 0)
          txVal = parseInt( $("txtDuration").value,10 ) * 60 * 60;
        else
          txVal = parseInt($("txtDuration").value,10) * 60;
        var secTotal = secStart + txVal;
        // $("rangeend").value = (secTotal / 60) +":"+ (secTotal % 60) ;
        return;
      }
      if (secEnd != 0) {
       return;
      }
    }
    if (id == "rangestart") {
      if (secEnd != 0) {
       return;
      }
      if ($("txtDuration").value != "") {
      }
    }   
    if (id == "rangeend") {
       if (secStart != 0) {
         return;
       }
       if ($("txtDuration").value != "") {
       }
    }
  };
  
  setCurrentDate = function(id) {
    if ($(id)) { $(id).value = getCurrentDate(); }
  };
  
  getCurrentDate = function()
  {
    var d = new Date(); 
    var day = d.getDate();
    if (day < 10) { day = "0" + day; }
    var month = d.getMonth() + 1;
    if (month < 10) { month = "0" + month; }
    /*
    if (NAV_IE) { return  day + "." + month + "." + (d.getYear()); }
    else        { return  day + "." + month + "." + (d.getYear() + 1900); }
    */
    return  day + "." + month + "." + (d.getFullYear());
  };
  
  setYesterday = function(id)
  {
    var d = new Date();
    var time = d.getTime();
    time -= 86400*1000;
    d.setTime( time );
    var day = d.getDate();
    var month = d.getMonth() + 1;
    if(day < 10) day = "0" + day;
    if(month < 10) month = "0" + month;
    /*
    if (NAV_IE)
      $(id).value = day + "." + month + "." + (d.getYear());
    else
      $(id).value = day + "." + month + "." + (d.getYear() + 1900);
    */
    $(id).value = day + "." + month + "." + (d.getFullYear());
  };
  
  $("ptDaily").checked = true;
  onChangePattern('ptDaily');
  setYesterday('tmBegin'); 
  $("tsRange").checked = true; 
  
  saveTimeVals = function(id, tmJson)
  {
    //if( isNaN( tmJson.time ) ) tmJson.time = 1;
    if( isNaN( tmJson.caldur ) ) tmJson.caldur = 1;
    //if( isNaN( tmJson.caltime ) ) tmJson.caltime = 1;
    if( isNaN( tmJson.wd ) ) tmJson.wd = 1;
    if( isNaN( tmJson.period ) ) tmJson.period = 1;
    if( isNaN( tmJson.calrep ) ) tmJson.calrep = 1;
    //if( isNaN( tmJson.begin ) ) tmJson.begin = 1;
    if( isNaN( tmJson.calcount ) ) tmJson.calcount = 1;
    //if( isNaN( tmJson.end ) ) tmJson.end = 1;
    //if( isNaN( tmJson.sot ) ) tmJson.sot = 1;
  
    conInfo( "tmJson.time: "     + tmJson.time + "|" + 
             "tmJson.caldur: "   + tmJson.caldur + "|" + 
             "tmJson.caltime: "  + tmJson.caltime + "|" + 
             "tmJson.wd: "       + tmJson.wd + "|" + 
             "tmJson.period : "  + tmJson.period + "|" +  
             "tmJson.calrep: "   + tmJson.calrep + "|" +  
             "tmJson.begin: "    + tmJson.begin  + "|" +  
             "tmJson.calcount: " + tmJson.calcount + "|" +  
             "tmJson.end: "     +  tmJson.end + "|" + 
             "tmJson.sot: "     +  tmJson.sot
            );
    var url = "/esp/system.htm?sid=" + SessionId;   
    var pb = "string action = 'saveTimeModule';"; 
    pb += "integer tmid = "+id+";";
    pb += "integer tmType = " + tmJson.type + ";";
    pb += "string  tmTime = '" + tmJson.time + "';";
    pb += "integer tmCaldur = " + tmJson.caldur + ";";
    pb += "string  tmCaltime = '" + tmJson.caltime  + "';";
    pb += "integer tmWd = " + tmJson.wd + ";";
    pb += "integer tmPeriod = " + tmJson.period + ";";
    pb += "integer tmCalrep = " + tmJson.calrep + ";";
    pb += "string  tmBegin = '" + tmJson.begin  + "';";
    pb += "integer tmCalcount = " + tmJson.calcount + ";";
    pb += "string  tmEnd = '" + tmJson.end + "';";
    pb += "integer tmSot = " + tmJson.sot + ";";
    
    var opts =
    {
      postBody: pb,
      evalScripts:true,
      onSuccess: function(result)
      {
        //conInfo(result.responseText);
        //dlgResult = result.responseText;
        //PopupClose();
      }
    };
    new Ajax.Updater("dummy",url,opts);
  };
  
  closeDatePicker = function() {
    var pickerDiv = document.getElementById("datepicker");
    if (pickerDiv) {
      pickerDiv.style.visibility = "hidden";
      pickerDiv.style.display = "none";
    }
    var pickerDivIFrame = document.getElementById("datepickeriframe");
    if (pickerDivIFrame) {
      pickerDivIFrame.style.visibility = "hidden";
      pickerDivIFrame.style.display = "none";
    }
  };
  
  calcEndTime = function(domTime, secCount)
  {
    var tmp = domTime;
    var arTmp = tmp.split(' ');
    arTmp = arTmp[1].split(':');
    var iSec1 = parseInt( arTmp[0], 10 ) * 3600;
    var iSec2 = parseInt( arTmp[1], 10 ) * 60;
    var secTotal = (iSec1+iSec2+secCount)%86400;
    var ifHours = Math.floor( secTotal / 3600 );
    var hours = parseInt( ifHours, 10 );
    if( hours < 10 )
    {
      hours = "0" + hours;
    }
    var ifMins = Math.floor( secTotal / 60 );
    var mins = parseInt( ifMins, 10 ) - parseInt( (hours * 60), 10 );
    if( mins < 10 )
    {
      mins = "0" + mins;
    }
    return hours + ":" + mins;
  };
  
  disableRangeControls = function(bDisabled) {
    $("tsRange").disabled = bDisabled;
    $("rangestart").disabled = bDisabled;
    $("rangeend").disabled = bDisabled;
    $("btnRangeStart").disabled = bDisabled;
    $("btnRangeEnd").disabled = bDisabled;
    $("tsDay").disabled = bDisabled;
    $("tsDaytime").disabled = bDisabled;
    $("tsNighttime").disabled = bDisabled;
    $("timebegin").disabled = !bDisabled;
    $("btntimebegin").disabled = !bDisabled;
  };

  disableRangeControls(false);
  <% 
  if (system.IsVar("tmId") && (system.GetVar("tmId") != 0)) {
    object tmObj = dom.GetObject(system.GetVar("tmId"));
    if (tmObj && (tmObj.Type() == OT_CALENDARDP)) {
      if (tmObj.SunOffsetType() == sotNone) {
        if ( (tmObj.CalDuration() == 0) && (tmObj.Time() == 0) ) {
          Write("$('tsDay').checked = true;");
        }
        else {
          if (tmObj.CalDuration() != 0) {
            WriteLine("$('tmRange').checked = true;");
            WriteLine("$('rangestart').value = convertDomTime('"#tmObj.Time()#"');");
            WriteLine("$('rangeend').value = calcEndTime('"#tmObj.Time()#"', "#tmObj.CalDuration()#");");
          }
          else {
            WriteLine("$('tmPoint').checked = true;");
            WriteLine("$('timebegin').value = convertDomTime('"#tmObj.Time()#"');");
            WriteLine("disableRangeControls(true);");
          }
        }
      }
      else {
        if (tmObj.SunOffsetType() == sotAfterSunrise) {
          WriteLine("$('tsDaytime').checked = true;");
        }
        if (tmObj.SunOffsetType() == sotAfterSunset) {
          WriteLine("$('tsNighttime').checked = true;");
        }
      }
    
      string sCalRep = tmObj.CalRepeatTime();  
      integer iPeriod = tmObj.Period();
      integer iRepVal = tmObj.CalRepetitionValue();
      integer iWdays = tmObj.Weekdays();
      integer iType = tmObj.TimerType();
      
      if (iType == ttCalOnce) {
        WriteLine("$('ptOnce').checked = true;");
        WriteLine("onChangePattern('ptOnce');");
        WriteLine("$('onceDay').value=convertDomDate('"#sCalRep#"');");  
      }
      if (iType == ttPeriodic) {
        WriteLine("$('ptPeriodic').checked = true;");
        WriteLine("onChangePattern('ptPeriodic');");
        WriteLine("var tmp = '"#iPeriod#"';");
        integer iSelIdx = 0;
        string sVal = "";
        sVal = iPeriod;
        if ( (iPeriod / (3600)) > 0) 
        {
          if( (iPeriod % 3600) == 0 )
          {
            sVal = iPeriod / (3600);
            iSelIdx = 0;
          }
          else
          {
            if( (iPeriod % 60) == 0 )
            {
              sVal = iPeriod / (60);
              iSelIdx = 1;
            }
            else
            {
              sVal = iPeriod;
              iSelIdx = 2;
            }
          }
        }
        else 
        {
          if ( (iPeriod / 60) > 0) 
          {
            if( (iPeriod % 60) == 0 )
            {
              sVal = iPeriod / (60);
              iSelIdx = 1;
            }
            else
            {
              sVal = iPeriod;
              iSelIdx = 2;
            }
          }
          else 
          {
            sVal = iPeriod;
            iSelIdx = 2;
          }
        }
        WriteLine("$('ptpVal').value = '"#sVal#"';");
        WriteLine("$('ptpSel').selectedIndex = "#iSelIdx#";");
      }
      if (iType == ttCalDaily) {
        WriteLine("$('ptDaily').checked = true;");
        WriteLine("onChangePattern('ptDaily');");
        if (iRepVal != 0) {
          WriteLine("$('txtptdN').value = '"#iRepVal#"';");
          WriteLine("$('ptdN').checked = true;");
        }
        if (iWdays != 0) {
          if (iWdays == 96) { WriteLine("$('ptdWE').checked = true;"); }
          else { WriteLine("$('ptdNoWE').checked = true;"); }
        }
        if ((iRepVal == 0) && (iWdays == 0)) {
          WriteLine("$('ptdDaily').checked = true;");
        }
      }
      if (iType == ttCalWeekly) {
        WriteLine("$('ptWeekly').checked = true;");
        WriteLine("onChangePattern('ptWeekly');");
        if (iRepVal != 0) {
          WriteLine("$('ptwN').checked = true;");
          WriteLine("$('txtptwN').value = "#iRepVal#";");
        }
        else {
          Write("$('ptwE').checked = true;");
        }
        if ( (iWdays & 1) != 0) { Write("$('ptwMo').checked = true;"); }
        if ( (iWdays & 2) != 0) { Write("$('ptwTu').checked = true;"); }
        if ( (iWdays & 4) != 0) { Write("$('ptwWe').checked = true;"); }
        if ( (iWdays & 8) != 0) { Write("$('ptwTh').checked = true;"); }
        if ( (iWdays & 16) != 0) { Write("$('ptwFr').checked = true;"); }
        if ( (iWdays & 32) != 0) { Write("$('ptwSa').checked = true;"); }
        if ( (iWdays & 64) != 0) { Write("$('ptwSu').checked = true;"); }
      }
      if (iType == ttCalMonthly) {
        WriteLine("$('ptMonthly').checked = true;");
        WriteLine("onChangePattern('ptMonthly');"); 
        if (iWdays == 0) {
          WriteLine("$('ptmN').checked = true;");
          WriteLine("$('ptmN1').value = "#iPeriod#";");
          WriteLine("$('ptmN2').value = "#iRepVal#";");
        }
        else {
          WriteLine("$('ptmS').checked = true;");
          WriteLine("$('ptmCount').selectedIndex = "#iPeriod#"- 1;");
          WriteLine("$('txtptmN').value = "#iRepVal#";");
          integer iSelIdx = 0;
          if (iWdays == 2) { iSelIdx = 1; }
          if (iWdays == 4) { iSelIdx = 2; }
          if (iWdays == 8) { iSelIdx = 3; }
          if (iWdays == 16) { iSelIdx = 4; }
          if (iWdays == 32) { iSelIdx = 5; }
          if (iWdays == 64) { iSelIdx = 6; }
          WriteLine("$('ptmDays').selectedIndex = "#iSelIdx#";");
        }
      }
      if (iType == ttCalYearly) {
        WriteLine("$('ptYearly').checked = true;");
        WriteLine("onChangePattern('ptYearly');\n"); 
        if (iWdays == 0) {
          WriteLine("$('ptyN').checked = true;");
          WriteLine("$('selptyN').selectedIndex = "#iRepVal#"- 1;");
          WriteLine("$('txtptyN').value = '"#iPeriod#"';");
        }
        else {
          WriteLine("$('ptyS').checked = true;");
          WriteLine("$('ptyCount').selectedIndex = "#iPeriod#"-1;\n");
          WriteLine("$('ptyMonth').selectedIndex = "#iRepVal#"-1;\n");
          integer iSelIdx = 0;
          if (iWdays == 2) { iSelIdx = 1; }
          if (iWdays == 4) { iSelIdx = 2; }
          if (iWdays == 8) { iSelIdx = 3; }
          if (iWdays == 16) { iSelIdx = 4; }
          if (iWdays == 32) { iSelIdx = 5; }
          if (iWdays == 64) { iSelIdx = 6; }
          WriteLine("$('ptyDays').selectedIndex = "#iSelIdx#";");
        }
      }
      
      string sBegin = tmObj.Begin();
      string sEnd = tmObj.End();
      integer iCalCount = tmObj.CalRepetitionCount();
      WriteLine("$('tmBegin').value = convertDomDate('"#sBegin#"');");
      if ( (iCalCount == 0) && (tmObj.EndSeconds() == 0) ) 
      {
        WriteLine("$('tmNoEnd').checked = true;");
      }
      else 
      {
        if (iCalCount == 0) 
        {
          WriteLine("$('tmEnd').checked = true;");
          WriteLine("$('tmEndTxt').value =  convertDomDate('"#sEnd#"');");
          WriteLine("conInfo('Time: LoadEnd: "#sEnd#"');");
          WriteLine("conInfo('Time: LoadEnd(converted): '+convertDomDate('"#sEnd#"') );");
        }
        else 
        {
          WriteLine("$('tmEndN').checked = true;");
          WriteLine("$('tmEndNTxt').value = '"#iCalCount#"';");
        }
      }
      
    }
  }
%>
  
</script>


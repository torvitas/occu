<script type='text/javascript'>
  chnsTmp = new Array();
<% 
  object func = dom.GetObject( system.GetVar("id") );
  boolean clearSel = system.GetVar("clearSel");
  Write("bSortChOnly = "#(system.GetSessionVar("sessionLS") != "func")#";");
  string sID;
  string sEnum = "";
  boolean bListAll;
  if( func )
  {
    bListAll = false;
    sEnum = func.EnumEnabledIDs();
    sID = system.GetVar("id");
  }
  else
  {
    bListAll = true;
    object oUser = dom.GetObject( system.GetSessionVar("sessionUserID") );
    object oFuncs = dom.GetObject( ID_FUNCTIONS );
    
    if( oUser && oFuncs && clearSel )
    {      
      oUser.UserTempViewIDs2().RemoveAll();
      foreach( sID, oFuncs.EnumIDs() )
      {
        object oFunc = dom.GetObject( sID );
        if( oFunc )
        {
          string s2;
          foreach(s2,oFunc.EnumIDs())
          {
            oUser.UserTempViewIDs2().Add( s2 );
          }
        }
      }
    }
    sEnum = oUser.UserTempViewIDs2().EnumIDs();
    sID = system.GetVar("id");
  }
  
  if( sEnum.Length() ) 
  {
    integer iCount = 0;   
    string tmp = "";
    foreach(tmp, sEnum)
    {
      string s = "";
      string trId = sID#"tr"#iCount;
      object chn = dom.GetObject(tmp);
      object oDev = dom.GetObject(chn.Device());
      string sIface = "";
      if (chn.IsTypeOf(OT_CHANNEL) && chn.ReadyConfig() && oDev.ReadyConfig() )
      {
        integer devId = chn.Device();
        if (devId != ID_ERROR) {
          object dev = dom.GetObject(devId);
        }
        string category = "";
        if (chn.ChnDirection() == 1) {category = '${lblSender}';}
        if (chn.ChnDirection() == 2) {category = '${lblReceiver}';}

        string sDevLbl = "";
        integer iDevId = chn.Device();
        if (iDevId != ID_ERROR) {
          object dev = dom.GetObject(iDevId);
          sDevLbl = dev.Label();
          integer iface = dev.Interface();
          if (iface != ID_ERROR) {
            sIface = dom.GetObject(iface).Name();
          }
        }     
        string funcTmp = "";
        string funcIDs = "";
        string functions = "";
        foreach(funcTmp, chn.ChnFunction())
        {
          object objTmp = dom.GetObject(funcTmp);
          functions = functions # objTmp.Name() # ";";
          funcIDs = funcIDs # objTmp.ID() # '\t';
        }
        
        string rooms = "";
        string roomTmp = "";
        string roomIDs = "";
        foreach(roomTmp, chn.ChnRoom())
        {
          object objTmp = dom.GetObject(roomTmp);
          roomIDs = roomIDs # objTmp.ID() # '\t';
          rooms = rooms # objTmp.Name() # ";";
        }
        
        integer iProgCount = 0;
        if (chn.ChnDPUsageCount() != ID_ERROR) {
          iProgCount = chn.ChnDPUsageCount();
        }

        object dev = dom.GetObject(chn.Device());

        Write("tmp = new Object();");
        Write("tmp['id'] = "#chn.ID()#";");
        Write("tmp['trid'] = '"#trId#"';");
        Write("tmp['parentName'] = '"#dev.Name()#"';");
        Write("tmp['name'] = '"#chn.Name()#"';");
        Write("tmp['type'] = '"#chn.Label()#"';");
        Write("tmp['rooms'] = '"#rooms#"';");
        Write("tmp['func'] = '"#functions#"';");
        Write("tmp['sn'] = '"#chn.Address()#"';");
        Write("tmp['iface'] = '"#category#"';");
        Write("tmp['chnnr'] = '"#chn.ChnNumber()#"';");
        Write("tmp['trans'] = ("#chn.ChnAESActive()#" ? translateKey('lblSecured') : translateKey('lblStandard') );");
        integer iProgCount = 0;
        if( chn.ChnDPUsageCount() != ID_ERROR )
        {
          iProgCount = chn.ChnDPUsageCount();
        }
        Write("tmp['progC'] = "#iProgCount#";");
        Write("tmp['devC'] = "#(chn.ChnLinkCount())#";");
        Write("tmp['desc'] = DEV_getDescription('"#sDevLbl#"');");
        Write("tmp['devlbl'] = '"#sDevLbl#"';");
        
        Write("tmp['unerasable'] = '"#chn.Unerasable()#"';");
        
        Write("tmp['gm'] = 0;");
        Write("tmp['deviface'] = '"#sIface#"';");
        
        Write("tmp['fltOpts'] = new Object();");
        Write("tmp['fltOpts']['iCat'] = '"#chn.ChnDirection()#"';");
        Write("tmp['fltOpts']['iTrans'] = "#chn.ChnAESActive()#";");
        Write("tmp['fltOpts']['rooms'] = '"#roomIDs#"';");
        Write("tmp['fltOpts']['funcs'] = '"#funcIDs#"';");
        Write("tmp['enumprgfilter'] = '"#chn.ChnEnumDPUsagePrograms()#"';");
        Write("arFObj['"#system.GetVar("id")#"']['chncount']++;");
        Write("chnsTmp[chnsTmp.length] = tmp;");
        
        Write("if(fltSF.objPassFilter(tmp))");
        Write("  show('"#trId#"');"); 
        iCount = iCount + 1;
      }
    }
    if (iCount == 0)
    {
      Write("hide(img"#sID#");");
    }
    Write("arFObj['"#system.GetVar("id")#"']['chns'] = chnsTmp;");
    Write("arFObj['"#system.GetVar("id")#"']['loaded'] = true;");
  }
%>
var iInsIdx = 0;
if (bSortChOnly) {
  while ($("tblFunctionList").rows.length > 3) {
    $("tblFunctionList").deleteRow($("tblFunctionList").rows.length - 1);
  }
  iInsIdx = 2;
}
else {
  iInsIdx = arTblPos[<% Write(system.GetVar("fTblPos")); %>];
}

var idFunc = <% Write(system.GetVar("id"));%>
var iElemsAdded = 0;
var iElemsShown = 0;
var arPicDivs = new Array();

//for(var i = 0; i<$("tblsvr").rows.length;i++ ) $("tblsvr").deleteRow(0);

for (var i = 0; i < chnsTmp.length; i++)
{
  if (!isDeleted(idFunc, chnsTmp[i]['id'])) {
    var iTblInsIdx = iInsIdx + 1;
    if (iTblInsIdx > $("tblFunctionList").rows.length) {
      iTblInsIdx = $("tblFunctionList").rows.length;
    }
    var tr = $("tblFunctionList").insertRow(iInsIdx + 1);
    iInsIdx++;
    iElemsAdded++;
    tr.id = chnsTmp[i]['trid'];
    if (!fltSF.objPassFilter(chnsTmp[i]))
      tr.style.display = "none";
    else
      iElemsShown++;
    var td = Builder.node('td'); tr.appendChild(td);
    if (bSortChOnly) {
      td = Builder.node('td', {className: "GrayBkg DeviceListCell"}, semCut(chnsTmp[i]['func'])); tr.appendChild(td);
    }
    else {
      td = Builder.node('td'); tr.appendChild(td);
    }
    td = Builder.node('td', {className: "GrayBkg DeviceListCell"}, chnsTmp[i]['name']); tr.appendChild(td);
    td = Builder.node('td', {className: "GrayBkg DeviceListCell"}, chnsTmp[i]['type']); tr.appendChild(td);
    var sPicDivId = 'picDiv' + idFunc + chnsTmp[i]['id'];
    td = Builder.node('td', {className: 'WhiteBkgPic DeviceListCell'}, [
        Builder.node('div', {id: sPicDivId, className: "CLASS04700",
          onmouseover:"picDivShow(jg_250, '"+chnsTmp[i]['devlbl']+"', 250, '" + chnsTmp[i]['chnnr']+"', this);", onmouseout:"picDivHide(jg_250);"})
      ]);
    Element.addClassName(td, "CLASS04701");
    tr.appendChild(td);

    td = Builder.node('td', {className: "GrayBkg DeviceListCell"}, semCut(chnsTmp[i]['desc'] + ";" + chnsTmp[i]['parentName'])); tr.appendChild(td);
    td = Builder.node('td', {className: "GrayBkg DeviceListCell"}, chnsTmp[i]['sn']); tr.appendChild(td);
    td = Builder.node('td', {className: "GrayBkg DeviceListCell"}, chnsTmp[i]['iface']); tr.appendChild(td);
    td = Builder.node('td', {className: "GrayBkg DeviceListCell"}, chnsTmp[i]['trans']); tr.appendChild(td);
    td = Builder.node('td', {className: "GrayBkg DeviceListCell"}, semCut(chnsTmp[i]['rooms'])); tr.appendChild(td);
    
    var sDelFunc = "";
    if( <% Write(bListAll ); %>)
    {
      sDelFunc = 'removeChannelFromAllSubsections("' + idFunc + '", "' + chnsTmp[i]['id'] + '");';
    }
    else
    {
      sDelFunc = 'removeChannelFromSubsection("' + idFunc + '", "' + chnsTmp[i]['id'] + '");';
    }
    var sName = translateKey("btnRemove"); //"Löschen";
    var sClassName = "StdButton";
    if( chnsTmp[i]['unerasable'] == "true" )
    {
      sClassName += "Inactive";
      sDelFunc = "";
    }
    td = Builder.node('td', {className: "GrayBkg DeviceListCell"}, [ Builder.node('div', {className: sClassName, onclick: sDelFunc}, sName) ]);
    tr.appendChild(td);
    td = Builder.node('td', {className: "WhiteBkg DeviceListCell"});
    writeDevProg(td, chnsTmp[i]);
    tr.appendChild(td);
    
    arPicDivs[arPicDivs.length] = sPicDivId;
    var jg_0 = new jsGraphics(sPicDivId);
    InitGD(jg_0, 50);
    Draw(jg_0, chnsTmp[i]['devlbl'], 50, chnsTmp[i]['chnnr']);
  }
}

// Ids der PicDivs hinzufügen (fürs zuklappen)
arFObj['<% Write(system.GetVar("id")); %>']['picdivs'] = arPicDivs;
// Einfüge-Positionen updaten
for (var i = <% Write(system.GetVar("fTblPos")); %>  ; i < arTblPos.length; i++) {
  arTblPos[i] = arTblPos[i] + iElemsAdded;
}

hideRow = function(fId, chnId)
{
  for (var i = 0; i < arFObj[fId]['chns'].length; i++)
  {
    if (arFObj[fId]['chns'][i]['id'] == chnId) {
      arFObj[fId]['chns'][i]['deleted'] = true;
      hide('picDiv' + fId + chnId);
      hide(arFObj[fId]['chns'][i]['trid']);
    }
  }
  arDelChns[arDelChns.length] = "" + fId + chnId;
}

// reset all SortSelected columns
var ths = document.getElementById("tblFunctionList").getElementsByTagName("th");
for(th in ths)
{ 
  var sTmp = /\d/;
  if(sTmp.test(ths[th].innerHTML))
  {
    ths[th].innerHTML = ths[th].innerHTML.replace(/SortSelected/g,"Sort");
  }
}

// set SortSelected class to clicked column
var selTbHeader = document.getElementById('<%Write(system.GetSessionVar("sessionLS")); %>');
if(selTbHeader)
{
  selTbHeader.className = selTbHeader.className.replace(/Sort/, "SortSelected");
}

if ( (iElemsShown == 0)  && (chnsTmp.length > 0))
  hide("img" + idFunc);
  
bEIP = false;
Cursor.set(Cursor.NORMAL);
translatePage("#tblsvr");
</script>
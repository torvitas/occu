<script type="text/javascript">
  Array.prototype.propertySort = function(index) {
    var objectToString = Object.prototype.toString,
        arrayToString = Array.prototype.toString;

    if(typeof index != "function") {
      var property = index;
      index = function(){return this[property]};
    }
    Object.prototype.toString = index;
    Array.prototype.toString = index;
    
    this.sort();
    
    Object.prototype.toString = objectToString;
    Array.prototype.toString = arrayToString;
  }
 
  chnsTmp = new Array(); // kanäle ohne gruppe
  
<% 
object obj = dom.GetObject(ID_CHANNELS);
if ( obj ) 
{
  string tmp = "";
  foreach( tmp, obj.EnumEnabledIDs(system.GetVar("index"), 5) ) 
  {
    object channel = dom.GetObject(tmp);
    if (channel && (channel.Internal() == false) && (channel.ReadyConfig())) 
    {
      Write("tmp = new Object();");
      Write("tmp['id'] = '"#channel.ID()#"';");
      Write("tmp['name'] = '"#channel.Name()#"';");
      Write("tmp['type'] = '"#channel.Label()#"';");
      Write("tmp['desc'] = DEV_getDescription('"#channel.Label()#"');");
      Write("tmp['sn'] = '"#channel.Address()#"';");
      string category = "";
      if (channel.ChnDirection() == 1) {category = 'Sender';}
      if (channel.ChnDirection() == 2) {category = 'Empfänger';}
      Write("tmp['iface'] = '"#category#"';");
      Write("tmp['mode'] = ("#channel.ChnAESActive()#" ? 'Gesichert' : 'Standard');");
      string functions = "";
      string funcTmp = "";
      string funcIDs = "";
      foreach(funcTmp, channel.ChnFunction()) {
        object objTmp = dom.GetObject(funcTmp);
        functions = functions # objTmp.Name() # "\t";
        funcIDs = funcIDs # objTmp.ID() # "\t";
      }
      Write("tmp['func'] = '"#functions#"';");
      string rooms = "";
      string roomTmp = "";
      string roomIDs = "";
      foreach(roomTmp, channel.ChnRoom()) {
        object objTmp = dom.GetObject(roomTmp);
        rooms = rooms # objTmp.Name() # "\t";
        roomIDs = roomIDs # objTmp.ID() # "\t";
      }
      string sDevLbl = "";
      string sDevIface = "";
      object iDevId = channel.Device();
      if (iDevId != ID_ERROR) {
        object dev = dom.GetObject(iDevId);
        sDevLbl = dev.Label();
        integer iface = dev.Interface();
        if (iface != ID_ERROR) {
          sDevIface = dom.GetObject(iface).Name();
        }
      }
      Write("tmp['devlbl'] = '"#sDevLbl#"';");
      Write("tmp['deviface'] = '"#sDevIface#"';");
      Write("tmp['room'] = '"#rooms#"';");
      Write("tmp['chnnr'] = "#channel.ChnNumber()#";");
      Write("tmp['trid'] = 'c"#channel.ID()#"';");
      
      if( channel.ExistComTestDP() )
      {
        Write("tmp['comtestdp'] = true;");
      }
      else
      {
        Write("tmp['comtestdp'] = false;");
      }
      
      string s;
      foreach(s,dom.TestRunningIDs().EnumIDs())
      {
        if( s == channel.ID().ToString() )
        {
          Write("tmp['testrunning'] = true;");
        }
        else
        {
          Write("tmp['testrunning'] = false;");
        }
      }
      
      string sTimestamp = channel.TestCompletedTime();
      Call("/esp/TimeStamp.fn::TimeStampToString()");
      Write("tmp['testtime'] = '"#sTimestamp#"';");
      Write("tmp['gm'] = ("#(channel.ChnGroupPartnerId() != ID_ERROR)#"? 1 : 0;");
      
      Write("tmp['fltOpts'] = new Object();");
      Write("tmp['fltOpts']['funcs'] = '"#funcIDs#"';");
      Write("tmp['fltOpts']['rooms'] = '"#roomIDs#"';");
      Write("tmp['fltOpts']['iCat'] = '"#channel.ChnDirection()#"';");
      Write("tmp['fltOpts']['iTrans'] = "#channel.ChnAESActive()#";");
      Write("tmp['devC'] = "#(channel.ChnLinkCount())#";");
      integer iProgCount = 0;
      if( channel.ChnDPUsageCount() != ID_ERROR )
      {
        iProgCount = channel.ChnDPUsageCount();
      }
      Write("tmp['progC'] = "#iProgCount#";");
      
      Write("tmp['enumprgfilter'] = '"#channel.ChnEnumDPUsagePrograms()#"';");
      
      Write("arChns[arChns.length] = tmp;");
      Write("chnsTmp[chnsTmp.length] = tmp;");   
    } 
  }   
}
%>
    // Kanäle
  for (var i = 0; i < chnsTmp.length; i++) {
    tr = Builder.node('tr', {id: chnsTmp[i]['trid']});
    td = Builder.node('td', {className: 'ChannelTblPopup'}, chnsTmp[i]['name']); tr.appendChild(td);
    td = Builder.node('td', {className: 'ChannelTblPopup'}, chnsTmp[i]['type']); tr.appendChild(td);
    td = Builder.node('td', {className: 'WhiteBkgChnChooserPic CLASS00400'}, [
      Builder.node('div', {id: 'picDiv' + chnsTmp[i]['id'],
         onmouseover:"picDivShow(jg_250, '"+chnsTmp[i]['devlbl']+"', 250, "+chnsTmp[i]['chnnr']+", this);", onmouseout:"picDivHide(jg_250);"})
      ]); 
    Element.addClassName(td, "CLASS05105");
    tr.appendChild(td);
    td = Builder.node('td', {className: 'ChannelTblPopup'}, chnsTmp[i]['desc']); tr.appendChild(td);
    td = Builder.node('td', {className: 'ChannelTblPopup'}, chnsTmp[i]['sn']); tr.appendChild(td);
    td = Builder.node('td', {className: 'ChannelTblPopup'}, chnsTmp[i]['iface']); tr.appendChild(td);
    td = Builder.node('td', {className: 'ChannelTblPopup'}, chnsTmp[i]['mode']); tr.appendChild(td);
    td = Builder.node('td', {className: 'ChannelTblPopup'}, insertBR(chnsTmp[i]['func'])); tr.appendChild(td);
    td = Builder.node('td', {className: 'ChannelTblPopup'}, insertBR(chnsTmp[i]['room'])); tr.appendChild(td);
    td = Builder.node('td', {className: 'WhiteBkgChannelPopup'});
    
    // Test-Button-Control
    writeTestField(td, chnsTmp[i]['id'].toString(),chnsTmp[i]['testtime'],chnsTmp[i]['comtestdp'],chnsTmp[i]['testrunning']);
    
    tr.appendChild(td);
    
    td = Builder.node('td', {className: 'ChannelTblPopup'}, [
      Builder.node('input', {id:'chk'+ chnsTmp[i]['id'], type: 'checkbox'})
     ]); tr.appendChild(td);
    
    td = Builder.node('td', {className: 'ChannelTblPopup'}); 
    $("UserName").innerHTML += chnsTmp[i]['devC'];
    writeDevProg(td, chnsTmp[i]);
    tr.appendChild(td); 
    if ($("chnListBody"))  
      $("chnListBody").appendChild(tr);
    
    var jg_0 = new jsGraphics('picDiv' + chnsTmp[i]['id']);
    InitGD(jg_0, 50);
    Draw(jg_0, chnsTmp[i]['devlbl'], 50, chnsTmp[i]['chnnr']);
  }
 
</script>
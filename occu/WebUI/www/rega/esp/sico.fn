function ::ReloadSiCo()
{
  object oSC = dom.GetObject( system.GetVar("id") );
  if( oSC )
  {
    object oC = dom.GetObject( oSC.ConditionParent() );
    if( oC )
    {
      object oR = dom.GetObject( oC.CndParent() );
      #inc("/esp/sico.inc");
    }
  }
  return;
}

function ::SetOperatorType()
{
  string sCI = "SetOperatorType[SICO]: ";
  if( system.IsVar("id") && system.IsVar("cid") )
  {
    sCI = sCI#"GET Condition + SingleCondition: ";
    object oTmp = dom.GetObject( system.GetVar("id") );
    object oCTmp = dom.GetObject( system.GetVar("cid") );
    if( oTmp && oCTmp )
    {
      sCI = sCI#"OK, SET SiCo-OperatorType = ["#system.GetVar("value")#"]: ";
      if( oTmp.OperatorType( system.GetVar("value") ) )
      {
        sCI = sCI#"OK";
      }
      else
      {
        sCI = sCI#"FAILED";
      }
      !integer iInversion = 1;
      !if( system.GetVar("value") == "1" )
      !{
      !  iInversion = 2;
      !}
      !sCI = sCI#", SET Condition-OperatorType = ["#iInversion#"]: ";
      !if( oCTmp.CndOperatorType( iInversion ) )
      !{
      !  sCI = sCI#"OK";
      !}
      !else
      !{
      !  sCI = sCI#"FAILED";
      !}
    }
    else
    {
      sCI = sCI#"FAILED";
    }
  }
  else
  {
    sCI = sCI#"FAILED (Parameter missing)";
  }
  sCI = sCI#".";
  Write( sCI );
  return;
}

function ::SetValueRange()
{
  if( system.IsVar("id") && system.IsVar("rv1") && system.IsVar("rv2") && system.IsVar("ct") )
  {
    object oTmp = dom.GetObject( system.GetVar("id") );
    if( oTmp )
    {
      oTmp.RightVal1( system.GetVar("rv1") );
      oTmp.RightVal2( system.GetVar("rv2") );
      oTmp.ConditionType( system.GetVar("ct") );
      Write( oTmp.RightVal1() );
      Write( '|' );
      Write( oTmp.RightVal2() );
      Write( '|' );
      Write( oTmp.ConditionType() );
    }
  }
}

function ::SetLeftValType()
{
  if( system.IsVar("scid") && system.IsVar("lvt") )
  {
    object oTmp = dom.GetObject( system.GetVar("scid") );
    if( oTmp )
    {
      Write( oTmp.LeftValType( system.GetVar("lvt") ) );
      Write( '|' );
      Write( oTmp.LeftVal( ID_ERROR ) );
    }
  }
}

function ::SetConditionType2()
{
  string sCInfo = "SetConditionType2: ";
  if( system.IsVar("scid") && system.IsVar("ct") )
  {
    object oTmp = dom.GetObject( system.GetVar("scid") );
    if( oTmp )
    {
      string sCT = system.GetVar("ct");
      sCInfo = sCInfo#sCT;
      integer iNewCT = 0;
      if( sCT == "DP_VALUE_CHECK_UPDATE" )
      {
        iNewCT = 13;
      }
      if( sCT == "DP_VALUE_CHECK_ONLY" )
      {
        iNewCT = 15;
      }
      if( sCT == "DP_VALUE_CHECK_CHANGE" )
      {
        iNewCT = 4;
      }
      if( iNewCT == 0 )
      {
        sCInfo = sCInfo#" (Failed to determine new value.)";
      }
      else
      {
        if( oTmp.ConditionType2( iNewCT ) )
        {
          if( iNewCT == oTmp.ConditionType2() )
          {
            sCInfo = sCInfo#" OK.";
          }
          else
          {
            sCInfo = sCInfo#" (Failed to set new value -> values are not equal.)";
          }
        }
        else
        {
          sCInfo = sCInfo#" (Failed to set new value.)";
        }
      }
    }
    else
    {
      sCInfo = sCInfo#" (Failed to get object ["#system.GetVar("scid")#"].)";
    }
  }
  else
  {
    sCInfo = sCInfo#"Parameter missing!";
  }
  Write( sCInfo );
}

function ::GetDefaultDP()
{
  
  string s;
  foreach( s, oChTmp.DPs().EnumEnabledVisibleIDs() )
  {
    object oDP = dom.GetObject( s );
    if( oDP )
    {
      if( (oDP.Operations() & (OPERATION_READ|OPERATION_EVENT)) != 0 )
      {
        if( iFirstDP == ID_ERROR ) 
        {
          iFirstDP = oDP.ID();
          return;
        }
      }
    }
  }
  return;
}

function ::SetChannel()
{
  if( system.IsVar("scid") && system.IsVar("chid") )
  {
    object oTmp = dom.GetObject( system.GetVar("scid") );
    if( oTmp )
    {
      object oChTmp = dom.GetObject( system.GetVar("chid") );
      if( oChTmp )
      {
        Write( oTmp.LeftValType( ivtObjectId ) );
        integer iFirstDP = ID_ERROR;
        Call("/esp/sico.fn::GetDefaultDP()");
        if( iFirstDP != ID_ERROR )
        {
          Write( oTmp.LeftVal( iFirstDP ) );
        }
        Write( oTmp.ConditionChannel( oChTmp.ID() ) );
        Write( oTmp.ConditionType( 1 ) );
      }
      else
      {
        Write( "No Channel" );
      }
    }
  }
  Write( " End of SetChannel" );
}

function ::SetTimeModule()
{
  if( system.IsVar("scid") && system.IsVar("tmid") )
  {
    object oTmp = dom.GetObject( system.GetVar("scid") );
    if( oTmp )
    {
      oTmp.RightVal1ValType( ivtObjectId );
      oTmp.RightVal1( system.GetVar("tmid") );
    }
  }
}

function ::SetLeftValue()
{
  if( system.IsVar("scid") && system.IsVar("lv") )
  {
    object oTmp = dom.GetObject( system.GetVar("scid") );
    if( oTmp )
    {
      object otDP = dom.GetObject( system.GetVar("lv") );
      if( otDP )
      {
        !Write( oTmp.LeftValType( otDP.ValueType() ) );
      }
      Write( oTmp.LeftVal( system.GetVar("lv") ) );
    }
  }
}

function ::SetRightValue()
{
  if( system.IsVar("scid") && system.IsVar("rv") )
  {
    object oTmp = dom.GetObject( system.GetVar("scid") );
    if( oTmp )
    {
      string sRV = system.GetVar("rv");
      integer iposSV = sRV.Find("[SV]");
      if( iposSV == -1 )
      {
        Write( "SET RV1 (NO SPECIAL VALUE) | " );
        Write( oTmp.RightVal1( sRV ) );
      }
      else
      {
        Write( "SET RV1 (SPECIAL VALUE): " );
        Write( oTmp.RightVal1ValType( ivtSpecialValue ) );
        Write( "|" );
        sRV = sRV.Substr(iposSV+4);
        Write( oTmp.RightVal1( sRV ) );
        Write( "|"#sRV );
      }
    }
  }
}

function ::SetLeftAndRightValue()
{
  if( system.IsVar("scid") && system.IsVar("rv") && system.IsVar("lv") )
  {
    object oTmp = dom.GetObject( system.GetVar("scid") );
    if( oTmp )
    {
      string sLV = system.GetVar("lv");
      Write( oTmp.LeftVal( sLV ) );
      string sRV = system.GetVar("rv");
      integer iposSV = sRV.Find("[SV]");
      if( iposSV == -1 )
      {
        object oLV = dom.GetObject( sLV );
        if( oLV )
        {
          integer iVT = oLV.ValueType();
          integer iST = oLV.ValueSubType();
          oTmp.ConditionType( 1 );
        }
        Write( "SET RV1 (NO SPECIAL VALUE) | " );
        Write( oTmp.RightVal1( sRV ) );
      }
      else
      {
        Write( "SET RV1 (SPECIAL VALUE): " );
        Write( oTmp.RightVal1ValType( ivtSpecialValue ) );
        Write( "|" );
        sRV = sRV.Substr(iposSV+4);
        Write( oTmp.RightVal1( sRV ) );
        Write( "|"#sRV );
      }
    }
  }
}

function ::SetTimeModule()
{
  if( system.IsVar("scid") && system.IsVar("tmid") )
  {
    object oTmp = dom.GetObject( system.GetVar("scid") );
    if( oTmp )
    {
      oTmp.RightVal1Type( ivtObjectId );
      Write( oTmp.RightVal1( system.GetVar("tmid") ) );
    }
  }
}

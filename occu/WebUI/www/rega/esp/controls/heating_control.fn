function ::CreateHeatingControl() {
  integer iLvlDpId = 0;
  real rState = 0;
  real rMin = 4.5;
  real rMax = 30.5;
  string sUnit = "&deg;<i>C</i>";
  integer iReadOnlyState = 0;

  object oControlMode = cObj.DPByControl("HEATING_CONTROL.CONTROL_MODE");
  object oLevel = cObj.DPByControl("HEATING_CONTROL.SETPOINT");
  object oTemperature = cObj.DPByControl("HEATING_CONTROL.TEMPERATURE");
  object oModeAuto = cObj.DPByControl("HEATING_CONTROL.AUTO");
  object oModeManu = cObj.DPByControl("HEATING_CONTROL.MANU");
  object oModeBoost = cObj.DPByControl("HEATING_CONTROL.BOOST");
  object oModeComfort = cObj.DPByControl("HEATING_CONTROL.COMFORT");
  object oModeLowering = cObj.DPByControl("HEATING_CONTROL.LOWERING");

  object oPartyTemp = cObj.DPByControl("HEATING_CONTROL.PARTY_TEMP");
  object oPartyStartTime = cObj.DPByControl("HEATING_CONTROL.PARTY_START_TIME");
  object oPartyStartDay = cObj.DPByControl("HEATING_CONTROL.PARTY_START_DAY");
  object oPartyStartMonth = cObj.DPByControl("HEATING_CONTROL.PARTY_START_MONTH");
  object oPartyStartYear = cObj.DPByControl("HEATING_CONTROL.PARTY_START_YEAR");
  object oPartyStopTime = cObj.DPByControl("HEATING_CONTROL.PARTY_STOP_TIME");
  object oPartyStopDay = cObj.DPByControl("HEATING_CONTROL.PARTY_STOP_DAY");
  object oPartyStopMonth = cObj.DPByControl("HEATING_CONTROL.PARTY_STOP_MONTH");
  object oPartyStopYear = cObj.DPByControl("HEATING_CONTROL.PARTY_STOP_YEAR");


  ! WriteLine(' <script>conInfo("oControlMode: '#oControlMode.Value()#'");</script> ');

  if ( oTemperature )
  {
    ! WriteLine(' <script>conInfo("oTemperature: '#oTemperature.Value()#'");</script> ');
    actTemp = oTemperature.Value();
  }

  if( oLevel )
  {
    iLvlDpId = oLevel.ID();
    rState = oLevel.Value();
    sUnit = oLevel.ValueUnit();
    if (sUnit == 'degree')
    {
      sUnit = "&deg;<i>C</i>";
    }
    ! rMin = oLevel.MetaData("MIN").ToFloat();
    ! rMax = oLevel.MetaData("MAX").ToFloat();
  }
  string sReadOnly = "";

  integer iInvalidState = 0;

  if( ( system.GetVar("iStatusOnly" ) == 1) || iInvalidState )
  {
    sReadOnly = "disabled";
    iReadOnlyState = 1;
  }

  WriteLine("<tr>");
    WriteLine("<td>");
      WriteLine("<table id='"#chnId#"tblShowTemp' class='ControlBtnInfo hidden' style='width:200px'>");
        WriteLine("<tr>");
          WriteLine("<td>${stringTableWeatherTemperature}</td>");
          WriteLine("<td><span id='"#chnId#"actTemp'></span><span><b>"#sUnit#"</b></span></td>");
        WriteLine("</tr>");
      WriteLine("</table>");
      !WriteLine("<div class='ControlBtnInfo _CLASS02550' style='line-height:15px; min-width:200px' id='"#chnId#"actualTemp' ><span>${stringTableWeatherTemperature}</span><span id='actTemp'"#sUnit#"></span></div>");
    WriteLine("</td>");
  WriteLine("</tr>");

  WriteLine("<tr>");
    WriteLine("<td colspan='1' id='slidCtrl"#cObj.ID()#"' class='CLASS02529'></td>");
    WriteLine("<td class='CLASS02529'>");
    WriteLine("  <div id='button"#chnId#"' class='PercBtn' >");
    WriteLine("  <table width='100%' height='100%' class='CLASS02530'>");
    WriteLine("    <tr class='CLASS02531'>");
    WriteLine("      <td colspan='2' class='CLASS02546'><input id='"#chnId#"Deg' type='text' value='"#rState.ToString(2)#"' size='4' class='CLASS02542' style='text-align:center' "#sReadOnly#" /><span id='"#chnId#"unitDegree'><b>"#sUnit#"</b></span></td></tr>");
    WriteLine("      <input id='"#chnId#"Perc' type='hidden' value='"#rState.ToString(2)#"' />");
    WriteLine("      <td align='center' class='CLASS02548'>");
    WriteLine("      <table cellspacing='0' cellpadding='0'><tr><td><img id='"#chnId#"Up' height='12px' width='40px' src='/ise/img/up.png' class='CLASS02543' /></td></tr><tr><td><img id='"#chnId#"Down' height='12px' width='40px' src='/ise/img/down.png' class='CLASS02543' /></td></tr></table>");
    WriteLine("      </td><td align='center' class='CLASS02548'><img src='/ise/img/enter.png' width='40px' height='25px' class='CLASS02543' /></td>");
    WriteLine("    </tr>");
    WriteLine("  </table>");
    WriteLine("  </div>");
    WriteLine("</td>");
  WriteLine("</tr>");

  WriteLine("<tr>");
    WriteLine("<td>");
      WriteLine("<table id='tblChangeMode"#chnId#"' width='100%' height='100%' class='hidden'>");
        WriteLine("<tr>");
          WriteLine("<td>");
            ! AUTO
            WriteLine("<div class='ControlBtnOff CLASS02551' id='"#chnId#"mode0' >${stringTableClimateControlRTTransceiverAutoModeBR}</div>");
          WriteLine("</td>");
          WriteLine("<td>");
            ! BOOST
            WriteLine("<div class='ControlBtnOff CLASS02551' id='"#chnId#"mode3' >${stringTableClimateControlRTTransceiverBoostModeBR}</div>");
          WriteLine("</td>");
        WriteLine("</tr>");
        WriteLine("<tr>");
          WriteLine("<td>");
            ! MANU
            WriteLine("<div class='ControlBtnOff CLASS02551' id='"#chnId#"mode1' >${stringTableClimateControlRTTransceiverManuModeBR}</div>");
          WriteLine("</td>");
          WriteLine("<td>");
            ! PARTY
            WriteLine("<div class='ControlBtnOff CLASS02551 hidden' id='"#chnId#"mode2' >${stringTableClimateControlRTTransceiverPartyModeBR}</div>");
          WriteLine("</td>");
        WriteLine("</tr>");
      WriteLine("</table>");
    WriteLine("</td>");

    WriteLine("<td>");
      WriteLine("<table>");
        WriteLine("<tr>");
          WriteLine("<td>");
            WriteLine("<div class='ControlBtnOff CLASS02551 hidden' style='line-height:35px' id='"#chnId#"modeOFF' name='panelOnOff'>${actionStatusControlLblOff}</div>");
          WriteLine("</td>");
          WriteLine("<td>");
            WriteLine("<div class='ControlBtnOff CLASS02551 hidden' id='"#chnId#"tempECO' name='panelComfortEco'>${stringTableClimateControlRTTransceiverLoweringModeBR}</div>");
          WriteLine("</td>");
        WriteLine("</tr>");
        WriteLine("<tr>");
          WriteLine("<td>");
            WriteLine("<div class='ControlBtnOff CLASS02551 hidden' style='line-height:35px' id='"#chnId#"modeON' name='panelOnOff'>${actionStatusControlLblOn}</div>");
          WriteLine("</td>");
          WriteLine("<td>");
            WriteLine("<div class='ControlBtnOff CLASS02551 hidden' id='"#chnId#"tempCOMFORT' name='panelComfortEco'>${stringTableClimateControlRTTransceiverComfortModeBR}</div>");
          WriteLine("</td>");
        WriteLine("</tr>");
      WriteLine("</table>");
    WriteLine("</td>");
  WriteLine("</tr>");

  WriteLine("<tr>");
    WriteLine("<td colspan='2'>");
      WriteLine("<table id='"#chnId#"showPartyEnd' class='ControlBtnInfo hidden' style='background-color:#3678C9; min-width:200px; width:100%'>");
        WriteLine("<tr>");
          WriteLine("<td><div>${partyModeEndTime}</div><div id='"#chnId#"partyEndTime'></div></td>");
        WriteLine("</tr>");
      WriteLine("</table>");
    WriteLine("</td>");
  WriteLine("</tr>");

  string sCtrlId = "slidCtrl"#chnId;
  WriteLine("<script type='text/javascript'>");
    WriteLine("var opts = {};");
    WriteLine("opts.idLevel = "#oLevel.ID()#";");
    WriteLine("opts.stLevel = "#oLevel.Value()#";");
    WriteLine("opts.idControlMode = "#oControlMode.ID()#";");
    WriteLine("opts.stControlMode = "#oControlMode.Value()#";");
    if (oModeAuto) {WriteLine("opts.idAuto = "#oModeAuto.ID()#";");}
    if (oModeManu) {WriteLine("opts.idManu = "#oModeManu.ID()#";");}
    if (oModeBoost) {WriteLine("opts.idBoost = "#oModeBoost.ID()#";");}
    if (oModeComfort) {WriteLine("opts.idComfort = "#oModeComfort.ID()#";");}
    if (oModeLowering) {WriteLine("opts.idLowering = "#oModeLowering.ID()#";");}
    if (oPartyTemp) {WriteLine("opts.idPartyTemp = "#oPartyTemp.ID()#";");
    WriteLine("opts.stPartyTemp = "#oPartyTemp.Value()#";");}
    if (oPartyStartTime) {WriteLine("opts.idPartyStartTime = "#oPartyStartTime.ID()#";");
    WriteLine("opts.stPartyStartTime = "#oPartyStartTime.Value()#";");}
    if (oPartyStartDay) {WriteLine("opts.idPartyStartDay = "#oPartyStartDay.ID()#";");
    WriteLine("opts.stPartyStartDay = "#oPartyStartDay.Value()#";");}
    if (oPartyStartMonth) {WriteLine("opts.idPartyStartMonth = "#oPartyStartMonth.ID()#";");
    WriteLine("opts.stPartyStartMonth = "#oPartyStartMonth.Value()#";");}
    if (oPartyStartYear) {WriteLine("opts.idPartyStartYear = "#oPartyStartYear.ID()#";");
    WriteLine("opts.stPartyStartYear = "#oPartyStartYear.Value()#";");}
    if (oPartyStopTime) {WriteLine("opts.idPartyStopTime = "#oPartyStopTime.ID()#";");
    WriteLine("opts.stPartyStopTime = "#oPartyStopTime.Value()#";");}
    if (oPartyStopDay) {WriteLine("opts.idPartyStopDay = "#oPartyStopDay.ID()#";");
    WriteLine("opts.stPartyStopDay = "#oPartyStopDay.Value()#";");}
    if (oPartyStopMonth) {WriteLine("opts.idPartyStopMonth = "#oPartyStopMonth.ID()#";");
    WriteLine("opts.stPartyStopMonth = "#oPartyStopMonth.Value()#";");}
    if (oPartyStopYear) {WriteLine("opts.idPartyStopYear = "#oPartyStopYear.ID()#";");
    WriteLine("opts.stPartyStopYear = "#oPartyStopYear.Value()#";");}

    if (oTemperature)
    {
      WriteLine("opts.stTemp = "#oTemperature.Value()#";");
      WriteLine("opts.stUnit = '"#sUnit#"';");
    }

    WriteLine("its"#chnId#" = new iseThermostat_2ndGen("#chnId#", "#rState#", "#iLvlDpId#", "#rMin#", "#rMax#", " #system.GetVar("iReadOnlyState")#", "#system.GetVar('bSliderFlag')#", opts);");
  WriteLine("</script>");

  return;
}

function ::CreateHeatingControlHmIP() {

  integer devFwMajor = 0;
  integer devFwMinor = 0;
  integer devFwPatch = 0;
  Call("/esp/functions.fn::getFirmwareVersion()");


  object ch = dom.GetObject(chnId);
  string chnAddress = ch.Address();
  string chnLabel = ch.Label();

  integer chInterfaceID = ch.Interface();
  object chInterface = dom.GetObject(chInterfaceID);

  string tUnit = "&deg;<i>C</i>";
  string hUnit = "&#37;";
  real rState = 0;

  object oTemperature = cObj.DPByControl("HEATING_CONTROL_HMIP.TEMPERATURE");
  object oSetPoint = cObj.DPByControl("HEATING_CONTROL_HMIP.SETPOINT");
  object oWindowState = cObj.DPByControl("HEATING_CONTROL_HMIP.WINDOW_STATE");

  object oActiveProfile = cObj.DPByControl("HEATING_CONTROL_HMIP.ACTIVE_PROFILE");
  object oHumidity = cObj.DPByControl("HEATING_CONTROL_HMIP.HUMIDITY");
  object oSetPointMode = cObj.DPByControl("HEATING_CONTROL_HMIP.SETPOINT_MODE");
  object oControlMode = cObj.DPByControl("HEATING_CONTROL_HMIP.CONTROL_MODE");
  object oModeBoost = cObj.DPByControl("HEATING_CONTROL_HMIP.BOOST_MODE");
  object oPartyStart = cObj.DPByControl("HEATING_CONTROL_HMIP.PARTY_TIME_START");
  object oPartyEnd = cObj.DPByControl("HEATING_CONTROL_HMIP.PARTY_TIME_END");
  object oPartySetPointTemp = cObj.DPByControl("HEATING_CONTROL_HMIP.PARTY_SETPOINT_TEMP");
  object oPartyMode = cObj.DPByControl("HEATING_CONTROL_HMIP.PARTY_MODE");

  string sReadOnly = "";
  rState = oSetPoint.Value();

  if ( oTemperature )
  {
    ! WriteLine(' <script>conInfo("oTemperature: '#oTemperature.Value()#'");</script> ');
    actTemp = oTemperature.Value();
  }
  WriteLine("<tr>");
    WriteLine("<td id='"#chnId#"tdACTUAL_TEMPERATURE'>");
      WriteLine("<table class='ControlBtnInfo' style='width:200px'>");
        WriteLine("<tr>");
          WriteLine("<td  id='"#chnId#"ACTUAL_TEMPERATURE'>${stringTableWeatherTemperature}</td>");
          WriteLine("<td><span id='"#chnId#"valACTUAL_TEMPERATURE'></span><span><b>"#tUnit#"</b></span></td>");
        WriteLine("</tr>");
      WriteLine("</table>");
    WriteLine("</td>");

    if (oHumidity) {
      WriteLine("<td id='"#chnId#"tdHUMIDITY'>");
        WriteLine("<table class='ControlBtnInfo' style='width:200px'>");
          WriteLine("<tr>");
            WriteLine("<td>${stringTableWeatherHumidity}</td>");
            WriteLine("<td><span id='"#chnId#"valHUMIDITY'></span><span><b>"#hUnit#"</b></span></td>");
          WriteLine("</tr>");
        WriteLine("</table>");
      WriteLine("</td>");
    }

  WriteLine("</tr>");

    WriteLine("<tr>");
      WriteLine("<td id='"#chnId#"tdWINDOW_STATE' >");
        WriteLine("<table class='ControlBtnInfo' style='width:200px'>");
          WriteLine("<tr>");
            WriteLine("<td  id='"#chnId#"WINDOW_STATE'>${stringTableWindowState}: </td>");
            WriteLine("<td><span id='"#chnId#"valWINDOW_STATE'></span></td>");
          WriteLine("</tr>");
        WriteLine("</table>");
      WriteLine("</td>");
    WriteLine("</tr>");

 ! SLIDER

  WriteLine("<tr>");
    WriteLine("<td colspan='1' id='slidCtrl"#cObj.ID()#"' class='CLASS02529'>");
      WriteLine("<div id='sl9base' style='width:200px;height:82px;border:0; background-repeat:no-repeat; background-position:center; background-image:url(/ise/img/slider/slider_grey.png)'>");
    WriteLine("</td>");

    WriteLine("<td class='CLASS02529'>");
    WriteLine("  <div id='button"#chnId#"' class='PercBtn' >");
    WriteLine("  <table width='100%' height='100%' class='CLASS02530'>");
    WriteLine("    <tr class='CLASS02531'>");
    WriteLine("      <td colspan='2' class='CLASS02546'><input id='"#chnId#"Deg' type='text' value='"#rState.ToString(2)#"' size='4' class='CLASS02542' style='text-align:center' "#sReadOnly#" /><span id='"#chnId#"unitDegree'><b>"#tUnit#"</b></span></td></tr>");
    WriteLine("      <input id='"#chnId#"Perc' type='hidden' value='"#rState.ToString(2)#"' />");
    WriteLine("      <td align='center' class='CLASS02548'>");
    WriteLine("      <table cellspacing='0' cellpadding='0'><tr><td><img id='"#chnId#"Up' height='12px' width='40px' src='/ise/img/up.png' class='CLASS02543' /></td></tr><tr><td><img id='"#chnId#"Down' height='12px' width='40px' src='/ise/img/down.png' class='CLASS02543' /></td></tr></table>");
    WriteLine("      </td><td align='center' class='CLASS02548'><img src='/ise/img/enter.png' width='40px' height='25px' class='CLASS02543' /></td>");
    WriteLine("    </tr>");
    WriteLine("  </table>");
    WriteLine("  </div>");
    WriteLine("</td>");
  WriteLine("</tr>");

  ! END SLIDER

  WriteLine("<tr>");
    WriteLine("<td>");
      WriteLine("<table width='100%' height='100%' class='hidden_'>");
        WriteLine("<tr>");
          WriteLine("<td>");
            ! AUTO
            WriteLine("<div class='ControlBtnOff CLASS02551' id='"#chnId#"Auto' >${stringTableClimateControlRTTransceiverAutoModeBR}</div>");
          WriteLine("</td>");
          WriteLine("<td>");
            ! BOOST
            WriteLine("<div class='ControlBtnOff CLASS02551' id='"#chnId#"Boost' >${stringTableClimateControlRTTransceiverBoostModeBR}</div>");
          WriteLine("</td>");
        WriteLine("</tr>");
        WriteLine("<tr>");
          WriteLine("<td>");
            ! MANU
            WriteLine("<div class='ControlBtnOff CLASS02551' id='"#chnId#"Manu' >${stringTableClimateControlRTTransceiverManuModeBR}</div>");
          WriteLine("</td>");
          WriteLine("<td>");
            ! PARTY
            WriteLine("<div class='ControlBtnOff CLASS02551 hidden_' id='"#chnId#"Party' >${stringTableClimateControlRTTransceiverPartyModeBR}</div>");
          WriteLine("</td>");
        WriteLine("</tr>");
      WriteLine("</table>");
    WriteLine("</td>");
    WriteLine("<td>");
      WriteLine("<table width='100%' height='100%' class='hidden_'>");

        WriteLine("<tr>");
           ! OFF
          WriteLine("<td>");
            WriteLine("<div class='ControlBtnOff CLASS02551 hidden_' style='line-height:35px' id='"#chnId#"Off'>${actionStatusControlLblOff}</div>");
          WriteLine("</td>");
        WriteLine("</tr>");

        WriteLine("<tr>");
         ! ON
          WriteLine("<td>");
            WriteLine("<div class='ControlBtnOff CLASS02551 hidden_' style='line-height:35px' id='"#chnId#"On'>${actionStatusControlLblOn}</div>");
          WriteLine("</td>");
        WriteLine("</tr>");

      WriteLine("</table>");
    WriteLine("</td>");
  WriteLine("</tr>");
  WriteLine("<tr>");
    WriteLine("<td>");
      WriteLine("<table class='ControlBtnInfo' style='width: 100%;'>");
        WriteLine("<tr>");
          WriteLine("<td>");
             WriteLine("<span>${weeklyProfileLbl}</span>");
          WriteLine("</td>");
          WriteLine("<td>");
            WriteLine("<select id='"#chnId#"ActiveProfile' onchange='setDpState("#oActiveProfile.ID()#",this.value)'>");
              WriteLine("<option value='1'>${weeklyProfile1}</option>");
              WriteLine("<option value='2'>${weeklyProfile2}</option>");
              WriteLine("<option value='3'>${weeklyProfile3}</option>");

              ! Some devices (eTRV and WTH with a firmware < 1.6) do have only 3 weekly programs while others have 6 of them.
              if (
                ((chnLabel != "HMIP-eTRV")
                && (chnLabel != "HmIP-eTRV")
                && (chnLabel != "HMIP-eTRV-2")
                && (chnLabel != "HmIP-eTRV-2")
                && (chnLabel != "HmIP-eTRV-2-UK")
                && (chnLabel != "HmIP-WTH")
                && (chnLabel != "HMIP-WTH"))
                || (((chnLabel == "HmIP-WTH") || (chnLabel == "HMIP-WTH")) && ((devFwMajor > 1) || ((devFwMajor == 1) && (devFwMinor >= 6))))
               ) {
                  WriteLine("<option value='4'>${weeklyProfile4}</option>");
                  WriteLine("<option value='5'>${weeklyProfile5}</option>");
                  WriteLine("<option value='6'>${weeklyProfile6}</option>");
              }
            WriteLine("</select>");
          WriteLine("</td>");

        WriteLine("</tr>");
      WriteLine("</table>");
    WriteLine("</td>");
  WriteLine("</tr>");

  WriteLine("<tr>");
    WriteLine("<td colspan='2'>");
      WriteLine("<table id='"#chnId#"showPartyEnd' class='ControlBtnInfo hidden' style='background-color:#3678C9; min-width:200px; width:100%'>");
        WriteLine("<tr>");
          WriteLine("<td><div>${partyModeEndTime}</div><div id='"#chnId#"partyEndTime'></div></td>");
        WriteLine("</tr>");
      WriteLine("</table>");
    WriteLine("</td>");
  WriteLine("</tr>");

  WriteLine("<script type='text/javascript'>");
    WriteLine("var opts = {};");
    WriteLine("opts.chID = '"#chnId#"';");
    WriteLine("opts.chAddress = '"#chnAddress#"';");
    WriteLine("opts.chInterface = '"#chInterface.Name()#"';");
    if (oActiveProfile) {
      WriteLine("opts.activeProfileID = '"#oActiveProfile.ID()#"';");
      WriteLine("opts.ACTIVE_PROFILE = '"#oActiveProfile.Value()#"';");
    }
    if (oTemperature) {
      WriteLine("opts.temperatureID = '"#oTemperature.ID()#"';");
      WriteLine("opts.ACTUAL_TEMPERATURE = '"#oTemperature.Value()#"';");
    }
    if (oHumidity) {
      WriteLine("opts.humidityID = '"#oHumidity.ID()#"';");
      WriteLine("opts.HUMIDITY = '"#oHumidity.Value()#"';");
    }
    if (oWindowState) {
      WriteLine("opts.windowStateID = '"#oWindowState.ID()#"';");
      WriteLine("opts.WINDOW_STATE = '"#oWindowState.Value()#"';");
    }
    if (oSetPoint) {
      WriteLine("opts.setPointID = '"#oSetPoint.ID()#"';");
      WriteLine("opts.SET_POINT_TEMPERATURE = '"#oSetPoint.Value()#"';");
    }
    if (oSetPointMode) {
      WriteLine("opts.setPointModeID = '"#oSetPointMode.ID()#"';");
      WriteLine("opts.SET_POINT_MODE = '"#oSetPointMode.Value()#"';");
    }
    if (oControlMode) {
      WriteLine("opts.controlModeID = '"#oControlMode.ID()#"';");
      WriteLine("opts.controlModeValue = '"#oControlMode.Value()#"';");
    }
    if (oModeBoost) {
      WriteLine("opts.boostID = '"#oModeBoost.ID()#"';");
      WriteLine("opts.BOOST_MODE = '"#oModeBoost.Value()#"';");
    }
    if (oPartyStart) {
      WriteLine("opts.partyStartID = '"#oPartyStart.ID()#"';");
      WriteLine("opts.partyStartValue = '"#oPartyStart.Value()#"';");
    }
    if (oPartyEnd) {
      WriteLine("opts.partyEndID = '"#oPartyEnd.ID()#"';");
      WriteLine("opts.partyEndValue = '"#oPartyEnd.Value()#"';");
    }

    if (oPartySetPointTemp) {
      WriteLine("opts.partySetPointTempID = '"#oPartySetPointTemp.ID()#"';");
      WriteLine("opts.partySetPointTempValue = '"#oPartySetPointTemp.Value()#"';");
    }

    if (oPartyMode) {
      WriteLine("opts.partyModeID = '"#oPartyMode.ID()#"';");
      WriteLine("opts.partyMode = '"#oPartyMode.Value()#"';");
    }

    WriteLine("its"#chnId#" = new iseThermostatHMIP(opts);");
  WriteLine("</script>");
}

! ALPHA-IP-RBGa
function ::CreateHeatingControlHmIPa() {
  string tUnit = "&deg;<i>C</i>";
  string hUnit = "&#37;";
  real actTemp = -1.0;
  real setPointValue = -1.0;
  boolean frostProtection = false;
  integer valWindowState;
  string windowState = "--";

  object oTemperature = cObj.DPByControl("HEATING_CONTROL_HMIP.TEMPERATURE");
  object oFrostProtection = cObj.DPByControl("HEATING_CONTROL_HMIP.FROST_PROTECTION");
  object oSetPoint = cObj.DPByControl("HEATING_CONTROL_HMIP.SETPOINT");
  object oWindowState = cObj.DPByControl("HEATING_CONTROL_HMIP.WINDOW_STATE");


  string sReadOnly = "";

  if (oSetPoint) {
    setPointValue = oSetPoint.Value();
  }

  if ( oTemperature ) {
    actTemp = oTemperature.Value();
  }

  if ( oFrostProtection ) {
    frostProtection = oFrostProtection.Value();
  }

  if ( oWindowState ) {
    valWindowState = oWindowState.Value();

    if (valWindowState == 0) {
      windowState = "${infoStatusControlLblClosed}";
    }

    if (valWindowState == 1) {
      windowState = "${infoStatusControlLblOpen}";
    }

  }

  WriteLine("<tr>");
    WriteLine("<td>");
      WriteLine("<table class='ControlBtnInfo' style='width:200px'>");
        WriteLine("<tr>");
          WriteLine("<td>${stringTableWeatherTemperature}:&nbsp;"#actTemp.ToString(2)#"<span><b>"#tUnit#"</b></span></td>");
        WriteLine("</tr>");
      WriteLine("</table>");
    WriteLine("</td>");

    ! WriteLine("<td>");
    !  WriteLine("<table class='ControlBtnInfo' style='width:200px'>");
    !    WriteLine("<tr>");
    !     WriteLine("<td>${lblFrostProtection}: "#frostProtection#"</td>");
    !    WriteLine("</tr>");
    !  WriteLine("</table>");
    ! WriteLine("</td>");
  WriteLine("</tr>");

  WriteLine("<tr>");
    WriteLine("<td>");
      WriteLine("<table class='ControlBtnInfo' style='width:200px'>");
        WriteLine("<tr>");
          WriteLine("<td>${stringTableSetPointTemperature}: "#setPointValue.ToString(2)#"<span><b>"#tUnit#"</b></span></td>");
        WriteLine("</tr>");
      WriteLine("</table>");
    WriteLine("</td>");

    WriteLine("<td>");
      WriteLine("<table class='ControlBtnInfo' style='width:200px'>");
        WriteLine("<tr>");
          WriteLine("<td>${stringTableWindowState}: </td>");
          WriteLine("<td><span></span>"#windowState#"</td>");
        WriteLine("</tr>");
      WriteLine("</table>");
    WriteLine("</td>");
  WriteLine("</tr>");
}

function ::CreateBWTHSwitchState() {
    object oValveState = cObj.DPByControl("SWTICH.STATE");

    string lblValveState = "${stringTableValveStateNotAvailable}";
    boolean valveState = false;

    if (oValveState) {
      valveState = oValveState.Value();

      if (valveState) {
        lblValveState = "${stringTableValveStateTrue}";
      } else {
        lblValveState = "${stringTableValveStateFalse}";
      }

    }

    WriteLine("<td>");
      WriteLine("<table class='ControlBtnInfo' style='width:200px'>");
        WriteLine("<tr>");
          WriteLine("<td>"#lblValveState#"</td>");
        WriteLine("</tr>");
      WriteLine("</table>");
    WriteLine("</td>");
  WriteLine("</tr>");

}